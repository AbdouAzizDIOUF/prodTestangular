{"version":3,"sources":["@agm/core/services/maps-api-loader/maps-api-loader.ts","@agm/core/services/google-maps-api-wrapper.ts","@agm/core/services/managers/layer-manager.ts","@agm/core/directives/bicycling-layer.ts","@agm/core/services/managers/circle-manager.ts","@agm/core/directives/circle.ts","@agm/core/services/managers/data-layer-manager.ts","@agm/core/directives/data-layer.ts","@agm/core/services/fit-bounds.ts","@agm/core/directives/fit-bounds.ts","@agm/core/services/managers/marker-manager.ts","@agm/core/services/managers/info-window-manager.ts","@agm/core/directives/info-window.ts","@agm/core/services/managers/kml-layer-manager.ts","@agm/core/directives/kml-layer.ts","@agm/core/utils/mvcarray-utils.ts","@agm/core/services/managers/polygon-manager.ts","@agm/core/services/managers/polyline-manager.ts","@agm/core/services/managers/rectangle-manager.ts","@agm/core/directives/map.ts","@agm/core/directives/marker.ts","@agm/core/directives/polygon.ts","@agm/core/directives/polyline-icon.ts","@agm/core/directives/polyline-point.ts","@agm/core/directives/polyline.ts","@agm/core/directives/rectangle.ts","@agm/core/directives/transit-layer.ts","@agm/core/services/google-maps-types.ts","@agm/core/services/geocoder-service.ts","@agm/core/utils/browser-globals.ts","@agm/core/services/maps-api-loader/lazy-maps-api-loader.ts","@agm/core/services/maps-api-loader/noop-maps-api-loader.ts","@agm/core/map-types.ts","@agm/core/core.module.ts","@agm/core/index.ts","@agm/core/agm-core.ts","./node_modules/@agm/core/node_modules/tslib/tslib.es6.js","../../../../../../packages/forms/src/directives/control_value_accessor.ts","../../../../../../packages/forms/src/directives/checkbox_value_accessor.ts","../../../../../../packages/forms/src/directives/default_value_accessor.ts","../../../../../../packages/forms/src/directives/abstract_control_directive.ts","../../../../../../packages/forms/src/directives/control_container.ts","../../../../../../packages/forms/src/directives/ng_control.ts","../../../../../../packages/forms/src/directives/ng_control_status.ts","../../../../../../packages/forms/src/validators.ts","../../../../../../packages/forms/src/directives/number_value_accessor.ts","../../../../../../packages/forms/src/directives/radio_control_value_accessor.ts","../../../../../../packages/forms/src/directives/range_value_accessor.ts","../../../../../../packages/forms/src/directives/error_examples.ts","../../../../../../packages/forms/src/directives/reactive_errors.ts","../../../../../../packages/forms/src/directives/select_control_value_accessor.ts","../../../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts","../../../../../../packages/forms/src/directives/shared.ts","../../../../../../packages/forms/src/model.ts","../../../../../../packages/forms/src/directives/ng_form.ts","../../../../../../packages/forms/src/directives/abstract_form_group_directive.ts","../../../../../../packages/forms/src/directives/template_driven_errors.ts","../../../../../../packages/forms/src/directives/ng_model_group.ts","../../../../../../packages/forms/src/directives/ng_model.ts","../../../../../../packages/forms/src/directives/ng_no_validate_directive.ts","../../../../../../packages/forms/src/directives/reactive_directives/form_control_directive.ts","../../../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts","../../../../../../packages/forms/src/directives/reactive_directives/form_group_name.ts","../../../../../../packages/forms/src/directives/reactive_directives/form_control_name.ts","../../../../../../packages/forms/src/directives/validators.ts","../../../../../../packages/forms/src/directives.ts","../../../../../../packages/forms/src/form_builder.ts","../../../../../../packages/forms/src/version.ts","../../../../../../packages/forms/src/form_providers.ts","../../../../../../packages/forms/src/forms.ts","../../../../../../packages/forms/public_api.ts","../../../../../../packages/forms/index.ts","../../../../../../packages/forms/forms.ts","./node_modules/@babel/runtime/regenerator/index.js","ngx-slick-carousel/slick.component.ts","ngx-slick-carousel/index.ts","./node_modules/regenerator-runtime/runtime.js","./src/app/globalFrontendComponents/Banner/Banner.component.ts","./src/app/globalFrontendComponents/Banner/Banner.component.html","./src/app/globalFrontendComponents/FeatureGridSection/FeatureGridSection.component.ts","./src/app/globalFrontendComponents/FeatureGridSection/FeatureGridSection.component.html","./src/app/globalFrontendComponents/FeatureSection/FeatureSection.component.ts","./src/app/globalFrontendComponents/FeatureSection/FeatureSection.component.html","./src/app/globalFrontendComponents/MapBanner/MapBanner.component.ts","./src/app/globalFrontendComponents/MapBanner/MapBanner.component.html","./src/app/globalFrontendComponents/MostVisitedPlaces/MostVisitedPlaces.component.ts","./src/app/globalFrontendComponents/MostVisitedPlaces/MostVisitedPlaces.component.html","./src/app/globalFrontendComponents/Pagination/Pagination.component.ts","./src/app/globalFrontendComponents/Pagination/Pagination.component.html","./src/app/globalFrontendComponents/ParallaxSection/Parallax.component.ts","./src/app/globalFrontendComponents/ParallaxSection/Parallax.component.html","./src/app/globalFrontendComponents/PopuplarCategories/PopularCategories.component.ts","./src/app/globalFrontendComponents/PopuplarCategories/PopularCategories.component.html","./src/app/globalFrontendComponents/Pricing/Pricing.component.ts","./src/app/globalFrontendComponents/Pricing/Pricing.component.html","./src/app/globalFrontendComponents/Rating/Rating.component.ts","./src/app/globalFrontendComponents/Rating/Rating.component.html","./src/app/globalFrontendComponents/RecentBlog/RecentBlog.component.ts","./src/app/globalFrontendComponents/RecentBlog/RecentBlog.component.html","./src/app/globalFrontendComponents/Services/Services.component.ts","./src/app/globalFrontendComponents/Services/Services.component.html","./src/app/globalFrontendComponents/Team/Team.component.ts","./src/app/globalFrontendComponents/Team/Team.component.html","./src/app/globalFrontendComponents/Testimonial/Testimonial.component.ts","./src/app/globalFrontendComponents/Testimonial/Testimonial.component.html","./src/app/globalFrontendComponents/global.module.ts"],"names":["tslib_1.__decorate","layerId","tslib_1.__param","google","getDOM","isPromise","isObservable","Examples","_buildValueString","_extractId","resolvedPromise","formControlBinding","formDirectiveProvider","NgNoValidate","NgSelectMultipleOption","InternalFormsSharedModule","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","value","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","key","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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AkFU,GAA1C,EAlFwD;AAAA,UAAa,oDAAM;AAAnB,GAkFxD;AAAA;;AAtFa,gBAAgB,4DAAzB,CADH,8EAAY,CAKmB,oBALnB,EAKwD,oDALxD,CAAZ,CACG,CAAyB,EAAhB,gBAAgB,CAAhB;AAsFX;AC3FF,IAAIC,SAAO,GAAG,CAAd;AACA;AACG;AAC4D;AAC7D;AACY;AACE;AAC6B;AACN;AACT;AAC5B;AACa;AACY;AACY;AACzB;AACQ;AACA;AACf;AACD;AACS;AAC8C;AACsC;AAC5E;AACV;AACR;AACA;AACqB;AACI;AACA;AACR;AACpB;AACsB;AACM;AACzB;AACH;AACsB;AACT;AACU;AACuB;AACzB;AACd;AACJ;AACH;AAC2B;AACK;AACf;AACV;AACmB;AACH;AACC;AACE;AACJ;AACC;AACb;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACA;AACA;AACA;AACA;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACC;AACF;AACC;AACd;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACrC;AACpD;AACD;AAC0F;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACI;AACL;AACC;AACd;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACvD;AAClC;AACD;AAC0F;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACE;AACJ;AACE;AACd;AACW;AACO;AACF;AACb;AACuF;AACG;AACA;AACA;AACA;AACA;AACrC;AACpD;AACD;AAC0F;AACD;AACzF;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACG;AACJ;AACC;AACd;AACW;AACO;AACF;AACb;AACyF;AACzF;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACC;AACH;AACE;AACd;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACA;AACvD;AAClC;AACD;AAC0F;AACJ;AACtF;AACF;AACF;AACF;AACF;AACD;AACF;AACE;;AAKN,IAAa,YAAY,iBAAzB;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AACT,aAAO,KAAK,MAAL,IAAe,OAAtB;AACD;AACH;AAEC;AACE;AACE;AACE;AACE;AAEH;AAAO;AAEH;AAAO;AAEJ;;;;wBAAC;AACV,aAAO,KAAK,MAAL,KAAgB,QAAvB;AACD;AACH;AAEC;AACE;AACE;AACE;AAEH;AAAO;AAGT;AAAO;;;;wBAAI;AACT,aAAO,KAAK,MAAL,KAAgB,QAAvB;AACD;AACH;AAEC;AAA8D;AACpD;AAAO;AAGuB;AAGc;;;;wBAe5C;AACP,aAAO,CAAC,KAAK,QAAb;AACD;AACH;AAEC;AAEI;AAAO;AACG;AAEJ;;;;wBAQI;AACX,aAAO,CAAC,KAAK,OAAb;AACD;AACH;AAEC;AAAqE;AAC5C;AAA2D;AAChE;;;;wBAqBP;AACV,aAAO,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAmC,KAAK,MAAL,GAAc,KAAK,MAAL,CAAY,QAA1B,GAAqC,QAA/E;AACD;;;wBAmeO;AACN,UAAI,CAAC,GAAoB,IAAzB;;AAEA,aAAO,CAAC,CAAC,OAAT,EAAkB;AAChB,SAAC,GAAG,CAAC,CAAC,OAAN;AACD;;AAED,aAAO,CAAP;AACD;;;;;AA8GH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACa,W;;;;;AACb;AAAQ;AAGL;AAAO;AAIU;AAKP;AAAO;AACU;AAEsB;AAC5C;AAAO;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;AAFc,CAhBvC;;AAoBA,WAkByB,SAlBzB,IAkByB;AAAA,SAAM,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAN;AAAA,CAlBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMG,iBAAe,GAAG,MAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAMa,O;;;;;AAoEX,mBACwB,MADxB,EAE+C,UAF/C,EAGqD,eAHrD,EAKmD,cALnD,EAKyF;AAAA;;AAAA;;AACvF;AAzEc,sBAAuB,IAAI,WAAJ,EAAvB;AAClB;;AAWE,0BAAc,KAAd;AACF;AAEK;AAAwB;AAMrB;AACiB;;AA2CE,qBAAS,IAAI,0DAAJ,EAAT;AASvB,YAAK,OAAL,GAAe,MAAf;AACA,YAAK,cAAL,GAAsB,UAAU,IAAI,EAApC;AACA,YAAK,mBAAL,GAA2B,eAAe,IAAI,EAA9C;AACA,YAAK,aAAL,GAAqB,mBAAmB,CAAC,wLAAM,cAAP,CAAxC;AALuF;AAMxF;AACH;;;;;gCAEc,O,EAAsB;AAChC,WAAK,eAAL;;AACA,UAAI,CAAC,KAAK,WAAV,EAAuB,KAAK,aAAL;;AACvB,UAAI,gBAAgB,OAApB,EAA6B;AAC3B,aAAK,eAAL,CAAqB,OAArB;AACD;;AAED,UAAI,iBAAiB,CAAC,OAAD,EAAU,KAAK,SAAf,CAArB,EAAgD;AA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","file":"default~dashboard-dashboard-module~listing-listing-module~pages-pages-module.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  abstract load(): Promise<void>;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport * as mapTypes from './google-maps-types';\nimport { Polyline, PolylineOptions } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\n// todo: add types for this\ndeclare var google: any;\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\n@Injectable()\nexport class GoogleMapsAPIWrapper {\n  private _map: Promise<mapTypes.GoogleMap>;\n  private _mapResolver: (value?: mapTypes.GoogleMap) => void;\n\n  constructor(private _loader: MapsAPILoader, private _zone: NgZone) {\n    this._map =\n        new Promise<mapTypes.GoogleMap>((resolve: () => void) => { this._mapResolver = resolve; });\n  }\n\n  createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._loader.load().then(() => {\n        const map = new google.maps.Map(el, mapOptions);\n        this._mapResolver(map as mapTypes.GoogleMap);\n        return;\n      });\n    });\n  }\n\n  setMapOptions(options: mapTypes.MapOptions) {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then((m: mapTypes.GoogleMap) => { m.setOptions(options); });\n    });\n  }\n\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(options: mapTypes.MarkerOptions = {} as mapTypes.MarkerOptions, addToMap: boolean = true):\n      Promise<mapTypes.Marker> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        if (addToMap) {\n          options.map = map;\n        }\n        return new google.maps.Marker(options);\n      });\n    });\n  }\n\n  createInfoWindow(options?: mapTypes.InfoWindowOptions): Promise<mapTypes.InfoWindow> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(() => { return new google.maps.InfoWindow(options); });\n    });\n  }\n\n  /**\n   * Creates a google.map.Circle for the current map.\n   */\n  createCircle(options: mapTypes.CircleOptions): Promise<mapTypes.Circle> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n        options.map = map;\n        return new google.maps.Circle(options);\n      });\n    });\n  }\n\n  /**\n   * Creates a google.map.Rectangle for the current map.\n   */\n  createRectangle(options: mapTypes.RectangleOptions): Promise<mapTypes.Rectangle> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        options.map = map;\n        return new google.maps.Rectangle(options);\n      });\n    });\n  }\n\n  createPolyline(options: PolylineOptions): Promise<Polyline> {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\n        let line = new google.maps.Polyline(options);\n        line.setMap(map);\n        return line;\n      });\n    });\n  }\n\n  createPolygon(options: mapTypes.PolygonOptions): Promise<mapTypes.Polygon> {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\n        let polygon = new google.maps.Polygon(options);\n        polygon.setMap(map);\n        return polygon;\n      });\n    });\n  }\n\n  /**\n   * Creates a new google.map.Data layer for the current map\n   */\n  createDataLayer(options?: mapTypes.DataOptions): Promise<mapTypes.Data> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(m => {\n        let data = new google.maps.Data(options);\n        data.setMap(m);\n        return data;\n      });\n    });\n  }\n\n  /**\n   * Creates a TransitLayer instance for a map\n   * @param {TransitLayerOptions} options - used for setting layer options\n   * @returns {Promise<TransitLayer>} a new transit layer object\n   */\n  createTransitLayer(options: mapTypes.TransitLayerOptions): Promise<mapTypes.TransitLayer>{\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        let newLayer: mapTypes.TransitLayer = new google.maps.TransitLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n\n  /**\n   * Creates a BicyclingLayer instance for a map\n   * @param {BicyclingLayerOptions} options - used for setting layer options\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n   */\n  createBicyclingLayer(options: mapTypes.BicyclingLayerOptions): Promise<mapTypes.BicyclingLayer>{\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        let newLayer: mapTypes.BicyclingLayer = new google.maps.BicyclingLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n\n  /**\n   * Determines if given coordinates are insite a Polygon path.\n   */\n  containsLocation(latLng: mapTypes.LatLngLiteral, polygon: mapTypes.Polygon): Promise<boolean> {\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\n  }\n\n  subscribeToMapEvent<E>(eventName: string): Observable<E> {\n    return new Observable((observer: Observer<E>) => {\n      this._map.then((m: mapTypes.GoogleMap) => {\n        m.addListener(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\n      });\n    });\n  }\n\n  clearInstanceListeners() {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then((map: mapTypes.GoogleMap) => {\n        google.maps.event.clearInstanceListeners(map);\n      });\n    });\n  }\n\n  setCenter(latLng: mapTypes.LatLngLiteral): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.setCenter(latLng));\n    });\n  }\n\n  getZoom(): Promise<number> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getZoom());\n    });\n  }\n\n  getBounds(): Promise<mapTypes.LatLngBounds> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getBounds());\n    });\n  }\n\n  getMapTypeId(): Promise<mapTypes.MapTypeId> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getMapTypeId());\n    });\n  }\n\n  setZoom(zoom: number): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.setZoom(zoom));\n    });\n  }\n\n  getCenter(): Promise<mapTypes.LatLng> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getCenter());\n    });\n  }\n\n  panTo(latLng: mapTypes.LatLng | mapTypes.LatLngLiteral): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panTo(latLng));\n    });\n  }\n\n  panBy(x: number, y: number): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panBy(x, y));\n    });\n  }\n\n  fitBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.fitBounds(latLng, padding));\n    });\n  }\n\n  panToBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panToBounds(latLng, padding));\n    });\n  }\n\n  /**\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n   */\n  getNativeMap(): Promise<mapTypes.GoogleMap> { return this._map; }\n\n  /**\n   * Triggers the given event name on the map instance.\n   */\n  triggerMapEvent(eventName: string): Promise<void> {\n    return this._map.then((m) => google.maps.event.trigger(m, eventName));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AgmBicyclingLayer } from '../../directives/bicycling-layer';\nimport { AgmTransitLayer } from '../../directives/transit-layer';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { BicyclingLayer, BicyclingLayerOptions, GoogleMap, TransitLayer, TransitLayerOptions } from '../google-maps-types';\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\n\n@Injectable()\nexport class LayerManager {\n    private _layers: Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>> =\n        new Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>>();\n\n    constructor(private _wrapper: GoogleMapsAPIWrapper) {}\n\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer: AgmTransitLayer, options: TransitLayerOptions): void {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer: AgmBicyclingLayer, options: BicyclingLayerOptions): void {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer: AgmTransitLayer | AgmBicyclingLayer): Promise<void> {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer: AgmTransitLayer | AgmBicyclingLayer, options: TransitLayerOptions | BicyclingLayerOptions): Promise<void> {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            } else {\n               return this._wrapper.getNativeMap().then( (map: GoogleMap) => {\n                   currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerManager } from '../services/managers/layer-manager';\n\nlet layerId = 0;\n\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\n@Directive({\n    selector: 'agm-bicycling-layer',\n})\n\nexport class AgmBicyclingLayer implements OnInit, OnChanges, OnDestroy{\n    private _addedToManager = false;\n    private _id: string = (layerId++).toString();\n\n    /**\n     * Hide/show bicycling layer\n     */\n    @Input() visible = true;\n\n    constructor( private _manager: LayerManager ) {}\n\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, {visible: this.visible});\n        this._addedToManager = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\n        }\n    }\n\n    /** @internal */\n    id(): string { return this._id; }\n\n    /** @internal */\n    toString(): string { return `AgmBicyclingLayer-${this._id.toString()}`; }\n\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmCircle } from '../../directives/circle';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport * as mapTypes from '../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class CircleManager {\n  private _circles: Map<AgmCircle, Promise<mapTypes.Circle>> =\n      new Map<AgmCircle, Promise<mapTypes.Circle>>();\n\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  addCircle(circle: AgmCircle) {\n    this._circles.set(circle, this._apiWrapper.createCircle({\n      center: {lat: circle.latitude, lng: circle.longitude},\n      clickable: circle.clickable,\n      draggable: circle.draggable,\n      editable: circle.editable,\n      fillColor: circle.fillColor,\n      fillOpacity: circle.fillOpacity,\n      radius: circle.radius,\n      strokeColor: circle.strokeColor,\n      strokeOpacity: circle.strokeOpacity,\n      strokePosition: circle.strokePosition,\n      strokeWeight: circle.strokeWeight,\n      visible: circle.visible,\n      zIndex: circle.zIndex,\n    }));\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  removeCircle(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => {\n      c.setMap(null);\n      this._circles.delete(circle);\n    });\n  }\n\n  setOptions(circle: AgmCircle, options: mapTypes.CircleOptions): Promise<void> {\n    return this._circles.get(circle).then((c) => {\n      if (typeof options.strokePosition === 'string') {\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n      }\n      c.setOptions(options);\n    });\n  }\n\n  getBounds(circle: AgmCircle): Promise<mapTypes.LatLngBounds> {\n    return this._circles.get(circle).then((c) => c.getBounds());\n  }\n\n  getCenter(circle: AgmCircle): Promise<mapTypes.LatLng> {\n    return this._circles.get(circle).then((c) => c.getCenter());\n  }\n\n  getRadius(circle: AgmCircle): Promise<number> {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  setCenter(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then(\n        (c) => { return c.setCenter({lat: circle.latitude, lng: circle.longitude}); });\n  }\n\n  setEditable(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n  }\n\n  setDraggable(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n  }\n\n  setVisible(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n  }\n\n  setRadius(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n  }\n\n  getNativeCircle(circle: AgmCircle): Promise<mapTypes.Circle> {\n    return this._circles.get(circle);\n  }\n\n  createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      let listener: mapTypes.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MouseEvent } from '../map-types';\nimport { LatLng, LatLngBounds, LatLngLiteral, MouseEvent as MapMouseEvent } from '../services/google-maps-types';\nimport { CircleManager } from '../services/managers/circle-manager';\n\n@Directive({\n  selector: 'agm-circle',\n})\nexport class AgmCircle implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('circleDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() radius = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output() mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output() mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output() radiusChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output() rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  private _circleAddedToManager = false;\n\n  private static _mapOptions: string[] = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n  ];\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  constructor(private _manager: CircleManager) {}\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._manager.setCenter(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    if (changes['radius']) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {[propName: string]: SimpleChange}) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys =\n        Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    let events: Map<string, EventEmitter<any>> = new Map<string, EventEmitter<any>>();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n          this._manager.createEventObservable<MapMouseEvent>(eventName, this).subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then(\n                    (center) =>\n                        eventEmitter.emit({lat: center.lat(), lng: center.lng()} as LatLngLiteral));\n                break;\n              default:\n                eventEmitter.emit(\n                    {coords: {lat: value.latLng.lat(), lng: value.latLng.lng()}} as MouseEvent);\n            }\n          }));\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function(s: Subscription) { s.unsubscribe(); });\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds(): Promise<LatLngBounds> { return this._manager.getBounds(this); }\n\n  getCenter(): Promise<LatLng> { return this._manager.getCenter(this); }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmDataLayer } from './../../directives/data-layer';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { Data, DataOptions, Feature } from './../google-maps-types';\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\n@Injectable()\nexport class DataLayerManager {\n  private _layers: Map<AgmDataLayer, Promise<Data>> =\n  new Map<AgmDataLayer, Promise<Data>>();\n\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\n\n  /**\n   * Adds a new Data Layer to the map.\n   */\n  addDataLayer(layer: AgmDataLayer) {\n    const newLayer = this._wrapper.createDataLayer({\n      style: layer.style,\n    } as DataOptions)\n    .then(d => {\n      if (layer.geoJson) {\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n      }\n      return d;\n    });\n    this._layers.set(layer, newLayer);\n  }\n\n  deleteDataLayer(layer: AgmDataLayer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n\n  updateGeoJson(layer: AgmDataLayer, geoJson: Object | string) {\n    this._layers.get(layer).then(l => {\n      l.forEach(function (feature: Feature) {\n        l.remove(feature);\n\n        var index = l.features.indexOf(feature, 0);\n        if (index > -1) {\n          l.features.splice(index, 1);\n        }\n      });\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\n    });\n  }\n\n  setDataOptions(layer: AgmDataLayer, options: DataOptions)\n  {\n    this._layers.get(layer).then(l => {\n      l.setControlPosition(options.controlPosition);\n      l.setControls(options.controls);\n      l.setDrawingMode(options.drawingMode);\n      l.setStyle(options.style);\n    });\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\n   */\n  createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._layers.get(layer).then((d: Data) => {\n        d.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  /**\n   * Extract features from a geoJson using google.maps Data Class\n   * @param d : google.maps.Data class instance\n   * @param geoJson : url or geojson object\n   */\n  getDataFeatures(d: Data, geoJson: Object | string): Promise<Feature[]> {\n    return new Promise<Feature[]>((resolve, reject) => {\n        if (typeof geoJson === 'object') {\n          try {\n            const features = d.addGeoJson(geoJson);\n            resolve(features);\n          } catch (e) {\n            reject(e);\n          }\n        } else if (typeof geoJson === 'string') {\n          d.loadGeoJson(geoJson, null, resolve);\n        } else {\n          reject(`Impossible to extract features from geoJson: wrong argument type`);\n        }\n      });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DataMouseEvent, DataOptions } from './../services/google-maps-types';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\n\nlet layerId = 0;\n\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\n@Directive({\n  selector: 'agm-data-layer',\n})\nexport class AgmDataLayer implements OnInit, OnDestroy, OnChanges {\n  private static _dataOptionsAttributes: Array<string> = ['style'];\n\n  private _addedToManager = false;\n  private _id: string = (layerId++).toString();\n  private _subscriptions: Subscription[] = [];\n\n  /**\n   * This event is fired when a feature in the layer is clicked.\n   */\n  @Output() layerClick: EventEmitter<DataMouseEvent> = new EventEmitter<DataMouseEvent>();\n\n  /**\n   * The geoJson to be displayed\n   */\n  @Input() geoJson: Object | string | null = null;\n\n  /**\n   * The layer's style function.\n   */\n  @Input() style: () => void;\n\n  constructor(private _manager: DataLayerManager) { }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addDataLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const listeners = [\n      { name: 'click', handler: (ev: DataMouseEvent) => this.layerClick.emit(ev) },\n    ];\n    listeners.forEach((obj) => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return `AgmDataLayer-${this._id.toString()}`; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteDataLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    var geoJsonChange = changes['geoJson'];\n    if (geoJsonChange) {\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n    }\n\n    let dataOptions: DataOptions = {};\n\n    AgmDataLayer._dataOptionsAttributes.forEach(k => (dataOptions as any)[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : (this as any)[k]);\n\n    this._manager.setDataOptions(this, dataOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { LatLng, LatLngBounds, LatLngLiteral } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\ndeclare var google: any;\n\nexport interface FitBoundsDetails {\n  latLng: LatLng | LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map<string, LatLng | LatLngLiteral>;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable<FitBoundsDetails>;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable<LatLngBounds>;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject<number>(200);\n  protected readonly _includeInBounds$ = new BehaviorSubject<BoundsMap>(new Map<string, LatLng | LatLngLiteral>());\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time))),\n      ),\n      map(includeInBounds => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map<string, LatLng | LatLngLiteral>,\n  ) {\n    const bounds = new google.maps.LatLngBounds() as LatLngBounds;\n    includeInBounds.forEach(b => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: LatLng | LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const map = this._includeInBounds$.value;\n    map.set(id, latLng);\n    this._includeInBounds$.next(map);\n  }\n\n  removeFromBounds(latLng: LatLng | LatLngLiteral) {\n    const map = this._includeInBounds$.value;\n    map.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(map);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable<LatLngBounds> {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(latLng: LatLng | LatLngLiteral): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, Self } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FitBoundsAccessor, FitBoundsDetails, FitBoundsService } from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\n@Directive({\n  selector: '[agmFitBounds]',\n})\nexport class AgmFitBounds implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() agmFitBounds = true;\n\n  private _destroyed$: Subject<void> = new Subject<void>();\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges() {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor\n      .getFitBoundsDetails$()\n      .pipe(\n        distinctUntilChanged(\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n        ),\n        takeUntil(this._destroyed$),\n      )\n      .subscribe(details => this._updateBounds(details));\n  }\n\n  /*\n   Either the location changed, or visible status changed.\n   Possible state changes are\n   invisible -> visible\n   visible -> invisible\n   visible -> visible (new location)\n  */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (!this._latestFitBoundsDetails) {\n      return;\n    }\n    if (this.agmFitBounds === true) {\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmMarker } from './../../directives/marker';\n\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { Marker } from './../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class MarkerManager {\n  protected _markers: Map<AgmMarker, Promise<Marker>> =\n      new Map<AgmMarker, Promise<Marker>>();\n\n  constructor(protected _mapsWrapper: GoogleMapsAPIWrapper, protected _zone: NgZone) {}\n\n  async convertAnimation(uiAnim: 'BOUNCE' | 'DROP' | null): Promise<any>{\n    if (uiAnim === null) {\n      return null;\n    } else {\n      return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n    }\n  }\n\n  deleteMarker(marker: AgmMarker): Promise<void> {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return m.then((m: Marker) => {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    });\n  }\n\n  updateMarkerPosition(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then(\n        (m: Marker) => m.setPosition({lat: marker.latitude, lng: marker.longitude}));\n  }\n\n  updateTitle(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setTitle(marker.title));\n  }\n\n  updateLabel(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => { m.setLabel(marker.label); });\n  }\n\n  updateDraggable(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setDraggable(marker.draggable));\n  }\n\n  updateIcon(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setIcon(marker.iconUrl));\n  }\n\n  updateOpacity(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setOpacity(marker.opacity));\n  }\n\n  updateVisible(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setVisible(marker.visible));\n  }\n\n  updateZIndex(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setZIndex(marker.zIndex));\n  }\n\n  updateClickable(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setClickable(marker.clickable));\n  }\n\n  async updateAnimation(marker: AgmMarker) {\n    const m = await this._markers.get(marker);\n    m.setAnimation(await this.convertAnimation(marker.animation));\n  }\n\n  addMarker(marker: AgmMarker) {\n    const markerPromise = new Promise<Marker>(async (resolve) =>\n     this._mapsWrapper.createMarker({\n        position: {lat: marker.latitude, lng: marker.longitude},\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation: await this.convertAnimation(marker.animation),\n      }).then(resolve));\n    this._markers.set(marker, markerPromise);\n  }\n\n  getNativeMarker(marker: AgmMarker): Promise<Marker> {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable<T>(eventName: string, marker: AgmMarker): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._markers.get(marker).then((m: Marker) => {\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmInfoWindow } from '../../directives/info-window';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { InfoWindow, InfoWindowOptions } from '../google-maps-types';\nimport { MarkerManager } from './marker-manager';\n\n@Injectable()\nexport class InfoWindowManager {\n  private _infoWindows: Map<AgmInfoWindow, Promise<InfoWindow>> =\n      new Map<AgmInfoWindow, Promise<InfoWindow>>();\n\n  constructor(\n      private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone,\n      private _markerManager: MarkerManager) {}\n\n  deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void> {\n    const iWindow = this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n    return iWindow.then((i: InfoWindow) => {\n      return this._zone.run(() => {\n        i.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n\n  setPosition(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    }));\n  }\n\n  setZIndex(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow)\n        .then((i: InfoWindow) => i.setZIndex(infoWindow.zIndex));\n  }\n\n  open(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n          return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n        });\n      }\n      return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n    });\n  }\n\n  close(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => w.close());\n  }\n\n  setOptions(infoWindow: AgmInfoWindow, options: InfoWindowOptions) {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setOptions(options));\n  }\n\n  addInfoWindow(infoWindow: AgmInfoWindow) {\n    const options: InfoWindowOptions = {\n      content: infoWindow.content,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {lat: infoWindow.latitude, lng: infoWindow.longitude};\n    }\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n\n   /**\n    * Creates a Google Maps event listener for the given InfoWindow as an Observable\n    */\n  createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._infoWindows.get(infoWindow).then((i: InfoWindow) => {\n        i.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\n\nimport { AgmMarker } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-info-window',\n  template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class AgmInfoWindow implements OnDestroy, OnChanges, OnInit {\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * AgmMarker}).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * AgmMarker}).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  hostMarker: AgmMarker;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  content: Node;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output() infoWindowClose: EventEmitter<void> = new EventEmitter<void>();\n\n  private static _infoWindowOptionsInputs: string[] = ['disableAutoPan', 'maxWidth'];\n  private _infoWindowAddedToManager = false;\n  private _id: string = (infoWindowId++).toString();\n\n  constructor(private _infoWindowManager: InfoWindowManager, private _el: ElementRef) {}\n\n  ngOnInit() {\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n    this._infoWindowManager.addInfoWindow(this);\n    this._infoWindowAddedToManager = true;\n    this._updateOpenState();\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n        typeof this.longitude === 'number') {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes['zIndex']) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes['isOpen']) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n      this.isOpen = false;\n      this.infoWindowClose.emit();\n    });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: {[key: string]: SimpleChange}) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys = Object.keys(changes).filter(\n        k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  open(): Promise<void> { return this._infoWindowManager.open(this); }\n\n  /**\n   * Closes the info window.\n   */\n  close(): Promise<void> {\n    return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return 'AgmInfoWindow-' + this._id.toString(); }\n\n  /** @internal */\n  ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmKmlLayer } from './../../directives/kml-layer';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { KmlLayer, KmlLayerOptions } from './../google-maps-types';\n\ndeclare var google: any;\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\n@Injectable()\nexport class KmlLayerManager {\n  private _layers: Map<AgmKmlLayer, Promise<KmlLayer>> =\n      new Map<AgmKmlLayer, Promise<KmlLayer>>();\n\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  /**\n   * Adds a new KML Layer to the map.\n   */\n  addKmlLayer(layer: AgmKmlLayer) {\n    const newLayer = this._wrapper.getNativeMap().then(m => {\n      return new google.maps.KmlLayer({\n        clickable: layer.clickable,\n        map: m,\n        preserveViewport: layer.preserveViewport,\n        screenOverlays: layer.screenOverlays,\n        suppressInfoWindows: layer.suppressInfoWindows,\n        url: layer.url,\n        zIndex: layer.zIndex,\n      } as KmlLayerOptions);\n    });\n    this._layers.set(layer, newLayer);\n  }\n\n  setOptions(layer: AgmKmlLayer, options: KmlLayerOptions) {\n    this._layers.get(layer).then(l => l.setOptions(options));\n  }\n\n  deleteKmlLayer(layer: AgmKmlLayer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\n   */\n  createEventObservable<T>(eventName: string, layer: AgmKmlLayer): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._layers.get(layer).then((m: KmlLayer) => {\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { KmlMouseEvent } from './../services/google-maps-types';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\n\nlet layerId = 0;\n\n@Directive({\n  selector: 'agm-kml-layer',\n})\nexport class AgmKmlLayer implements OnInit, OnDestroy, OnChanges {\n  private _addedToManager = false;\n  private _id: string = (layerId++).toString();\n  private _subscriptions: Subscription[] = [];\n  private static _kmlLayerOptions: string[] =\n      ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n\n  /**\n   * If true, the layer receives mouse events. Default value is true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * By default, the input map is centered and zoomed to the bounding box of the contents of the\n   * layer.\n   * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n   * were never set.\n   */\n  @Input() preserveViewport = false;\n\n  /**\n   * Whether to render the screen overlays. Default true.\n   */\n  @Input() screenOverlays = true;\n\n  /**\n   * Suppress the rendering of info windows when layer features are clicked.\n   */\n  @Input() suppressInfoWindows = false;\n\n  /**\n   * The URL of the KML document to display.\n   */\n  @Input() url: string = null;\n\n  /**\n   * The z-index of the layer.\n   */\n  @Input() zIndex: number | null = null;\n\n  /**\n   * This event is fired when a feature in the layer is clicked.\n   */\n  @Output() layerClick: EventEmitter<KmlMouseEvent> = new EventEmitter<KmlMouseEvent>();\n\n  /**\n   * This event is fired when the KML layers default viewport has changed.\n   */\n  @Output() defaultViewportChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the KML layer has finished loading.\n   * At this point it is safe to read the status property to determine if the layer loaded\n   * successfully.\n   */\n  @Output() statusChange: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _manager: KmlLayerManager) {}\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addKmlLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._addedToManager) {\n      return;\n    }\n    this._updatePolygonOptions(changes);\n  }\n\n  private _updatePolygonOptions(changes: SimpleChanges) {\n    const options = Object.keys(changes)\n                        .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\n                        .reduce((obj: any, k: string) => {\n                          obj[k] = changes[k].currentValue;\n                          return obj;\n                        }, {});\n    if (Object.keys(options).length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _addEventListeners() {\n    const listeners = [\n      {name: 'click', handler: (ev: KmlMouseEvent) => this.layerClick.emit(ev)},\n      {name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit()},\n      {name: 'status_changed', handler: () => this.statusChange.emit()},\n    ];\n    listeners.forEach((obj) => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return `AgmKmlLayer-${this._id.toString()}`; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteKmlLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { fromEventPattern, Observable } from 'rxjs';\nimport { MapsEventListener, MVCArray } from '../services/google-maps-types';\n\nexport function createMVCEventObservable<T>(array: MVCArray<T>): Observable<MVCEvent<T>>{\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(\n    (handler: Function) => eventNames.map(evName => array.addListener(evName,\n      (index: number, previous?: T) => handler.apply(array, [ {'newArr': array.getArray(), evName, index, previous} as MVCEvent<T>]))),\n    (_handler: Function, evListeners: MapsEventListener[]) => evListeners.forEach(evListener => evListener.remove()));\n}\n\nexport interface MVCEvent<T> {\n  newArr: T[];\n  evName: MvcEventType;\n  index: number;\n  previous?: T;\n}\n\nexport type MvcEventType = 'insert_at' | 'remove_at' | 'set_at';\n\nexport class MvcArrayMock<T> implements MVCArray<T> {\n  private vals: T[] = [];\n  private listeners: {\n    'remove_at': Function[];\n    'insert_at': Function[];\n    'set_at': Function[];\n    [key: string]: Function[];\n  } = {\n    'remove_at': [] as Function[],\n    'insert_at': [] as Function[],\n    'set_at': [] as Function[],\n  };\n  clear(): void {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n        this.removeAt(i);\n    }\n  }\n  getArray(): T[] {\n    return [...this.vals];\n  }\n  getAt(i: number): T {\n    return this.vals[i];\n  }\n  getLength(): number {\n    return this.vals.length;\n  }\n  insertAt(i: number, elem: T): void {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.map(listener => listener(i));\n  }\n  pop(): T {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n  push(elem: T): number {\n    this.vals.push(elem);\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n  removeAt(i: number): T {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.map(listener => listener(i, deleted));\n    return deleted;\n  }\n  setAt(i: number, elem: T): void {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.map(listener => listener(i, deleted));\n  }\n  forEach(callback: (elem: T, i: number) => void): void {\n    this.vals.forEach(callback);\n  }\n  addListener(eventName: string, handler: Function): MapsEventListener {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n        remove: () => {\n            listenerArr.splice(listenerArr.indexOf(handler), 1);\n        },\n    };\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { merge, Observable, Observer } from 'rxjs';\nimport { map, skip, startWith, switchMap } from 'rxjs/operators';\n\nimport { AgmPolygon, PathChangePolygonPathEvent, PathCollectionChangePolygonPathEvent, PolygonPathEvent } from '../../directives/polygon';\nimport { createMVCEventObservable, MVCEvent } from '../../utils/mvcarray-utils';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { LatLng, MVCArray, Polygon } from '../google-maps-types';\n\n@Injectable()\nexport class PolygonManager {\n  private _polygons: Map<AgmPolygon, Promise<Polygon>> =\n    new Map<AgmPolygon, Promise<Polygon>>();\n\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\n\n  addPolygon(path: AgmPolygon) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  updatePolygon(polygon: AgmPolygon): Promise<void> {\n    const m = this._polygons.get(polygon);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polygon) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n  }\n\n  setPolygonOptions(path: AgmPolygon, options: { [propName: string]: any }): Promise<void> {\n    return this._polygons.get(path).then((l: Polygon) => { l.setOptions(options); });\n  }\n\n  deletePolygon(paths: AgmPolygon): Promise<void> {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polygon) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  getPath(polygon: AgmPolygon): Promise<Array<LatLng>> {\n    return this._polygons.get(polygon)\n      .then((polygon) => polygon.getPath().getArray());\n  }\n\n  getPaths(polygon: AgmPolygon): Promise<Array<Array<LatLng>>> {\n    return this._polygons.get(polygon)\n      .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n  }\n\n  createEventObservable<T>(eventName: string, path: AgmPolygon): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._polygons.get(path).then((l: Polygon) => {\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  async createPathEventObservable(agmPolygon: AgmPolygon): Promise<Observable<PolygonPathEvent<any>>> {\n    const polygon = await this._polygons.get(agmPolygon);\n    const paths = polygon.getPaths();\n    const pathsChanges$ = createMVCEventObservable(paths);\n    return pathsChanges$.pipe(startWith(({ newArr: paths.getArray() } as MVCEvent<MVCArray<LatLng>>)), // in order to subscribe to them all\n      switchMap(parentMVEvent => merge(...// rest parameter\n        parentMVEvent.newArr.map((chMVC, index) =>\n          createMVCEventObservable(chMVC)\n          .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n        .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n      skip(1), // skip the manually added event\n      map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n        let retVal;\n        if (!chMVCEvent) {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            eventName: parentMVEvent.evName,\n            index: parentMVEvent.index,\n          } as PathCollectionChangePolygonPathEvent;\n          if (parentMVEvent.previous) {\n            retVal.previous =  parentMVEvent.previous.getArray();\n          }\n        } else {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            pathIndex,\n            eventName: chMVCEvent.evName,\n            index: chMVCEvent.index,\n          } as PathChangePolygonPathEvent;\n          if (chMVCEvent.previous) {\n            retVal.previous = chMVCEvent.previous;\n          }\n        }\n        return retVal;\n      }));\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmPolyline, PathEvent } from '../../directives/polyline';\nimport { AgmPolylinePoint } from '../../directives/polyline-point';\nimport { createMVCEventObservable } from '../../utils/mvcarray-utils';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { IconSequence, LatLng, LatLngLiteral, MVCArray, Polyline } from '../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class PolylineManager {\n  private _polylines: Map<AgmPolyline, Promise<Polyline>> =\n      new Map<AgmPolyline, Promise<Polyline>>();\n\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  private static _convertPoints(line: AgmPolyline): Array<LatLngLiteral> {\n    const path = line._getPoints().map((point: AgmPolylinePoint) => {\n      return {lat: point.latitude, lng: point.longitude} as LatLngLiteral;\n    });\n    return path;\n  }\n\n  private static _convertPath(path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\n  'FORWARD_CLOSED_ARROW' | string): number | string{\n    const symbolPath = google.maps.SymbolPath[path];\n    if (typeof symbolPath === 'number') {\n      return symbolPath;\n    } else{\n      return path;\n    }\n  }\n\n  private static _convertIcons(line: AgmPolyline): Array<IconSequence> {\n    const icons = line._getIcons().map(agmIcon => ({\n      fixedRotation: agmIcon.fixedRotation,\n      offset: agmIcon.offset,\n      repeat: agmIcon.repeat,\n      icon: {\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n        fillColor: agmIcon.fillColor,\n        fillOpacity: agmIcon.fillOpacity,\n        path: PolylineManager._convertPath(agmIcon.path),\n        rotation: agmIcon.rotation,\n        scale: agmIcon.scale,\n        strokeColor: agmIcon.strokeColor,\n        strokeOpacity: agmIcon.strokeOpacity,\n        strokeWeight: agmIcon.strokeWeight,\n      },\n    } as IconSequence));\n    // prune undefineds;\n    icons.forEach(icon => {\n      Object.entries(icon).forEach(([key, val]) => {\n        if (typeof val === 'undefined') {\n          delete (icon as any)[key];\n        }\n      });\n      if (typeof icon.icon.anchor.x === 'undefined' ||\n        typeof icon.icon.anchor.y === 'undefined') {\n          delete icon.icon.anchor;\n        }\n    });\n    return icons;\n  }\n\n  addPolyline(line: AgmPolyline) {\n    const polylinePromise = this._mapsWrapper.getNativeMap()\n    .then(() => [ PolylineManager._convertPoints(line),\n                  PolylineManager._convertIcons(line)])\n    .then(([path, icons]: [LatLngLiteral[], IconSequence[]]) =>\n      this._mapsWrapper.createPolyline({\n        clickable: line.clickable,\n        draggable: line.draggable,\n        editable: line.editable,\n        geodesic: line.geodesic,\n        strokeColor: line.strokeColor,\n        strokeOpacity: line.strokeOpacity,\n        strokeWeight: line.strokeWeight,\n        visible: line.visible,\n        zIndex: line.zIndex,\n        path: path,\n        icons: icons,\n    }));\n    this._polylines.set(line, polylinePromise);\n  }\n\n  updatePolylinePoints(line: AgmPolyline): Promise<void> {\n    const path = PolylineManager._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polyline) => { return this._zone.run(() => { l.setPath(path); }); });\n  }\n\n  async updateIconSequences(line: AgmPolyline): Promise<void> {\n    await this._mapsWrapper.getNativeMap();\n    const icons = PolylineManager._convertIcons(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return;\n    }\n    return m.then(l => this._zone.run(() => l.setOptions({icons: icons}) ) );\n  }\n\n  setPolylineOptions(line: AgmPolyline, options: {[propName: string]: any}):\n      Promise<void> {\n    return this._polylines.get(line).then((l: Polyline) => { l.setOptions(options); });\n  }\n\n  deletePolyline(line: AgmPolyline): Promise<void> {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polyline) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  private async getMVCPath(agmPolyline: AgmPolyline): Promise<MVCArray<LatLng>> {\n    const polyline = await this._polylines.get(agmPolyline);\n    return polyline.getPath();\n  }\n\n  async getPath(agmPolyline: AgmPolyline): Promise<Array<LatLng>> {\n    return (await this.getMVCPath(agmPolyline)).getArray();\n  }\n\n  createEventObservable<T>(eventName: string, line: AgmPolyline): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._polylines.get(line).then((l: Polyline) => {\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  async createPathEventObservable(line: AgmPolyline): Promise<Observable<PathEvent>> {\n    const mvcPath = await this.getMVCPath(line);\n    return createMVCEventObservable(mvcPath);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmRectangle } from '../../directives/rectangle';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport * as mapTypes from '../google-maps-types';\n\n@Injectable()\nexport class RectangleManager {\n  private _rectangles: Map<AgmRectangle, Promise<mapTypes.Rectangle>> =\n      new Map<AgmRectangle, Promise<mapTypes.Rectangle>>();\n\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  addRectangle(rectangle: AgmRectangle) {\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n      bounds: {\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      },\n      clickable: rectangle.clickable,\n      draggable: rectangle.draggable,\n      editable: rectangle.editable,\n      fillColor: rectangle.fillColor,\n      fillOpacity: rectangle.fillOpacity,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: rectangle.strokeOpacity,\n      strokePosition: rectangle.strokePosition,\n      strokeWeight: rectangle.strokeWeight,\n      visible: rectangle.visible,\n      zIndex: rectangle.zIndex,\n    }));\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  setOptions(rectangle: AgmRectangle, options: mapTypes.RectangleOptions): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  getBounds(rectangle: AgmRectangle): Promise<mapTypes.LatLngBounds> {\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\n  }\n\n  setBounds(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      });\n    });\n  }\n\n  setEditable(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  setDraggable(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  setVisible(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  createEventObservable<T>(eventName: string, rectangle: AgmRectangle): Observable<T> {\n    return Observable.create((observer: Observer<T>) => {\n      let listener: mapTypes.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, Inject, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, PLATFORM_ID, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MouseEvent } from '../map-types';\nimport { FitBoundsService } from '../services/fit-bounds';\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\nimport {\n  FullscreenControlOptions, LatLng, LatLngBounds, LatLngBoundsLiteral, LatLngLiteral,\n  MapRestriction, MapTypeControlOptions, MapTypeId, MapTypeStyle, Padding, PanControlOptions,\n  RotateControlOptions, ScaleControlOptions, StreetViewControlOptions, ZoomControlOptions,\n} from '../services/google-maps-types';\nimport { CircleManager } from '../services/managers/circle-manager';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nimport { LayerManager } from '../services/managers/layer-manager';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\n\ndeclare var google: any;\n\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-map',\n  providers: [\n    CircleManager,\n    DataLayerManager,\n    DataLayerManager,\n    FitBoundsService,\n    GoogleMapsAPIWrapper,\n    InfoWindowManager,\n    KmlLayerManager,\n    LayerManager,\n    MarkerManager,\n    PolygonManager,\n    PolylineManager,\n    RectangleManager,\n  ],\n  host: {\n    // todo: deprecated - we will remove it with the next version\n    '[class.sebm-google-map-container]': 'true',\n  },\n  styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `],\n  template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n})\nexport class AgmMap implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The longitude that defines the center of the map.\n   */\n  @Input() longitude = 0;\n\n  /**\n   * The latitude that defines the center of the map.\n   */\n  @Input() latitude = 0;\n\n  /**\n   * The zoom level of the map. The default zoom level is 8.\n   */\n  @Input() zoom = 8;\n\n  /**\n   * The minimal zoom level of the map allowed. When not provided, no restrictions to the zoom level\n   * are enforced.\n   */\n  @Input() minZoom: number;\n\n  /**\n   * The maximal zoom level of the map allowed. When not provided, no restrictions to the zoom level\n   * are enforced.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * The control size for the default map controls. Only governs the controls made by the Maps API itself\n   */\n  @Input() controlSize: number;\n\n  /**\n   * Enables/disables if map is draggable.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('mapDraggable') draggable = true;\n\n  /**\n   * Enables/disables zoom and center on double click. Enabled by default.\n   */\n  @Input() disableDoubleClickZoom = false;\n\n  /**\n   * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n   * value cannot get updated.\n   */\n  @Input() disableDefaultUI = false;\n\n  /**\n   * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n   */\n  @Input() scrollwheel = true;\n\n  /**\n   * Color used for the background of the Map div. This color will be visible when tiles have not\n   * yet loaded as the user pans. This option can only be set when the map is initialized.\n   */\n  @Input() backgroundColor: string;\n\n  /**\n   * The name or url of the cursor to display when mousing over a draggable map. This property uses\n   * the css  * cursor attribute to change the icon. As with the css property, you must specify at\n   * least one fallback cursor that is not a URL. For example:\n   * [draggableCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  @Input() draggableCursor: string;\n\n  /**\n   * The name or url of the cursor to display when the map is being dragged. This property uses the\n   * css cursor attribute to change the icon. As with the css property, you must specify at least\n   * one fallback cursor that is not a URL. For example:\n   * [draggingCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  @Input() draggingCursor: string;\n\n  /**\n   * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n   * enabled by default.\n   */\n  @Input() keyboardShortcuts = true;\n\n  /**\n   * The enabled/disabled state of the Zoom control.\n   */\n  @Input() zoomControl: boolean;\n\n  /**\n   * Options for the Zoom control.\n   */\n  @Input() zoomControlOptions: ZoomControlOptions;\n\n  /**\n   * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n   * modes, these styles will only apply to labels and geometry.\n   */\n  @Input() styles: MapTypeStyle[] = [];\n\n  /**\n   * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n   * used to\n   * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n   */\n  @Input() usePanning = false;\n\n  /**\n   * The initial enabled/disabled state of the Street View Pegman control.\n   * This control is part of the default UI, and should be set to false when displaying a map type\n   * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n   */\n  @Input() streetViewControl: boolean;\n\n  /**\n   * Options for the Street View control.\n   */\n  @Input() streetViewControlOptions: StreetViewControlOptions;\n\n  /**\n   * Sets the viewport to contain the given bounds.\n   * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n   */\n  @Input() fitBounds: LatLngBoundsLiteral | LatLngBounds | boolean = false;\n\n  /**\n   * Padding amount for the bounds.\n   */\n  @Input() fitBoundsPadding: number | Padding;\n\n  /**\n   * The initial enabled/disabled state of the Scale control. This is disabled by default.\n   */\n  @Input() scaleControl = false;\n\n  /**\n   * Options for the scale control.\n   */\n  @Input() scaleControlOptions: ScaleControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Map type control.\n   */\n  @Input() mapTypeControl = false;\n\n  /**\n   * Options for the Map type control.\n   */\n  @Input() mapTypeControlOptions: MapTypeControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Pan control.\n   */\n  @Input() panControl  = false;\n\n  /**\n   * Options for the Pan control.\n   */\n  @Input() panControlOptions: PanControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Rotate control.\n   */\n  @Input() rotateControl = false;\n\n  /**\n   * Options for the Rotate control.\n   */\n  @Input() rotateControlOptions: RotateControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Fullscreen control.\n   */\n  @Input() fullscreenControl  = false;\n\n  /**\n   * Options for the Fullscreen control.\n   */\n  @Input() fullscreenControlOptions: FullscreenControlOptions;\n\n  /**\n   * The map mapTypeId. Defaults to 'roadmap'.\n   */\n  @Input() mapTypeId: 'roadmap' | 'hybrid' | 'satellite' | 'terrain' | string = 'roadmap';\n\n  /**\n   * When false, map icons are not clickable. A map icon represents a point of interest,\n   * also known as a POI. By default map icons are clickable.\n   */\n  @Input() clickableIcons = true;\n\n  /**\n   * A map icon represents a point of interest, also known as a POI.\n   * When map icons are clickable by default, an info window is displayed.\n   * When this property is set to false, the info window will not be shown but the click event\n   * will still fire\n   */\n  @Input() showDefaultInfoWindow = true;\n\n  /**\n   * This setting controls how gestures on the map are handled.\n   * Allowed values:\n   * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n   * - 'greedy'      (All touch gestures pan or zoom the map.)\n   * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n   * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n   */\n  @Input() gestureHandling: 'cooperative' | 'greedy' | 'none' | 'auto' = 'auto';\n\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0Â° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45Â° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45Â° imagery is not available\n     * (this is the default behavior). 45Â° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n  @Input() tilt = 0;\n\n  /**\n   * Options for restricting the bounds of the map.\n   * User cannot pan or zoom away from restricted area.\n   */\n  @Input() restriction: MapRestriction;\n  /**\n   * Map option attributes that can change over time\n   */\n  private static _mapOptionsAttributes: string[] = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n  ];\n\n  private _observableSubscriptions: Subscription[] = [];\n  private _fitBoundsSubscription: Subscription;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n   * marker or infoWindow).\n   */\n  @Output() mapClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  @Output() mapRightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  @Output() mapDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter is fired when the map center changes.\n   */\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  /**\n   * This event is fired when the viewport bounds have changed.\n   */\n  @Output() boundsChange: EventEmitter<LatLngBounds> = new EventEmitter<LatLngBounds>();\n\n  /**\n   * This event is fired when the mapTypeId property changes.\n   */\n  @Output() mapTypeIdChange: EventEmitter<MapTypeId> = new EventEmitter<MapTypeId>();\n\n  /**\n   * This event is fired when the map becomes idle after panning or zooming.\n   */\n  @Output() idle: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the zoom level has changed.\n   */\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * This event is fired when the google map is fully initialized.\n   * You get the google.maps.Map instance as a result of this EventEmitter.\n   */\n  @Output() mapReady: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * This event is fired when the visible tiles have finished loading.\n   */\n  @Output() tilesLoaded: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    private _elem: ElementRef,\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    @Inject(PLATFORM_ID) private _platformId: Object,\n    protected _fitBoundsService: FitBoundsService,\n    private _zone: NgZone\n  ) {}\n\n  /** @internal */\n  ngOnInit() {\n    if (isPlatformServer(this._platformId)) {\n      // The code is running on the server, do nothing\n      return;\n    }\n    // todo: this should be solved with a new component and a viewChild decorator\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n    this._initMapInstance(container);\n  }\n\n  private _initMapInstance(el: HTMLElement) {\n    this._mapsWrapper.createMap(el, {\n      center: {lat: this.latitude || 0, lng: this.longitude || 0},\n      zoom: this.zoom,\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n      controlSize: this.controlSize,\n      disableDefaultUI: this.disableDefaultUI,\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\n      scrollwheel: this.scrollwheel,\n      backgroundColor: this.backgroundColor,\n      draggable: this.draggable,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      styles: this.styles,\n      zoomControl: this.zoomControl,\n      zoomControlOptions: this.zoomControlOptions,\n      streetViewControl: this.streetViewControl,\n      streetViewControlOptions: this.streetViewControlOptions,\n      scaleControl: this.scaleControl,\n      scaleControlOptions: this.scaleControlOptions,\n      mapTypeControl: this.mapTypeControl,\n      mapTypeControlOptions: this.mapTypeControlOptions,\n      panControl: this.panControl,\n      panControlOptions: this.panControlOptions,\n      rotateControl: this.rotateControl,\n      rotateControlOptions: this.rotateControlOptions,\n      fullscreenControl: this.fullscreenControl,\n      fullscreenControlOptions: this.fullscreenControlOptions,\n      mapTypeId: this.mapTypeId,\n      clickableIcons: this.clickableIcons,\n      gestureHandling: this.gestureHandling,\n      tilt: this.tilt,\n      restriction: this.restriction,\n    })\n      .then(() => this._mapsWrapper.getNativeMap())\n      .then(map => this.mapReady.emit(map));\n\n    // register event listeners\n    this._handleMapCenterChange();\n    this._handleMapZoomChange();\n    this._handleMapMouseEvents();\n    this._handleBoundsChange();\n    this._handleMapTypeIdChange();\n    this._handleTilesLoadedEvent();\n    this._handleIdleEvent();\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n\n    // remove all listeners from the map instance\n    this._mapsWrapper.clearInstanceListeners();\n    if (this._fitBoundsSubscription) {\n      this._fitBoundsSubscription.unsubscribe();\n    }\n  }\n\n  /* @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateMapOptionsChanges(changes);\n    this._updatePosition(changes);\n  }\n\n  private _updateMapOptionsChanges(changes: SimpleChanges) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys =\n      Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    this._mapsWrapper.setMapOptions(options);\n  }\n\n  /**\n   * Triggers a resize event on the google map instance.\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n  triggerResize(recenter: boolean = true): Promise<void> {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise<void>((resolve) => {\n      setTimeout(() => {\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n          if (recenter) {\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\n          }\n          resolve();\n        });\n      });\n    });\n  }\n\n  private _updatePosition(changes: SimpleChanges) {\n    if (changes['latitude'] == null && changes['longitude'] == null &&\n        !changes['fitBounds']) {\n      // no position update needed\n      return;\n    }\n\n    // we prefer fitBounds in changes\n    if ('fitBounds' in changes) {\n      this._fitBounds();\n      return;\n    }\n\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    this._setCenter();\n  }\n\n  private _setCenter() {\n    let newCenter = {\n      lat: this.latitude,\n      lng: this.longitude,\n    };\n    if (this.usePanning) {\n      this._mapsWrapper.panTo(newCenter);\n    } else {\n      this._mapsWrapper.setCenter(newCenter);\n    }\n  }\n\n  private _fitBounds() {\n    switch (this.fitBounds) {\n      case true:\n        this._subscribeToFitBoundsUpdates();\n        break;\n      case false:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n        break;\n      default:\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n    }\n  }\n\n  private _subscribeToFitBoundsUpdates() {\n    this._zone.runOutsideAngular(() => {\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n      });\n    });\n  }\n\n  protected _updateBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding) {\n    if (!bounds) {\n      return;\n    }\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n      const newBounds = new google.maps.LatLngBounds();\n      newBounds.union(bounds);\n      bounds = newBounds;\n    }\n    if (this.usePanning) {\n      this._mapsWrapper.panToBounds(bounds, padding);\n      return;\n    }\n    this._mapsWrapper.fitBounds(bounds, padding);\n  }\n\n  private _isLatLngBoundsLiteral(bounds: LatLngBounds | LatLngBoundsLiteral): bounds is LatLngBoundsLiteral {\n    return bounds != null && (bounds as any).extend === undefined;\n  }\n\n  private _handleMapCenterChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then((center: LatLng) => {\n        this.latitude = center.lat();\n        this.longitude = center.lng();\n        this.centerChange.emit({lat: this.latitude, lng: this.longitude} as LatLngLiteral);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleBoundsChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('bounds_changed').subscribe(() => {\n      this._mapsWrapper.getBounds().then(\n        (bounds: LatLngBounds) => { this.boundsChange.emit(bounds); });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapTypeIdChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('maptypeid_changed').subscribe(() => {\n      this._mapsWrapper.getMapTypeId().then(\n        (mapTypeId: MapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapZoomChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then((z: number) => {\n        this.zoom = z;\n        this.zoomChange.emit(z);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('idle').subscribe(\n      () => { this.idle.emit(void 0); });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('tilesloaded').subscribe(\n      () => this.tilesLoaded.emit(void 0),\n    );\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    type Event = { name: string, emitter: Emitter };\n\n    const events: Event[] = [\n      {name: 'click', emitter: this.mapClick},\n      {name: 'rightclick', emitter: this.mapRightClick},\n      {name: 'dblclick', emitter: this.mapDblClick},\n    ];\n\n    events.forEach((e: Event) => {\n      const s = this._mapsWrapper.subscribeToMapEvent<{latLng: LatLng}>(e.name).subscribe(\n        (event: {latLng: LatLng}) => {\n          let value: MouseEvent = {\n            coords: {\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n            },\n            placeId: (event as {latLng: LatLng, placeId: string}).placeId,\n          };\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n          if (value.placeId && !this.showDefaultInfoWindow) {\n            (event as any).stop();\n          }\n          e.emitter.emit(value);\n        });\n      this._observableSubscriptions.push(s);\n    });\n  }\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, forwardRef, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChange } from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { MouseEvent } from '../map-types';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport * as mapTypes from '../services/google-maps-types';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { AgmInfoWindow } from './info-window';\n\nlet markerId = 0;\n\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'agm-marker',\n  providers: [\n    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n  ],\n  inputs: [\n    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n  ],\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n})\nexport class AgmMarker implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() label: string | mapTypes.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerDraggable') draggable = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   */\n  @Input() iconUrl: string;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() openInfoWindow = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() opacity = 1;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() zIndex = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerClickable') clickable = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  @Input() animation: Animation;\n\n  /**\n   * This event is fired when the marker's animation property changes.\n   *\n   * @memberof AgmMarker\n   */\n  @Output() animationChange = new EventEmitter<Animation>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output() markerClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\n\n  /**\n   * This event emitter gets emitted when the user clicks twice on the marker.\n   */\n  @Output() markerDblClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output() markerRightClick: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** @internal */\n  @ContentChildren(AgmInfoWindow) infoWindow: QueryList<AgmInfoWindow> = new QueryList<AgmInfoWindow>();\n\n  private _markerAddedToManger = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  protected readonly _fitBoundsDetails$: ReplaySubject<FitBoundsDetails> = new ReplaySubject<FitBoundsDetails>(1);\n\n  constructor(private _markerManager: MarkerManager) { this._id = (markerId++).toString(); }\n\n  /* @internal */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach(marker => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this._markerManager.addMarker(this);\n      this._updateFitBoundsDetails();\n      this._markerAddedToManger = true;\n      this._addEventListeners();\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes['title']) {\n      this._markerManager.updateTitle(this);\n    }\n    if (changes['label']) {\n      this._markerManager.updateLabel(this);\n    }\n    if (changes['draggable']) {\n      this._markerManager.updateDraggable(this);\n    }\n    if (changes['iconUrl']) {\n      this._markerManager.updateIcon(this);\n    }\n    if (changes['opacity']) {\n      this._markerManager.updateOpacity(this);\n    }\n    if (changes['visible']) {\n      this._markerManager.updateVisible(this);\n    }\n    if (changes['zIndex']) {\n      this._markerManager.updateZIndex(this);\n    }\n    if (changes['clickable']) {\n      this._markerManager.updateClickable(this);\n    }\n    if (changes['animation']) {\n      this._markerManager.updateAnimation(this);\n    }\n  }\n\n  /** @internal */\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n  }\n\n  private _addEventListeners() {\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      if (this.openInfoWindow) {\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\n      }\n      this.markerClick.emit(this);\n    });\n    this._observableSubscriptions.push(cs);\n\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n      this.markerDblClick.emit(null);\n    });\n    this._observableSubscriptions.push(dcs);\n\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n      this.markerRightClick.emit(null);\n    });\n    this._observableSubscriptions.push(rc);\n\n    const ds =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragstart', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(ds);\n\n    const d =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('drag', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(d);\n\n    const de =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragend', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(de);\n\n    const mover =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseover', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(mover);\n\n    const mout =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseout', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(mout);\n\n    const anChng =\n      this._markerManager.createEventObservable<void>('animation_changed', this)\n        .subscribe(() => {\n          this.animationChange.emit(this.animation);\n        });\n    this._observableSubscriptions.push(anChng);\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return 'AgmMarker-' + this._id.toString(); }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\nexport type Animation = 'BOUNCE' | 'DROP' | null;\n","import { AfterContentInit, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LatLng, LatLngLiteral, PolygonOptions, PolyMouseEvent } from '../services/google-maps-types';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { MvcEventType } from '../utils/mvcarray-utils';\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\n@Directive({\n  selector: 'agm-polygon',\n})\nexport class AgmPolygon implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polyDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() paths: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output() polyClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output() polyDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output() polyDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output() polyDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output() polyDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output() polyMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output() polyMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output() polyMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output() polyMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output() polyMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the Polygon is right-clicked on.\n   */\n  @Output() polyRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired after Polygon first path changes.\n   */\n  @Output() polyPathsChange = new EventEmitter<PolygonPathEvent<any>>();\n\n  private static _polygonOptionsAttributes: Array<string> = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n  ];\n\n  private _id: string;\n  private _polygonAddedToManager = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polygonManager: PolygonManager) { }\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      { name: 'click', handler: (ev: PolyMouseEvent) => this.polyClick.emit(ev) },\n      { name: 'dblclick', handler: (ev: PolyMouseEvent) => this.polyDblClick.emit(ev) },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      { name: 'dragend', handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev) },\n      { name: 'dragstart', handler: (ev: MouseEvent) => this.polyDragStart.emit(ev) },\n      { name: 'mousedown', handler: (ev: PolyMouseEvent) => this.polyMouseDown.emit(ev) },\n      { name: 'mousemove', handler: (ev: PolyMouseEvent) => this.polyMouseMove.emit(ev) },\n      { name: 'mouseout', handler: (ev: PolyMouseEvent) => this.polyMouseOut.emit(ev) },\n      { name: 'mouseover', handler: (ev: PolyMouseEvent) => this.polyMouseOver.emit(ev) },\n      { name: 'mouseup', handler: (ev: PolyMouseEvent) => this.polyMouseUp.emit(ev) },\n      { name: 'rightclick', handler: (ev: PolyMouseEvent) => this.polyRightClick.emit(ev) },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n\n    this._polygonManager.createPathEventObservable(this)\n    .then(paths$ => {\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n\n  private _updatePolygonOptions(changes: SimpleChanges): PolygonOptions {\n    return Object.keys(changes)\n      .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  getPath(): Promise<Array<LatLng>> {\n    return this._polygonManager.getPath(this);\n  }\n\n  getPaths(): Promise<Array<Array<LatLng>>> {\n    return this._polygonManager.getPaths(this);\n  }\n}\n\nexport interface PolygonPathEvent<T extends (LatLng | Array<LatLng>)> {\n  newArr: LatLng[][];\n  eventName: MvcEventType;\n  index: number;\n  previous?: T;\n}\n\nexport interface PathCollectionChangePolygonPathEvent extends PolygonPathEvent <Array<LatLng>>{\n}\n\nexport interface PathChangePolygonPathEvent extends PolygonPathEvent<LatLng> {\n  pathIndex: number;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\n@Directive({selector: 'agm-polyline agm-icon-sequence'})\nexport class AgmPolylineIcon implements OnInit{\n\n  /**\n   * If `true`, each icon in the sequence has the same fixed rotation regardless of the\n   * angle of the edge on which it lies. Defaults to `false`, in which case each icon\n   * in the sequence is rotated to align with its edge.\n   *\n   * @type {boolean}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() fixedRotation: boolean;\n\n  /**\n   * The distance from the start of the line at which an icon is to be rendered. This\n   * distance may be expressed as a percentage of line's length (e.g. '50%') or in pixels\n   * (e.g. '50px'). Defaults to '100%'.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() offset: string;\n\n  /**\n   * The distance between consecutive icons on the line. This distance may be expressed as\n   * a percentage of the line's length (e.g. '50%') or in pixels (e.g. '50px'). To disable\n   * repeating of the icon, specify '0'. Defaults to '0'.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() repeat: string;\n\n  /**\n   * The x coordinate of the position of the symbol relative to the polyline. The coordinate\n   * of the symbol's path is translated _left_ by the anchor's x coordinate. By default, a\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\n   * symbol's path.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() anchorX: number;\n\n  /**\n   * The y coordinate of the position of the symbol relative to the polyline. The coordinate\n   * of the symbol's path is translated _up_ by the anchor's y coordinate. By default, a\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\n   * symbol's path.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() anchorY: number;\n\n  /**\n   * The symbol's fill color. All CSS3 colors are supported except for extended named\n   * colors. Defaults to the stroke color of the corresponding polyline.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The symbol's fill opacity. Defaults to 0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The symbol's path, which is a built-in symbol path, or a custom path expressed using\n   * SVG path notation. Required.\n   *\n   * @type {SymbolPath}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\n        'FORWARD_OPEN_ARROW' | string;\n\n  /**\n   * The angle by which to rotate the symbol, expressed clockwise in degrees.\n   * Defaults to 0. A symbol where `fixedRotation` is `false` is rotated relative to\n   * the angle of the edge on which it lies.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() rotation: number;\n\n  /**\n   * The amount by which the symbol is scaled in size. Defaults to the stroke weight\n   * of the polyline; after scaling, the symbol must lie inside a square 22 pixels in\n   * size centered at the symbol's anchor.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() scale: number;\n\n  /**\n   * The symbol's stroke color. All CSS3 colors are supported except for extended named\n   * colors. Defaults to the stroke color of the polyline.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The symbol's stroke opacity. Defaults to the stroke opacity of the polyline.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The symbol's stroke weight. Defaults to the scale of the symbol.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeWeight: number;\n\n  ngOnInit(): void {\n    if (this.path == null) {\n      throw new Error('Icon Sequence path is required');\n    }\n  }\n}\n","import { Directive, EventEmitter, forwardRef, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { LatLngLiteral } from '../../core/services/google-maps-types';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\n@Directive({\n  selector: 'agm-polyline-point',\n  providers: [\n    {provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint)},\n  ],\n})\nexport class AgmPolylinePoint implements OnChanges, FitBoundsAccessor {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output() positionChanged: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (changes['latitude'] || changes['longitude']) {\n      const position: LatLngLiteral = {\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n      } as LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n\n  /** @internal */\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\n    return this.positionChanged.pipe(\n      startWith({lat: this.latitude, lng: this.longitude}),\n      map(position => ({latLng: position}))\n    );\n  }\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LatLng, PolyMouseEvent } from '../services/google-maps-types';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { AgmPolylineIcon } from './polyline-icon';\nimport { AgmPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'agm-polyline',\n})\nexport class AgmPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polylineDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output() lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output() lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output() lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output() lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output() lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output() lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output() lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output() lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output() lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output() lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the Polyline is right-clicked on.\n   */\n  @Output() lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired after Polyline's path changes.\n   */\n  @Output() polyPathChange = new EventEmitter<PathEvent>();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(AgmPolylinePoint) points: QueryList<AgmPolylinePoint>;\n\n  @ContentChildren(AgmPolylineIcon) iconSequences: QueryList<AgmPolylineIcon>;\n\n  private static _polylineOptionsAttributes: Array<string> = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n  ];\n\n  private _id: string;\n  private _polylineAddedToManager = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: AgmPolylinePoint) => {\n        const s = point.positionChanged.subscribe(\n            () => { this._polylineManager.updatePolylinePoints(this); });\n        this._subscriptions.push(s);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n    this._subscriptions.push(pointSub);\n    this._polylineManager.updatePolylinePoints(this);\n\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n    this._subscriptions.push(iconSub);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    let options: {[propName: string]: any} = {};\n    const optionKeys = Object.keys(changes).filter(\n        k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  getPath(): Promise<Array<LatLng>> {\n    return this._polylineManager.getPath(this);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\n      {name: 'dblclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n\n    this._polylineManager.createPathEventObservable(this).then((ob$) => {\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  _getPoints(): Array<AgmPolylinePoint> {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n\n  _getIcons(): Array<AgmPolylineIcon> {\n    if (this.iconSequences) {\n      return this.iconSequences.toArray();\n    }\n    return [];\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\nexport interface PathEvent {\n  newArr: LatLng[];\n  evName: 'insert_at' | 'remove_at' | 'set_at';\n  index: number;\n  previous?: LatLng;\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MouseEvent } from '../map-types';\nimport {\n  LatLngBounds,\n  LatLngBoundsLiteral,\n  MouseEvent as MapMouseEvent,\n} from '../services/google-maps-types';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\n\n@Directive({\n  selector: 'agm-rectangle',\n})\nexport class AgmRectangle implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('rectangleDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  boundsChange: EventEmitter<LatLngBoundsLiteral> = new EventEmitter<\n    LatLngBoundsLiteral\n  >();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  private _rectangleAddedToManager = false;\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  constructor(private _manager: RectangleManager) {}\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (\n      changes['north'] ||\n      changes['east'] ||\n      changes['south'] ||\n      changes['west']\n    ) {\n      this._manager.setBounds(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    let options: { [propName: string]: any } = {};\n    let optionKeys = Object.keys(changes).filter(\n      k => AgmRectangle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    let events: Map<string, EventEmitter<any>> = new Map<\n      string,\n      EventEmitter<any>\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable<MapMouseEvent>(eventName, this)\n          .subscribe(value => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager.getBounds(this).then(bounds =>\n                  eventEmitter.emit({\n                    north: bounds.getNorthEast().lat(),\n                    east: bounds.getNorthEast().lng(),\n                    south: bounds.getSouthWest().lat(),\n                    west: bounds.getSouthWest().lng(),\n                  } as LatLngBoundsLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit({\n                  coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                } as MouseEvent);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function(s: Subscription) {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds(): Promise<LatLngBounds> {\n    return this._manager.getBounds(this);\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerManager } from '../services/managers/layer-manager';\n\nlet layerId = 0;\n\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\n@Directive({\n    selector: 'agm-transit-layer',\n})\n\nexport class AgmTransitLayer implements OnInit, OnChanges, OnDestroy{\n    private _addedToManager = false;\n    private _id: string = (layerId++).toString();\n\n    /**\n     * Hide/show transit layer\n     */\n    @Input() visible = true;\n\n    constructor( private _manager: LayerManager ) {}\n\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, {visible: this.visible});\n        this._addedToManager = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\n        }\n    }\n\n    /** @internal */\n    id(): string { return this._id; }\n\n    /** @internal */\n    toString(): string { return `AgmTransitLayer-${this._id.toString()}`; }\n\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n\n}\n","export var google: any;\n\nexport interface MVCObject {\n  addListener(eventName: string, handler: Function): MapsEventListener;\n}\n\nexport interface MVCArray<T> extends MVCObject {\n  clear(): void;\n  getArray(): Array<T>;\n  getAt(i: number): T;\n  getLength(): number;\n  insertAt(i: number, elem: T): void;\n  pop(): T;\n  push(elem: T): number;\n  removeAt(i: number): T;\n  setAt(i: number, elem: T): void;\n  /* tslint:disable */\n  /*\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\n  */\n  forEach(callback: (elem: T, i: number) => void): void;\n  /* tslint:enable */\n}\n\nexport interface GoogleMap extends MVCObject {\n  data?: Data;\n  panTo(latLng: LatLng | LatLngLiteral): void;\n  panBy(x: number, y: number): void;\n  setZoom(zoom: number): void;\n  getCenter(): LatLng;\n  setCenter(latLng: LatLng | LatLngLiteral): void;\n  getBounds(): LatLngBounds;\n  getMapTypeId(): MapTypeId;\n  getZoom(): number;\n  setOptions(options: MapOptions): void;\n  panToBounds(latLngBounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\n  fitBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\n}\n\nexport interface LatLng {\n  lat(): number;\n  lng(): number;\n  toJSON(): any;\n  toString(): string;\n}\n\nexport interface Marker extends MVCObject {\n  setMap(map: GoogleMap): void;\n  setPosition(latLng: LatLng | LatLngLiteral): void;\n  setTitle(title: string): void;\n  setLabel(label: string | MarkerLabel): void;\n  setDraggable(draggable: boolean): void;\n  setIcon(icon: string): void;\n  setOpacity(opacity: number): void;\n  setVisible(visible: boolean): void;\n  setZIndex(zIndex: number): void;\n  setAnimation(animation: any): void;\n  getLabel(): MarkerLabel;\n  setClickable(clickable: boolean): void;\n}\n\nexport interface MarkerOptions {\n  position: LatLng | LatLngLiteral;\n  title?: string;\n  map?: GoogleMap;\n  label?: string | MarkerLabel;\n  draggable?: boolean;\n  icon?: string;\n  opacity?: number;\n  visible?: boolean;\n  zIndex?: number;\n  clickable: boolean;\n  animation?: any;\n}\n\nexport interface MarkerLabel {\n  color: string;\n  fontFamily: string;\n  fontSize: string;\n  fontWeight: string;\n  text: string;\n}\n\nexport interface Circle extends MVCObject {\n  getBounds(): LatLngBounds;\n  getCenter(): LatLng;\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getRadius(): number;\n  getVisible(): boolean;\n  setCenter(center: LatLng | LatLngLiteral): void;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: CircleOptions): void;\n  setRadius(radius: number): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface CircleOptions {\n  center?: LatLng | LatLngLiteral;\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  map?: GoogleMap;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Rectangle extends MVCObject {\n  getBounds(): LatLngBounds;\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getVisible(): boolean;\n  setBounds(bounds: LatLngBounds | LatLngBoundsLiteral): void;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: RectangleOptions): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface RectangleOptions {\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  map?: GoogleMap;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface LatLngBounds {\n  contains(latLng: LatLng): boolean;\n  equals(other: LatLngBounds | LatLngBoundsLiteral): boolean;\n  extend(point: LatLng | LatLngLiteral): void;\n  getCenter(): LatLng;\n  getNorthEast(): LatLng;\n  getSouthWest(): LatLng;\n  intersects(other: LatLngBounds | LatLngBoundsLiteral): boolean;\n  isEmpty(): boolean;\n  toJSON(): LatLngBoundsLiteral;\n  toSpan(): LatLng;\n  toString(): string;\n  toUrlValue(precision?: number): string;\n  union(other: LatLngBounds | LatLngBoundsLiteral): LatLngBounds;\n}\n\nexport interface Padding {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\n\nexport interface LatLngBoundsLiteral {\n  east: number;\n  north: number;\n  south: number;\n  west: number;\n}\n\nexport interface LatLngLiteral {\n  lat: number;\n  lng: number;\n}\n\nexport interface MouseEvent { latLng: LatLng; }\n\nexport interface MapOptions {\n  center?: LatLng | LatLngLiteral;\n  zoom?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  controlSize?: number;\n  disableDoubleClickZoom?: boolean;\n  disableDefaultUI?: boolean;\n  scrollwheel?: boolean;\n  backgroundColor?: string;\n  draggable?: boolean;\n  draggableCursor?: string;\n  draggingCursor?: string;\n  keyboardShortcuts?: boolean;\n  styles?: MapTypeStyle[];\n  zoomControl?: boolean;\n  zoomControlOptions?: ZoomControlOptions;\n  streetViewControl?: boolean;\n  streetViewControlOptions?: StreetViewControlOptions;\n  scaleControl?: boolean;\n  scaleControlOptions?: ScaleControlOptions;\n  mapTypeControl?: boolean;\n  mapTypeControlOptions?: MapTypeControlOptions;\n  panControl?: boolean;\n  panControlOptions?: PanControlOptions;\n  rotateControl?: boolean;\n  rotateControlOptions?: RotateControlOptions;\n  fullscreenControl?: boolean;\n  fullscreenControlOptions?: FullscreenControlOptions;\n  mapTypeId?: string | MapTypeId;\n  clickableIcons?: boolean;\n  gestureHandling?: 'cooperative' | 'greedy' | 'none' | 'auto';\n  tilt?: number;\n  restriction?: MapRestriction;\n}\n\nexport interface MapTypeStyle {\n  elementType?: 'all' | 'geometry' | 'geometry.fill' | 'geometry.stroke' | 'labels' | 'labels.icon' |\n  'labels.text' | 'labels.text.fill' | 'labels.text.stroke';\n  featureType?: 'administrative' | 'administrative.country' | 'administrative.land_parcel' |\n  'administrative.locality' | 'administrative.neighborhood' | 'administrative.province' | 'all' |\n  'landscape' | 'landscape.man_made' | 'landscape.natural' | 'landscape.natural.landcover' |\n  'landscape.natural.terrain' | 'poi' | 'poi.attraction' | 'poi.business' | 'poi.government' |\n  'poi.medical' | 'poi.park' | 'poi.place_of_worship' | 'poi.school' | 'poi.sports_complex' | 'road' |\n  'road.arterial' | 'road.highway' | 'road.highway.controlled_access' | 'road.local' | 'transit' |\n  'transit.line' | 'transit.station' | 'transit.station.airport' | 'transit.station.bus' |\n  'transit.station.rail' | 'water';\n  stylers: MapTypeStyler[];\n}\n\n/**\n *  If more than one key is specified in a single MapTypeStyler, all but one will be ignored.\n */\nexport interface MapTypeStyler {\n  color?: string;\n  gamma?: number;\n  hue?: string;\n  invert_lightness?: boolean;\n  lightness?: number;\n  saturation?: number;\n  visibility?: string;\n  weight?: number;\n}\n\nexport interface InfoWindow extends MVCObject {\n  close(): void;\n  getContent(): string | Node;\n  getPosition(): LatLng;\n  getZIndex(): number;\n  open(map?: GoogleMap, anchor?: MVCObject): void;\n  setContent(content: string | Node): void;\n  setOptions(options: InfoWindowOptions): void;\n  setPosition(position: LatLng | LatLngLiteral): void;\n  setZIndex(zIndex: number): void;\n}\n\nexport interface MapsEventListener { remove(): void; }\n\nexport interface Size {\n  height: number;\n  width: number;\n  equals(other: Size): boolean;\n  toString(): string;\n}\n\nexport interface InfoWindowOptions {\n  content?: string | Node;\n  disableAutoPan?: boolean;\n  maxWidth?: number;\n  pixelOffset?: Size;\n  position?: LatLng | LatLngLiteral;\n  zIndex?: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n  equals(other: Point): boolean;\n  toString(): string;\n}\n\nexport interface GoogleSymbol {\n  anchor?: Point;\n  fillColor?: string;\n  fillOpacity?: number;\n  labelOrigin?: Point;\n  path?: string | SymbolPath;\n  rotation?: number;\n  scale?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n}\n\nexport interface IconSequence {\n  fixedRotation?: boolean;\n  icon?: GoogleSymbol;\n  offset?: string;\n  repeat?: string;\n}\n\nexport enum SymbolPath {\n  BACKWARD_CLOSED_ARROW = 3,\n  BACKWARD_OPEN_ARROW = 4,\n  CIRCLE = 0,\n  FORWARD_CLOSED_ARROW = 1,\n  FORWARD_OPEN_ARROW = 2,\n}\n\nexport interface PolylineOptions {\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  geodesic?: boolean;\n  icons?: Array<IconSequence>;\n  map?: GoogleMap;\n  path?: Array<LatLng> | Array<LatLng | LatLngLiteral>;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Polyline extends MVCObject {\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getPath(): MVCArray<LatLng>;\n  getVisible(): boolean;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: PolylineOptions): void;\n  setPath(path: Array<LatLng | LatLngLiteral>): void;\n  setVisible(visible: boolean): void;\n}\n\n/**\n * PolyMouseEvent gets emitted when the user triggers mouse events on a polyline.\n */\nexport interface PolyMouseEvent extends MouseEvent {\n  edge: number;\n  path: number;\n  vertex: number;\n}\n\nexport interface PolygonOptions {\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  geodesic?: boolean;\n  icon?: Array<IconSequence>;\n  map?: GoogleMap;\n  paths?: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>>;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Polygon extends MVCObject {\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getPath(): MVCArray<LatLng>;\n  getPaths(): MVCArray<MVCArray<LatLng>>;\n  getVisible(): boolean;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setPath(path: Array<LatLng> | Array<LatLng | LatLngLiteral>): void;\n  setOptions(options: PolygonOptions): void;\n  setPaths(paths: Array<Array<LatLng | LatLngLiteral>> | Array<LatLng | LatLngLiteral>): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface KmlLayer extends MVCObject {\n  getDefaultViewport(): LatLngBounds;\n  getMap(): GoogleMap;\n  getMetadata(): KmlLayerMetadata;\n  getStatus(): KmlLayerStatus;\n  getUrl(): string;\n  getZIndex(): number;\n  setMap(map: GoogleMap): void;\n  setOptions(options: KmlLayerOptions): void;\n  setUrl(url: string): void;\n  setZIndex(zIndex: number): void;\n}\n\n/**\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerStatus\n */\nexport type KmlLayerStatus = 'DOCUMENT_NOT_FOUND' |\n  'DOCUMENT_TOO_LARGE' | 'FETCH_ERROR' | 'INVALID_DOCUMENT' | 'INVALID_REQUEST' |\n  'LIMITS_EXCEEDED' | 'OK' | 'TIMED_OUT' | 'UNKNOWN';\n\n/**\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerMetadata\n */\nexport interface KmlLayerMetadata {\n  author: KmlAuthor;\n  description: string;\n  hasScreenOverlays: boolean;\n  name: string;\n  snippet: string;\n}\n\nexport interface KmlAuthor {\n  email: string;\n  name: string;\n  uri: string;\n}\n\nexport interface KmlLayerOptions {\n  clickable?: boolean;\n  map?: GoogleMap;\n  preserveViewport?: boolean;\n  screenOverlays?: boolean;\n  suppressInfoWindows?: boolean;\n  url?: string;\n  zIndex?: number;\n}\n\nexport interface KmlFeatureData {\n  author: KmlAuthor;\n  description: string;\n  id: string;\n  infoWindowHtml: string;\n  name: string;\n  snippet: string;\n}\n\nexport interface KmlMouseEvent extends MouseEvent {\n  featureData: KmlFeatureData;\n  pixelOffset: Size;\n}\n\nexport interface TransitLayer extends MVCObject {\n  getMap(): GoogleMap;\n  setMap(map: GoogleMap): void;\n}\n\nexport interface TransitLayerOptions {\n  visible: boolean;\n}\n\nexport interface BicyclingLayer extends MVCObject {\n  getMap(): GoogleMap;\n  setMap(map: GoogleMap): void;\n}\n\nexport interface BicyclingLayerOptions {\n  visible: boolean;\n}\n\nexport interface Data extends MVCObject {\n  features: Feature[];\n  addGeoJson(geoJson: Object, options?: GeoJsonOptions): Feature[];\n  remove(feature: Feature): void;\n  setControlPosition(controlPosition: ControlPosition): void;\n  setControls(controls: string[]): void;\n  setDrawingMode(drawingMode: string): void;\n  setMap(map: GoogleMap): void;\n  /* tslint:disable */\n  /*\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\n  */\n  setStyle(style: () => void): void;\n  forEach(callback: (feature: Feature) => void): void;\n  loadGeoJson(url: string, options?: GeoJsonOptions, callback?: (feats: Feature[]) => void): void;\n  /* tslint:enable */\n}\n\nexport interface Feature extends MVCObject {\n  id?: number | string | undefined;\n  geometry: Geometry;\n  properties: any;\n}\n\nexport interface DataOptions {\n  controlPosition?: ControlPosition;\n  controls?: string[];\n  drawingMode?: string;\n  featureFactory?: (geometry: Geometry) => Feature;\n  map?: GoogleMap;\n  style?: () => void;\n}\n\nexport interface DataMouseEvent extends MouseEvent {\n  feature: Feature;\n}\n\nexport interface GeoJsonOptions {\n  idPropertyName: string;\n}\n\nexport interface Geometry {\n  type: string;\n}\n\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nexport enum ControlPosition {\n  RIGHT_BOTTOM,\n  TOP_LEFT,\n  TOP_CENTER,\n  TOP_RIGHT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n  RIGHT_TOP,\n  RIGHT_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  BOTTOM_CENTER,\n}\n\nexport enum MapTypeId {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  HYBRID,\n  /** This map type displays a normal street map. */\n  ROADMAP,\n  /** This map type displays satellite images. */\n  SATELLITE,\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n  TERRAIN,\n}\n\n/***** Controls *****/\n/** Options for the rendering of the map type control. */\nexport interface MapTypeControlOptions {\n  /** IDs of map types to show in the control. */\n  mapTypeIds?: (MapTypeId | string)[];\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_RIGHT.\n   */\n  position?: ControlPosition;\n  /** Style id. Used to select what style of map type control to display. */\n  style?: MapTypeControlStyle;\n}\n\nexport enum MapTypeControlStyle {\n  DEFAULT = 0,\n  DROPDOWN_MENU = 2,\n  HORIZONTAL_BAR = 1,\n}\n\nexport interface OverviewMapControlOptions {\n  opened?: boolean;\n}\n\n/** Options for the rendering of the pan control. */\nexport interface PanControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the rotate control. */\nexport interface RotateControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the scale control. */\nexport interface ScaleControlOptions {\n  /** Style id. Used to select what style of scale control to display. */\n  style?: ScaleControlStyle;\n}\n\nexport enum ScaleControlStyle {\n  DEFAULT,\n}\n\n/** Options for the rendering of the Street View pegman control on the map. */\nexport interface StreetViewControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map. The\n   * default position is embedded within the navigation (zoom and pan) controls.\n   * If this position is empty or the same as that specified in the\n   * zoomControlOptions or panControlOptions, the Street View control will be\n   * displayed as part of the navigation controls. Otherwise, it will be displayed\n   * separately.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the zoom control. */\nexport interface ZoomControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n  style?: ZoomControlStyle;\n}\n\nexport enum ZoomControlStyle {\n  DEFAULT,\n  LARGE,\n  SMALL,\n}\n\n/** Options for the rendering of the fullscreen control. */\nexport interface FullscreenControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is RIGHT_TOP.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the restricting the bounds of the map. */\nexport interface MapRestriction {\n  latLngBounds: LatLngBounds | LatLngBoundsLiteral;\n  strictBounds?: boolean;\n}\n\nexport interface Geocoder {\n  geocode: (request: GeocoderRequest, googleCallback: (results: GeocoderResult[], status: GeocoderStatus) => void) => void;\n}\n\nexport interface GeocoderAddressComponent {\n  long_name: string;\n  short_name: string;\n  types: string[];\n}\n\n/** Options for restricting the geocoder results */\nexport interface GeocoderComponentRestrictions {\n  administrativeArea?: string;\n  country?: string;\n  locality?: string;\n  postalCode?: string;\n  route?: string;\n}\n\nexport interface GeocoderGeometry {\n  bounds: LatLngBounds;\n  location: LatLng;\n  location_type: GeocoderLocationType;\n  viewport: LatLngBounds;\n}\n\nexport enum GeocoderLocationType {\n  APPROXIMATE = 'APPROXIMATE',\n  GEOMETRIC_CENTER = 'GEOMETRIC_CENTER',\n  RANGE_INTERPOLATED = 'RANGE_INTERPOLATED',\n  ROOFTOP = 'ROOFTOP',\n}\n\nexport interface GeocoderRequest {\n  address?: string;\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\n  componentRestrictions?: GeocoderComponentRestrictions;\n  location?: LatLng | LatLngLiteral;\n  placeId?: string;\n  region?: string;\n}\n\nexport interface GeocoderResult {\n  address_components: GeocoderAddressComponent[];\n  formatted_address: string;\n  geometry: GeocoderGeometry;\n  partial_match: boolean;\n  place_id: string;\n  postcode_localities: string[];\n  types: string[];\n}\n\nexport enum GeocoderStatus {\n  ERROR = 'ERROR',\n  INVALID_REQUEST = 'INVALID_REQUEST',\n  OK = 'OK',\n  OVER_QUERY_LIMIT = 'OVER_QUERY_LIMIT',\n  REQUEST_DENIED = 'REQUEST_DENIED',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n  ZERO_RESULTS = 'ZERO_RESULTS',\n}\n","import { Injectable } from '@angular/core';\nimport { bindCallback, ConnectableObservable, Observable, of, ReplaySubject, throwError } from 'rxjs';\nimport { map, multicast, switchMap } from 'rxjs/operators';\nimport { Geocoder, GeocoderRequest, GeocoderResult, GeocoderStatus } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\ndeclare var google: any;\n\n@Injectable({ providedIn: 'root' })\nexport class AgmGeocoder {\n  protected readonly geocoder$: Observable<Geocoder>;\n\n  constructor(loader: MapsAPILoader) {\n    const connectableGeocoder$ = new Observable(subscriber => {\n      loader.load().then(() => subscriber.next());\n    })\n      .pipe(\n        map(() => this._createGeocoder()),\n        multicast(new ReplaySubject(1)),\n      ) as ConnectableObservable<Geocoder>;\n\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n\n    this.geocoder$ = connectableGeocoder$;\n  }\n\n  geocode(request: GeocoderRequest): Observable<GeocoderResult[]> {\n    return this.geocoder$.pipe(\n      switchMap((geocoder) => this._getGoogleResults(geocoder, request))\n    );\n  }\n\n  private _getGoogleResults(geocoder: Geocoder, request: GeocoderRequest): Observable<GeocoderResult[]> {\n    const geocodeObservable = bindCallback(geocoder.geocode);\n    return geocodeObservable(request).pipe(\n      switchMap(([results, status]) => {\n        if (status === GeocoderStatus.OK) {\n          return of(results);\n        }\n\n        return throwError(status);\n      })\n    );\n  }\n\n  private _createGeocoder(): Geocoder {\n    return new google.maps.Geocoder() as Geocoder;\n  }\n}\n","import { Provider } from '@angular/core';\n\nexport class WindowRef {\n  getNativeWindow(): any { return window; }\n}\n\nexport class DocumentRef {\n  getNativeDocument(): any { return document; }\n}\n\nexport const BROWSER_GLOBALS_PROVIDERS: Provider[] = [WindowRef, DocumentRef];\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, Optional } from '@angular/core';\n\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken<LazyMapsAPILoaderConfigLiteral>('angular-google-maps LAZY_MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `<script>` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `<script>` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n@Injectable()\nexport class LazyMapsAPILoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise<void>;\n  protected _config: LazyMapsAPILoaderConfigLiteral;\n  protected _windowRef: WindowRef;\n  protected _documentRef: DocumentRef;\n  protected readonly _SCRIPT_ID: string = 'agmGoogleMapsApiScript';\n  protected readonly callbackName: string = `agmLazyMapsAPILoader`;\n\n  constructor(@Optional() @Inject(LAZY_MAPS_API_CONFIG) config: any = null, w: WindowRef, d: DocumentRef,\n   @Inject(LOCALE_ID) private localeId: string) {\n    super();\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load(): Promise<void> {\n    const window = this._windowRef.getNativeWindow() as any;\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow() as any)[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event) => {\n        reject(error);\n      };\n    });\n  }\n\n  protected _getScriptSrc(callbackName: string): string {\n    let protocolType: GoogleMapsScriptProtocol =\n        (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: {[key: string]: string | Array<string>} = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n    };\n    const params: string = Object.keys(queryParams)\n                               .filter((k: string) => queryParams[k] != null)\n                               .filter((k: string) => {\n                                 // remove empty arrays\n                                 return !Array.isArray(queryParams[k]) ||\n                                     (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n                               })\n                               .map((k: string) => {\n                                 // join arrays as comma seperated strings\n                                 let i = queryParams[k];\n                                 if (Array.isArray(i)) {\n                                   return {key: k, value: i.join(',')};\n                                 }\n                                 return {key: k, value: queryParams[k]};\n                               })\n                               .map((entry: {key: string, value: string}) => {\n                                 return `${entry.key}=${entry.value}`;\n                               })\n                               .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n","import { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader implements MapsAPILoader {\n  load(): Promise<void> {\n    if (!(window as any).google || !(window as any).google.maps) {\n      throw new Error(\n          'Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n    return Promise.resolve();\n  }\n}\n","import { LatLngLiteral } from './services/google-maps-types';\n\n// exported map types\nexport {\n  KmlMouseEvent,\n  DataMouseEvent,\n  LatLngBounds,\n  LatLngBoundsLiteral,\n  LatLng,\n  LatLngLiteral,\n  PolyMouseEvent,\n  MarkerLabel,\n  Geocoder,\n  GeocoderAddressComponent,\n  GeocoderComponentRestrictions,\n  GeocoderGeometry,\n  GeocoderLocationType,\n  GeocoderRequest,\n  GeocoderResult,\n  GeocoderStatus,\n  MapTypeStyle,\n  Padding,\n  ControlPosition,\n  OverviewMapControlOptions,\n  PanControlOptions,\n  RotateControlOptions,\n  MapTypeControlOptions,\n  MapTypeId,\n  ScaleControlOptions,\n  ScaleControlStyle,\n  StreetViewControlOptions,\n  ZoomControlOptions,\n  ZoomControlStyle,\n  FullscreenControlOptions,\n  CircleOptions,\n  Circle,\n  Polyline,\n  PolylineOptions,\n  Polygon,\n  PolygonOptions,\n  Rectangle,\n  RectangleOptions,\n  Marker,\n  MarkerOptions,\n} from './services/google-maps-types';\n\n/**\n * MouseEvent gets emitted when the user triggers mouse events on the map.\n */\nexport interface MouseEvent {\n  coords: LatLngLiteral;\n  placeId?: string;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AgmBicyclingLayer } from './directives/bicycling-layer';\nimport { AgmCircle } from './directives/circle';\nimport { AgmDataLayer } from './directives/data-layer';\nimport { AgmFitBounds } from './directives/fit-bounds';\nimport { AgmInfoWindow } from './directives/info-window';\nimport { AgmKmlLayer } from './directives/kml-layer';\nimport { AgmMap } from './directives/map';\nimport { AgmMarker } from './directives/marker';\nimport { AgmPolygon } from './directives/polygon';\nimport { AgmPolyline } from './directives/polyline';\nimport { AgmPolylineIcon } from './directives/polyline-icon';\nimport { AgmPolylinePoint } from './directives/polyline-point';\nimport { AgmRectangle } from './directives/rectangle';\nimport { AgmTransitLayer } from './directives/transit-layer';\n\nimport { LAZY_MAPS_API_CONFIG, LazyMapsAPILoader, LazyMapsAPILoaderConfigLiteral } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\n\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    AgmBicyclingLayer,\n    AgmCircle,\n    AgmDataLayer,\n    AgmFitBounds,\n    AgmInfoWindow,\n    AgmKmlLayer,\n    AgmMap,\n    AgmMarker,\n    AgmPolygon,\n    AgmPolyline,\n    AgmPolylineIcon,\n    AgmPolylinePoint,\n    AgmRectangle,\n    AgmTransitLayer,\n  ];\n}\n\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\n@NgModule({declarations: coreDirectives(), exports: coreDirectives()})\nexport class AgmCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral): ModuleWithProviders {\n    return {\n      ngModule: AgmCoreModule,\n      providers: [\n        ...BROWSER_GLOBALS_PROVIDERS, {provide: MapsAPILoader, useClass: LazyMapsAPILoader},\n        {provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig},\n      ],\n    };\n  }\n}\n","// main modules\nexport * from './directives';\nexport * from './services';\nexport * from './map-types';\n\n// core module\n// we explicitly export the module here to prevent this Ionic 2 bug:\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\nexport { AgmCoreModule } from './core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {coreDirectives as Éµb} from './core.module';\nexport {FitBoundsService as Éµa} from './services/fit-bounds';\nexport {BROWSER_GLOBALS_PROVIDERS as Éµe,DocumentRef as Éµd,WindowRef as Éµc} from './utils/browser-globals';","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * @description\n * Defines an interface that acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface to create a custom form control directive\n * that integrates with Angular forms.\n *\n * @see DefaultValueAccessor\n *\n * @publicApi\n */\nexport interface ControlValueAccessor {\n  /**\n   * @description\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @usageNotes\n   * ### Write a value to the element\n   *\n   * The following example writes a value to the native DOM element.\n   *\n   * ```ts\n   * writeValue(value: any): void {\n   *   this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n   * }\n   * ```\n   *\n   * @param obj The new value for the element\n   */\n  writeValue(obj: any): void;\n\n  /**\n   * @description\n   * Registers a callback function that is called when the control's value\n   * changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form\n   * model when values propagate from the view to the model.\n   *\n   * When implementing the `registerOnChange` method in your own value accessor,\n   * save the given function so your class calls it at the appropriate time.\n   *\n   * @usageNotes\n   * ### Store the change function\n   *\n   * The following example stores the provided function as an internal method.\n   *\n   * ```ts\n   * registerOnChange(fn: (_: any) => void): void {\n   *   this._onChange = fn;\n   * }\n   * ```\n   *\n   * When the value changes in the UI, call the registered\n   * function to allow the forms API to update itself:\n   *\n   * ```ts\n   * host: {\n   *    '(change)': '_onChange($event.target.value)'\n   * }\n   * ```\n   *\n   * @param fn The callback function to register\n   */\n  registerOnChange(fn: any): void;\n\n  /**\n   * @description\n   * Registers a callback function that is called by the forms API on initialization\n   * to update the form model on blur.\n   *\n   * When implementing `registerOnTouched` in your own value accessor, save the given\n   * function so your class calls it when the control should be considered\n   * blurred or \"touched\".\n   *\n   * @usageNotes\n   * ### Store the callback function\n   *\n   * The following example stores the provided function as an internal method.\n   *\n   * ```ts\n   * registerOnTouched(fn: any): void {\n   *   this._onTouched = fn;\n   * }\n   * ```\n   *\n   * On blur (or equivalent), your class should call the registered function to allow\n   * the forms API to update itself:\n   *\n   * ```ts\n   * host: {\n   *    '(blur)': '_onTouched()'\n   * }\n   * ```\n   *\n   * @param fn The callback function to register\n   */\n  registerOnTouched(fn: any): void;\n\n  /**\n   * @description\n   * Function that is called by the forms API when the control status changes to\n   * or from 'DISABLED'. Depending on the status, it enables or disables the\n   * appropriate DOM element.\n   *\n   * @usageNotes\n   * The following is an example of writing the disabled property to a native DOM element:\n   *\n   * ```ts\n   * setDisabledState(isDisabled: boolean): void {\n   *   this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n   * }\n   * ```\n   *\n   * @param isDisabled The disabled status to set on the element\n   */\n  setDisabledState?(isDisabled: boolean): void;\n}\n\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nexport const NG_VALUE_ACCESSOR = new InjectionToken<ControlValueAccessor>('NgValueAccessor');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Renderer2} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true,\n};\n\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n  host: {'(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()'},\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n})\nexport class CheckboxControlValueAccessor implements ControlValueAccessor {\n  /**\n   * The registered callback function called when a change event occurs on the input element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  /**\n   * Sets the \"checked\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {Directive, ElementRef, forwardRef, Inject, InjectionToken, Optional, Renderer2} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const DEFAULT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n  const userAgent = getDOM() ? getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nexport const COMPOSITION_BUFFER_MODE = new InjectionToken<boolean>('CompositionEventMode');\n\n/**\n * @description\n *\n * {@searchKeywords ngDefaultControl}\n *\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n  // TODO: vsavkin replace the above selector with the one below it once\n  // https://github.com/angular/angular/issues/3011 is implemented\n  // selector: '[ngModel],[formControl],[formControlName]',\n  host: {\n    '(input)': '$any(this)._handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '$any(this)._compositionStart()',\n    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n  },\n  providers: [DEFAULT_VALUE_ACCESSOR]\n})\nexport class DefaultValueAccessor implements ControlValueAccessor {\n  /**\n   * The registered callback function called when an input event occurs on the input element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  /** Whether the user is creating a composition string (IME events). */\n  private _composing = false;\n\n  constructor(\n      private _renderer: Renderer2, private _elementRef: ElementRef,\n      @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean) {\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    const normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /** @internal */\n  _handleInput(value: any): void {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this.onChange(value);\n    }\n  }\n\n  /** @internal */\n  _compositionStart(): void {\n    this._composing = true;\n  }\n\n  /** @internal */\n  _compositionEnd(value: any): void {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {AbstractControl} from '../model';\nimport {ValidationErrors} from './validators';\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nexport abstract class AbstractControlDirective {\n  /**\n   * @description\n   * A reference to the underlying control.\n   *\n   * @returns the control that backs this directive. Most properties fall through to that instance.\n   */\n  abstract get control(): AbstractControl|null;\n\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value(): any {\n    return this.control ? this.control.value : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid(): boolean|null {\n    return this.control ? this.control.valid : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid(): boolean|null {\n    return this.control ? this.control.invalid : null;\n  }\n\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending(): boolean|null {\n    return this.control ? this.control.pending : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled(): boolean|null {\n    return this.control ? this.control.disabled : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled(): boolean|null {\n    return this.control ? this.control.enabled : null;\n  }\n\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors(): ValidationErrors|null {\n    return this.control ? this.control.errors : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine(): boolean|null {\n    return this.control ? this.control.pristine : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty(): boolean|null {\n    return this.control ? this.control.dirty : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched(): boolean|null {\n    return this.control ? this.control.touched : null;\n  }\n\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status(): string|null {\n    return this.control ? this.control.status : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched(): boolean|null {\n    return this.control ? this.control.untouched : null;\n  }\n\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges(): Observable<any>|null {\n    return this.control ? this.control.statusChanges : null;\n  }\n\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges(): Observable<any>|null {\n    return this.control ? this.control.valueChanges : null;\n  }\n\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path(): string[]|null {\n    return null;\n  }\n\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value: any = undefined): void {\n    if (this.control) this.control.reset(value);\n  }\n\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode: string, path?: Array<string|number>|string): boolean {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode: string, path?: Array<string|number>|string): any {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {Form} from './form_interface';\n\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nexport abstract class ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The name for the control\n   */\n  // TODO(issue/24571): remove '!'.\n  name!: string|number|null;\n\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective(): Form|null {\n    return null;\n  }\n\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path(): string[]|null {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\nfunction unimplemented(): any {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    throw new Error('unimplemented');\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nexport abstract class NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent: ControlContainer|null = null;\n\n  /**\n   * @description\n   * The name for the control\n   */\n  name: string|number|null = null;\n\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor: ControlValueAccessor|null = null;\n\n  /**\n   * @description\n   * The uncomposed array of synchronous validators for the control\n   *\n   * @internal\n   */\n  _rawValidators: Array<Validator|ValidatorFn> = [];\n\n  /**\n   * @description\n   * The uncomposed array of async validators for the control\n   *\n   * @internal\n   */\n  _rawAsyncValidators: Array<AsyncValidator|AsyncValidatorFn> = [];\n\n  /**\n   * @description\n   * The registered synchronous validator function for the control\n   *\n   * @throws An exception that this method is not implemented\n   */\n  get validator(): ValidatorFn|null {\n    return <ValidatorFn>unimplemented();\n  }\n\n  /**\n   * @description\n   * The registered async validator function for the control\n   *\n   * @throws An exception that this method is not implemented\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return <AsyncValidatorFn>unimplemented();\n  }\n\n  /**\n   * @description\n   * The callback method to update the model from the view when requested\n   *\n   * @param newValue The new value for the view\n   */\n  abstract viewToModelUpdate(newValue: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\n\nexport class AbstractControlStatus {\n  private _cd: AbstractControlDirective;\n\n  constructor(cd: AbstractControlDirective) {\n    this._cd = cd;\n  }\n\n  get ngClassUntouched(): boolean {\n    return this._cd.control ? this._cd.control.untouched : false;\n  }\n  get ngClassTouched(): boolean {\n    return this._cd.control ? this._cd.control.touched : false;\n  }\n  get ngClassPristine(): boolean {\n    return this._cd.control ? this._cd.control.pristine : false;\n  }\n  get ngClassDirty(): boolean {\n    return this._cd.control ? this._cd.control.dirty : false;\n  }\n  get ngClassValid(): boolean {\n    return this._cd.control ? this._cd.control.valid : false;\n  }\n  get ngClassInvalid(): boolean {\n    return this._cd.control ? this._cd.control.invalid : false;\n  }\n  get ngClassPending(): boolean {\n    return this._cd.control ? this._cd.control.pending : false;\n  }\n}\n\nexport const ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost})\nexport class NgControlStatus extends AbstractControlStatus {\n  constructor(@Self() cd: NgControl) {\n    super(cd);\n  }\n}\n\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n})\nexport class NgControlStatusGroup extends AbstractControlStatus {\n  constructor(@Self() cd: ControlContainer) {\n    super(cd);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, ɵisObservable as isObservable, ɵisPromise as isPromise} from '@angular/core';\nimport {forkJoin, from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AsyncValidator, AsyncValidatorFn, ValidationErrors, Validator, ValidatorFn} from './directives/validators';\nimport {AbstractControl} from './model';\n\nfunction isEmptyInputValue(value: any): boolean {\n  // we don't check for string here so it also works with arrays\n  return value == null || value.length === 0;\n}\n\nfunction hasValidLength(value: any): boolean {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport const NG_VALIDATORS = new InjectionToken<Array<Validator|Function>>('NgValidators');\n\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nexport const NG_ASYNC_VALIDATORS =\n    new InjectionToken<Array<Validator|Function>>('NgAsyncValidators');\n\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP =\n    /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nexport class Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   * The validator exists only as a function and not as a directive.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static min(min: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors|null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const value = parseFloat(control.value);\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return !isNaN(value) && value < min ? {'min': {'min': min, 'actual': control.value}} : null;\n    };\n  }\n\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   * The validator exists only as a function and not as a directive.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static max(max: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors|null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const value = parseFloat(control.value);\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return !isNaN(value) && value > max ? {'max': {'max': max, 'actual': control.value}} : null;\n    };\n  }\n\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static required(control: AbstractControl): ValidationErrors|null {\n    return isEmptyInputValue(control.value) ? {'required': true} : null;\n  }\n\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    return control.value === true ? null : {'required': true};\n  }\n\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (isEmptyInputValue(control.value)) {\n      return null;  // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : {'email': true};\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors|null => {\n      if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n\n      return control.value.length < minLength ?\n          {'minlength': {'requiredLength': minLength, 'actualLength': control.value.length}} :\n          null;\n    };\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors|null => {\n      return hasValidLength(control.value) && control.value.length > maxLength ?\n          {'maxlength': {'requiredLength': maxLength, 'actualLength': control.value.length}} :\n          null;\n    };\n  }\n\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static pattern(pattern: string|RegExp): ValidatorFn {\n    if (!pattern) return Validators.nullValidator;\n    let regex: RegExp;\n    let regexStr: string;\n    if (typeof pattern === 'string') {\n      regexStr = '';\n\n      if (pattern.charAt(0) !== '^') regexStr += '^';\n\n      regexStr += pattern;\n\n      if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n\n      regex = new RegExp(regexStr);\n    } else {\n      regexStr = pattern.toString();\n      regex = pattern;\n    }\n    return (control: AbstractControl): ValidationErrors|null => {\n      if (isEmptyInputValue(control.value)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const value: string = control.value;\n      return regex.test(value) ? null :\n                                 {'pattern': {'requiredPattern': regexStr, 'actualValue': value}};\n    };\n  }\n\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * @description\n   * Compose multiple validators into a single function that returns the union\n   * of the individual error maps for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error maps of the validators if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static compose(validators: null): null;\n  static compose(validators: (ValidatorFn|null|undefined)[]): ValidatorFn|null;\n  static compose(validators: (ValidatorFn|null|undefined)[]|null): ValidatorFn|null {\n    if (!validators) return null;\n    const presentValidators: ValidatorFn[] = validators.filter(isPresent) as any;\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      return mergeErrors(executeValidators<ValidatorFn>(control, presentValidators));\n    };\n  }\n\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see `updateValueAndValidity()`\n   *\n   */\n  static composeAsync(validators: (AsyncValidatorFn|null)[]): AsyncValidatorFn|null {\n    if (!validators) return null;\n    const presentValidators: AsyncValidatorFn[] = validators.filter(isPresent) as any;\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      const observables =\n          executeValidators<AsyncValidatorFn>(control, presentValidators).map(toObservable);\n      return forkJoin(observables).pipe(map(mergeErrors));\n    };\n  }\n}\n\nfunction isPresent(o: any): boolean {\n  return o != null;\n}\n\nexport function toObservable(r: any): Observable<any> {\n  const obs = isPromise(r) ? from(r) : r;\n  if (!(isObservable(obs)) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n    throw new Error(`Expected validator to return Promise or Observable.`);\n  }\n  return obs;\n}\n\nfunction mergeErrors(arrayOfErrors: (ValidationErrors|null)[]): ValidationErrors|null {\n  let res: {[key: string]: any} = {};\n\n  // Not using Array.reduce here due to a Chrome 80 bug\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n  arrayOfErrors.forEach((errors: ValidationErrors|null) => {\n    res = errors != null ? {...res!, ...errors} : res!;\n  });\n\n  return Object.keys(res).length === 0 ? null : res;\n}\n\ntype GenericValidatorFn = (control: AbstractControl) => any;\n\nfunction executeValidators<V extends GenericValidatorFn>(\n    control: AbstractControl, validators: V[]): ReturnType<V>[] {\n  return validators.map(validator => validator(control));\n}\n\nfunction isValidatorFn<V>(validator: V|Validator|AsyncValidator): validator is V {\n  return !(validator as Validator).validate;\n}\n\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nexport function normalizeValidators<V>(validators: (V|Validator|AsyncValidator)[]): V[] {\n  return validators.map(validator => {\n    return isValidatorFn<V>(validator) ?\n        validator :\n        ((c: AbstractControl) => validator.validate(c)) as unknown as V;\n  });\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Renderer2} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const NUMBER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n  host: {'(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [NUMBER_VALUE_ACCESSOR]\n})\nexport class NumberValueAccessor implements ControlValueAccessor {\n  /**\n   * The registered callback function called when a change or input event occurs on the input\n   * element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value: number): void {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Injectable, Injector, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\n\nexport const RADIO_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\n\nfunction throwNameError() {\n  throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\n@Injectable()\nexport class RadioControlRegistry {\n  private _accessors: any[] = [];\n\n  /**\n   * @description\n   * Adds a control to the internal registry. For internal use only.\n   */\n  add(control: NgControl, accessor: RadioControlValueAccessor) {\n    this._accessors.push([control, accessor]);\n  }\n\n  /**\n   * @description\n   * Removes a control from the internal registry. For internal use only.\n   */\n  remove(accessor: RadioControlValueAccessor) {\n    for (let i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @description\n   * Selects a radio button. For internal use only.\n   */\n  select(accessor: RadioControlValueAccessor) {\n    this._accessors.forEach((c) => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n\n  private _isSameGroup(\n      controlPair: [NgControl, RadioControlValueAccessor],\n      accessor: RadioControlValueAccessor): boolean {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent &&\n        controlPair[1].name === accessor.name;\n  }\n}\n\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n  host: {'(change)': 'onChange()', '(blur)': 'onTouched()'},\n  providers: [RADIO_VALUE_ACCESSOR]\n})\nexport class RadioControlValueAccessor implements ControlValueAccessor, OnDestroy, OnInit {\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _state!: boolean;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _control!: NgControl;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _fn!: Function;\n\n  /**\n   * The registered callback function called when a change event occurs on the input element.\n   * @nodoc\n   */\n  onChange = () => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  /**\n   * @description\n   * Tracks the name of the radio input element.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input() name!: string;\n\n  /**\n   * @description\n   * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input() formControlName!: string;\n\n  /**\n   * @description\n   * Tracks the value of the radio input element\n   */\n  @Input() value: any;\n\n  constructor(\n      private _renderer: Renderer2, private _elementRef: ElementRef,\n      private _registry: RadioControlRegistry, private _injector: Injector) {}\n\n  /** @nodoc */\n  ngOnInit(): void {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    this._registry.remove(this);\n  }\n\n  /**\n   * Sets the \"checked\" property value on the radio input element.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    this._state = value === this.value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n\n  /**\n   * Sets the \"value\" on the radio input element and unchecks it.\n   *\n   * @param value\n   */\n  fireUncheck(value: any): void {\n    this.writeValue(value);\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  private _checkName(): void {\n    if (this.name && this.formControlName && this.name !== this.formControlName &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Renderer2, StaticProvider} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const RANGE_VALUE_ACCESSOR: StaticProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [RANGE_VALUE_ACCESSOR]\n})\nexport class RangeValueAccessor implements ControlValueAccessor {\n  /**\n   * The registered callback function called when a change or input event occurs on the input\n   * element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the range input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const FormErrorExamples = {\n  formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n\n  formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n\n  formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n\n  ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n\n  ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {FormErrorExamples as Examples} from './error_examples';\n\nexport class ReactiveErrors {\n  static controlParentException(): void {\n    throw new Error(\n        `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formControlName}`);\n  }\n\n  static ngModelGroupException(): void {\n    throw new Error(\n        `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${Examples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${Examples.ngModelGroup}`);\n  }\n\n  static missingFormException(): void {\n    throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${Examples.formControlName}`);\n  }\n\n  static groupParentException(): void {\n    throw new Error(\n        `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formGroupName}`);\n  }\n\n  static arrayParentException(): void {\n    throw new Error(\n        `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${Examples.formArrayName}`);\n  }\n\n  static disabledAttrWarning(): void {\n    console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n  }\n\n  static ngModelWarning(directiveName: string): void {\n    console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${\n        directiveName === 'formControl' ? 'FormControlDirective' :\n                                          'FormControlName'}#use-with-ngmodel\n    `);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Host, Input, OnDestroy, Optional, Renderer2, StaticProvider} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const SELECT_VALUE_ACCESSOR: StaticProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\n\nfunction _buildValueString(id: string|null, value: any): string {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n})\nexport class SelectControlValueAccessor implements ControlValueAccessor {\n  /** @nodoc */\n  value: any;\n\n  /** @internal */\n  _optionMap: Map<string, any> = new Map<string, any>();\n\n  /** @internal */\n  _idCounter: number = 0;\n\n  /**\n   * The registered callback function called when a change event occurs on the input element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  @Input()\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n\n  private _compareWith: (o1: any, o2: any) => boolean = Object.is;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  /**\n   * Sets the \"value\" property on the input element. The \"selectedIndex\"\n   * property is also set if an ID is provided on the option element.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    this.value = value;\n    const id: string|null = this._getOptionId(value);\n    if (id == null) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n    }\n    const valueString = _buildValueString(id, value);\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n  }\n\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = (valueString: string) => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the select input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /** @internal */\n  _registerOption(): string {\n    return (this._idCounter++).toString();\n  }\n\n  /** @internal */\n  _getOptionId(value: any): string|null {\n    for (const id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n\n  /** @internal */\n  _getOptionValue(valueString: string): any {\n    const id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\n}\n\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({selector: 'option'})\nexport class NgSelectOption implements OnDestroy {\n  /**\n   * @description\n   * ID of the option element\n   */\n  // TODO(issue/24571): remove '!'.\n  id!: string;\n\n  constructor(\n      private _element: ElementRef, private _renderer: Renderer2,\n      @Optional() @Host() private _select: SelectControlValueAccessor) {\n    if (this._select) this.id = this._select._registerOption();\n  }\n\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  @Input('ngValue')\n  set ngValue(value: any) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n\n  /** @internal */\n  _setElementValue(value: string): void {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, forwardRef, Host, Input, OnDestroy, Optional, Renderer2, StaticProvider} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const SELECT_MULTIPLE_VALUE_ACCESSOR: StaticProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\n\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n\n/** Mock interface for HTML Options */\ninterface HTMLOption {\n  value: string;\n  selected: boolean;\n}\n\n/** Mock interface for HTMLCollection */\nabstract class HTMLCollection {\n  // TODO(issue/24571): remove '!'.\n  length!: number;\n  abstract item(_: number): HTMLOption;\n}\n\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n  host: {'(change)': 'onChange($event.target)', '(blur)': 'onTouched()'},\n  providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n})\nexport class SelectMultipleControlValueAccessor implements ControlValueAccessor {\n  /**\n   * The current value.\n   * @nodoc\n   */\n  value: any;\n\n  /** @internal */\n  _optionMap: Map<string, ɵNgSelectMultipleOption> = new Map<string, ɵNgSelectMultipleOption>();\n\n  /** @internal */\n  _idCounter: number = 0;\n\n  /**\n   * The registered callback function called when a change event occurs on the input element.\n   * @nodoc\n   */\n  onChange = (_: any) => {};\n\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @nodoc\n   */\n  onTouched = () => {};\n\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  @Input()\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n\n  private _compareWith: (o1: any, o2: any) => boolean = Object.is;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  /**\n   * Sets the \"value\" property on one or of more of the select's options.\n   * @nodoc\n   */\n  writeValue(value: any): void {\n    this.value = value;\n    let optionSelectedStateSetter: (opt: ɵNgSelectMultipleOption, o: any) => void;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const ids = value.map((v) => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(ids.indexOf(o.toString()) > -1);\n      };\n    } else {\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(false);\n      };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n\n  /**\n   * Registers a function called when the control value changes\n   * and writes an array of the selected options.\n   * @nodoc\n   */\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = (_: any) => {\n      const selected: Array<any> = [];\n      if (_.selectedOptions !== undefined) {\n        const options: HTMLCollection = _.selectedOptions;\n        for (let i = 0; i < options.length; i++) {\n          const opt: any = options.item(i);\n          const val: any = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade on IE\n      else {\n        const options: HTMLCollection = <HTMLCollection>_.options;\n        for (let i = 0; i < options.length; i++) {\n          const opt: HTMLOption = options.item(i);\n          if (opt.selected) {\n            const val: any = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the \"disabled\" property on the select input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /** @internal */\n  _registerOption(value: ɵNgSelectMultipleOption): string {\n    const id: string = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n\n  /** @internal */\n  _getOptionId(value: any): string|null {\n    for (const id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id)!._value, value)) return id;\n    }\n    return null;\n  }\n\n  /** @internal */\n  _getOptionValue(valueString: string): any {\n    const id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)!._value : valueString;\n  }\n}\n\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({selector: 'option'})\nexport class ɵNgSelectMultipleOption implements OnDestroy {\n  // TODO(issue/24571): remove '!'.\n  id!: string;\n  /** @internal */\n  _value: any;\n\n  constructor(\n      private _element: ElementRef, private _renderer: Renderer2,\n      @Optional() @Host() private _select: SelectMultipleControlValueAccessor) {\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  @Input('ngValue')\n  set ngValue(value: any) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  @Input('value')\n  set value(value: any) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n\n  /** @internal */\n  _setElementValue(value: string): void {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n\n  /** @internal */\n  _setSelected(selected: boolean) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n}\n\nexport {ɵNgSelectMultipleOption as NgSelectMultipleOption};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '@angular/core';\n\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {normalizeValidators, Validators} from '../validators';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {ReactiveErrors} from './reactive_errors';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\n\nexport function controlPath(name: string|null, parent: ControlContainer): string[] {\n  return [...parent.path!, name!];\n}\n\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n  }\n\n  control.validator = Validators.compose([control.validator!, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator!, dir.asyncValidator]);\n  dir.valueAccessor!.writeValue(control.value);\n\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n\n  setUpBlurPipeline(control, dir);\n\n  if (dir.valueAccessor!.setDisabledState) {\n    control.registerOnDisabledChange((isDisabled: boolean) => {\n      dir.valueAccessor!.setDisabledState!(isDisabled);\n    });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator|ValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange!(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: AsyncValidator|AsyncValidatorFn) => {\n    if ((<Validator>validator).registerOnValidatorChange)\n      (<Validator>validator).registerOnValidatorChange!(() => control.updateValueAndValidity());\n  });\n}\n\nexport function cleanUpControl(control: FormControl, dir: NgControl) {\n  const noop = () => {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      _noControlError(dir);\n    }\n  };\n\n  dir.valueAccessor!.registerOnChange(noop);\n  dir.valueAccessor!.registerOnTouched(noop);\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n\nfunction setUpViewChangePipeline(control: FormControl, dir: NgControl): void {\n  dir.valueAccessor!.registerOnChange((newValue: any) => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\n\nfunction setUpBlurPipeline(control: FormControl, dir: NgControl): void {\n  dir.valueAccessor!.registerOnTouched(() => {\n    control._pendingTouched = true;\n\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\n\nfunction updateControl(control: FormControl, dir: NgControl): void {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {emitModelToViewChange: false});\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\n\nfunction setUpModelChangePipeline(control: FormControl, dir: NgControl): void {\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => {\n    // control -> view\n    dir.valueAccessor!.writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n}\n\nexport function setUpFormContainer(\n    control: FormGroup|FormArray, dir: AbstractFormGroupDirective|FormArrayName) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n    _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let messageEnd: string;\n  if (dir.path!.length > 1) {\n    messageEnd = `path: '${dir.path!.join(' -> ')}'`;\n  } else if (dir.path![0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n\nexport function composeValidators(validators: Array<Validator|ValidatorFn>): ValidatorFn|null {\n  return validators != null ? Validators.compose(normalizeValidators<ValidatorFn>(validators)) :\n                              null;\n}\n\nexport function composeAsyncValidators(validators: Array<AsyncValidator|AsyncValidatorFn>):\n    AsyncValidatorFn|null {\n  return validators != null ?\n      Validators.composeAsync(normalizeValidators<AsyncValidatorFn>(validators)) :\n      null;\n}\n\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\n\nconst BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n\nexport function syncPendingControls(form: FormGroup, directives: NgControl[]): void {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control as FormControl;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor|null {\n  if (!valueAccessors) return null;\n\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n    _throwError(dir, 'Value accessor was not provided as an array for form control with');\n\n  let defaultAccessor: ControlValueAccessor|undefined = undefined;\n  let builtinAccessor: ControlValueAccessor|undefined = undefined;\n  let customAccessor: ControlValueAccessor|undefined = undefined;\n\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\n\nexport function removeDir<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n\n// TODO(kara): remove after deprecation period\nexport function _ngModelWarning(\n    name: string, type: {_ngModelWarningSentOnce: boolean},\n    instance: {_ngModelWarningSent: boolean}, warningConfig: string|null) {\n  if (!isDevMode() || warningConfig === 'never') return;\n\n  if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n      (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      ReactiveErrors.ngModelWarning(name);\n    }\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {composeAsyncValidators, composeValidators} from './directives/shared';\nimport {AsyncValidatorFn, ValidationErrors, ValidatorFn} from './directives/validators';\nimport {toObservable} from './validators';\n\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nexport const VALID = 'VALID';\n\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nexport const INVALID = 'INVALID';\n\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nexport const PENDING = 'PENDING';\n\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nexport const DISABLED = 'DISABLED';\n\nfunction _find(control: AbstractControl, path: Array<string|number>|string, delimiter: string) {\n  if (path == null) return null;\n\n  if (!Array.isArray(path)) {\n    path = path.split(delimiter);\n  }\n  if (Array.isArray(path) && path.length === 0) return null;\n\n  // Not using Array.reduce here due to a Chrome 80 bug\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n  let controlToFind: AbstractControl|null = control;\n  path.forEach((name: string|number) => {\n    if (controlToFind instanceof FormGroup) {\n      controlToFind = controlToFind.controls.hasOwnProperty(name as string) ?\n          controlToFind.controls[name] :\n          null;\n    } else if (controlToFind instanceof FormArray) {\n      controlToFind = controlToFind.at(<number>name) || null;\n    } else {\n      controlToFind = null;\n    }\n  });\n  return controlToFind;\n}\n\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|\n                        null): ValidatorFn|ValidatorFn[]|null {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator: ValidatorFn|ValidatorFn[]|null): ValidatorFn|null {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(\n    asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null,\n    validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null): AsyncValidatorFn|\n    AsyncValidatorFn[]|null {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|\n                                null): AsyncValidatorFn|null {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n                                         asyncValidator || null;\n}\n\nexport type FormHooks = 'change'|'blur'|'submit';\n\n/**\n * Interface for options provided to an `AbstractControl`.\n *\n * @publicApi\n */\nexport interface AbstractControlOptions {\n  /**\n   * @description\n   * The list of validators applied to a control.\n   */\n  validators?: ValidatorFn|ValidatorFn[]|null;\n  /**\n   * @description\n   * The list of async validators applied to control.\n   */\n  asyncValidators?: AsyncValidatorFn|AsyncValidatorFn[]|null;\n  /**\n   * @description\n   * The event name for control to update upon.\n   */\n  updateOn?: 'change'|'blur'|'submit';\n}\n\n\nfunction isOptionsObj(validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|\n                      null): validatorOrOpts is AbstractControlOptions {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n      typeof validatorOrOpts === 'object';\n}\n\n\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nexport abstract class AbstractControl {\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _pendingDirty!: boolean;\n\n  /**\n   * Indicates that a control has its own pending asynchronous validation in progress.\n   *\n   * @internal\n   */\n  _hasOwnPendingAsyncValidator = false;\n\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _pendingTouched!: boolean;\n\n  /** @internal */\n  _onCollectionChange = () => {};\n\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _updateOn!: FormHooks;\n\n  // TODO(issue/24571): remove '!'.\n  private _parent!: FormGroup|FormArray;\n  private _asyncValidationSubscription: any;\n\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   *\n   * @internal\n   */\n  private _composedValidatorFn: ValidatorFn|null;\n\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   *\n   * @internal\n   */\n  private _composedAsyncValidatorFn: AsyncValidatorFn|null;\n\n  /**\n   * Synchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setValidators` function\n   *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n   *\n   * @internal\n   */\n  private _rawValidators: ValidatorFn|ValidatorFn[]|null;\n\n  /**\n   * Asynchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setAsyncValidators` function\n   *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n   * asyncValidatorFn`)\n   *\n   * @internal\n   */\n  private _rawAsyncValidators: AsyncValidatorFn|AsyncValidatorFn[]|null;\n\n  /**\n   * The current value of the control.\n   *\n   * * For a `FormControl`, the current value.\n   * * For an enabled `FormGroup`, the values of enabled controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a disabled `FormGroup`, the values of all controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a `FormArray`, the values of enabled controls as an array.\n   *\n   */\n  public readonly value: any;\n\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(\n      validators: ValidatorFn|ValidatorFn[]|null,\n      asyncValidators: AsyncValidatorFn|AsyncValidatorFn[]|null) {\n    this._rawValidators = validators;\n    this._rawAsyncValidators = asyncValidators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n\n  /**\n   * The function that is used to determine the validity of this control synchronously.\n   */\n  get validator(): ValidatorFn|null {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn: ValidatorFn|null) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n\n  /**\n   * The function that is used to determine the validity of this control asynchronously.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn: AsyncValidatorFn|null) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n\n  /**\n   * The parent control.\n   */\n  get parent(): FormGroup|FormArray {\n    return this._parent;\n  }\n\n  /**\n   * The validation status of the control. There are four possible\n   * validation status values:\n   *\n   * * **VALID**: This control has passed all validation checks.\n   * * **INVALID**: This control has failed at least one validation check.\n   * * **PENDING**: This control is in the midst of conducting a validation check.\n   * * **DISABLED**: This control is exempt from validation checks.\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly status!: string;\n\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid(): boolean {\n    return this.status === VALID;\n  }\n\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid(): boolean {\n    return this.status === INVALID;\n  }\n\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending(): boolean {\n    return this.status == PENDING;\n  }\n\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled(): boolean {\n    return this.status === DISABLED;\n  }\n\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled(): boolean {\n    return this.status !== DISABLED;\n  }\n\n  /**\n   * An object containing any errors generated by failing validation,\n   * or null if there are no errors.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly errors!: ValidationErrors|null;\n\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  public readonly pristine: boolean = true;\n\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty(): boolean {\n    return !this.pristine;\n  }\n\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  public readonly touched: boolean = false;\n\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched(): boolean {\n    return !this.touched;\n  }\n\n  /**\n   * A multicasting observable that emits an event every time the value of the control changes, in\n   * the UI or programmatically. It also emits an event each time you call enable() or disable()\n   * without passing along {emitEvent: false} as a function argument.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly valueChanges!: Observable<any>;\n\n  /**\n   * A multicasting observable that emits an event every time the validation `status` of the control\n   * recalculates.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly statusChanges!: Observable<any>;\n\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn(): FormHooks {\n    return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n  }\n\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing sync validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  setValidators(newValidator: ValidatorFn|ValidatorFn[]|null): void {\n    this._rawValidators = newValidator;\n    this._composedValidatorFn = coerceToValidator(newValidator);\n  }\n\n  /**\n   * Sets the async validators that are active on this control. Calling this\n   * overwrites any existing async validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  setAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]|null): void {\n    this._rawAsyncValidators = newValidator;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(newValidator);\n  }\n\n  /**\n   * Empties out the sync validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators(): void {\n    this.validator = null;\n  }\n\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators(): void {\n    this.asyncValidator = null;\n  }\n\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see `markAsUntouched()`\n   * @see `markAsDirty()`\n   * @see `markAsPristine()`\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts: {onlySelf?: boolean} = {}): void {\n    (this as {touched: boolean}).touched = true;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see `markAsTouched()`\n   */\n  markAllAsTouched(): void {\n    this.markAsTouched({onlySelf: true});\n\n    this._forEachChild((control: AbstractControl) => control.markAllAsTouched());\n  }\n\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see `markAsTouched()`\n   * @see `markAsDirty()`\n   * @see `markAsPristine()`\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts: {onlySelf?: boolean} = {}): void {\n    (this as {touched: boolean}).touched = false;\n    this._pendingTouched = false;\n\n    this._forEachChild((control: AbstractControl) => {\n      control.markAsUntouched({onlySelf: true});\n    });\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see `markAsTouched()`\n   * @see `markAsUntouched()`\n   * @see `markAsPristine()`\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts: {onlySelf?: boolean} = {}): void {\n    (this as {pristine: boolean}).pristine = false;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see `markAsTouched()`\n   * @see `markAsUntouched()`\n   * @see `markAsDirty()`\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts: {onlySelf?: boolean} = {}): void {\n    (this as {pristine: boolean}).pristine = true;\n    this._pendingDirty = false;\n\n    this._forEachChild((control: AbstractControl) => {\n      control.markAsPristine({onlySelf: true});\n    });\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    (this as {status: string}).status = PENDING;\n\n    if (opts.emitEvent !== false) {\n      (this.statusChanges as EventEmitter<any>).emit(this.status);\n    }\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n\n    (this as {status: string}).status = DISABLED;\n    (this as {errors: ValidationErrors | null}).errors = null;\n    this._forEachChild((control: AbstractControl) => {\n      control.disable({...opts, onlySelf: true});\n    });\n    this._updateValue();\n\n    if (opts.emitEvent !== false) {\n      (this.valueChanges as EventEmitter<any>).emit(this.value);\n      (this.statusChanges as EventEmitter<string>).emit(this.status);\n    }\n\n    this._updateAncestors({...opts, skipPristineCheck});\n    this._onDisabledChange.forEach((changeFn) => changeFn(true));\n  }\n\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n\n    (this as {status: string}).status = VALID;\n    this._forEachChild((control: AbstractControl) => {\n      control.enable({...opts, onlySelf: true});\n    });\n    this.updateValueAndValidity({onlySelf: true, emitEvent: opts.emitEvent});\n\n    this._updateAncestors({...opts, skipPristineCheck});\n    this._onDisabledChange.forEach((changeFn) => changeFn(false));\n  }\n\n  private _updateAncestors(\n      opts: {onlySelf?: boolean, emitEvent?: boolean, skipPristineCheck?: boolean}) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n\n  /**\n   * @param parent Sets the parent of the control\n   */\n  setParent(parent: FormGroup|FormArray): void {\n    this._parent = parent;\n  }\n\n  /**\n   * Sets the value of the control. Abstract method (implemented in sub-classes).\n   */\n  abstract setValue(value: any, options?: Object): void;\n\n  /**\n   * Patches the value of the control. Abstract method (implemented in sub-classes).\n   */\n  abstract patchValue(value: any, options?: Object): void;\n\n  /**\n   * Resets the control. Abstract method (implemented in sub-classes).\n   */\n  abstract reset(value?: any, options?: Object): void;\n\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._setInitialStatus();\n    this._updateValue();\n\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      (this as {errors: ValidationErrors | null}).errors = this._runValidator();\n      (this as {status: string}).status = this._calculateStatus();\n\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n\n    if (opts.emitEvent !== false) {\n      (this.valueChanges as EventEmitter<any>).emit(this.value);\n      (this.statusChanges as EventEmitter<string>).emit(this.status);\n    }\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n\n  /** @internal */\n  _updateTreeValidity(opts: {emitEvent?: boolean} = {emitEvent: true}) {\n    this._forEachChild((ctrl: AbstractControl) => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({onlySelf: true, emitEvent: opts.emitEvent});\n  }\n\n  private _setInitialStatus() {\n    (this as {status: string}).status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n\n  private _runValidator(): ValidationErrors|null {\n    return this.validator ? this.validator(this) : null;\n  }\n\n  private _runAsyncValidator(emitEvent?: boolean): void {\n    if (this.asyncValidator) {\n      (this as {status: string}).status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe((errors: ValidationErrors|null) => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {emitEvent});\n      });\n    }\n  }\n\n  private _cancelExistingSubscription(): void {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors: ValidationErrors|null, opts: {emitEvent?: boolean} = {}): void {\n    (this as {errors: ValidationErrors | null}).errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name']);`\n   */\n  get(path: Array<string|number>|string): AbstractControl|null {\n    return _find(this, path, '.');\n  }\n\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode: string, path?: Array<string|number>|string): any {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode: string, path?: Array<string|number>|string): boolean {\n    return !!this.getError(errorCode, path);\n  }\n\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root(): AbstractControl {\n    let x: AbstractControl = this;\n\n    while (x._parent) {\n      x = x._parent;\n    }\n\n    return x;\n  }\n\n  /** @internal */\n  _updateControlsErrors(emitEvent: boolean): void {\n    (this as {status: string}).status = this._calculateStatus();\n\n    if (emitEvent) {\n      (this.statusChanges as EventEmitter<string>).emit(this.status);\n    }\n\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n\n  /** @internal */\n  _initObservables() {\n    (this as {valueChanges: Observable<any>}).valueChanges = new EventEmitter();\n    (this as {statusChanges: Observable<any>}).statusChanges = new EventEmitter();\n  }\n\n\n  private _calculateStatus(): string {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n\n  /** @internal */\n  abstract _updateValue(): void;\n\n  /** @internal */\n  abstract _forEachChild(cb: Function): void;\n\n  /** @internal */\n  abstract _anyControls(condition: Function): boolean;\n\n  /** @internal */\n  abstract _allControlsDisabled(): boolean;\n\n  /** @internal */\n  abstract _syncPendingControls(): boolean;\n\n  /** @internal */\n  _anyControlsHaveStatus(status: string): boolean {\n    return this._anyControls((control: AbstractControl) => control.status === status);\n  }\n\n  /** @internal */\n  _anyControlsDirty(): boolean {\n    return this._anyControls((control: AbstractControl) => control.dirty);\n  }\n\n  /** @internal */\n  _anyControlsTouched(): boolean {\n    return this._anyControls((control: AbstractControl) => control.touched);\n  }\n\n  /** @internal */\n  _updatePristine(opts: {onlySelf?: boolean} = {}): void {\n    (this as {pristine: boolean}).pristine = !this._anyControlsDirty();\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n\n  /** @internal */\n  _updateTouched(opts: {onlySelf?: boolean} = {}): void {\n    (this as {touched: boolean}).touched = this._anyControlsTouched();\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n\n  /** @internal */\n  _onDisabledChange: Function[] = [];\n\n  /** @internal */\n  _isBoxedValue(formState: any): boolean {\n    return typeof formState === 'object' && formState !== null &&\n        Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n  }\n\n  /** @internal */\n  _registerOnCollectionChange(fn: () => void): void {\n    this._onCollectionChange = fn;\n  }\n\n  /** @internal */\n  _setUpdateStrategy(opts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null): void {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn!;\n    }\n  }\n\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  private _parentMarkedDirty(onlySelf?: boolean): boolean {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n  }\n}\n\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nexport class FormControl extends AbstractControl {\n  /** @internal */\n  _onChange: Function[] = [];\n\n  /** @internal */\n  _pendingValue: any;\n\n  /** @internal */\n  _pendingChange: any;\n\n  /**\n   * Creates a new `FormControl` instance.\n   *\n   * @param formState Initializes the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(\n      formState: any = null,\n      validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n    this._initObservables();\n  }\n\n  /**\n   * Sets a new value for the form control.\n   *\n   * @param value The new value for the control.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n   * `onChange` event to\n   * update the view.\n   * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n   * `ngModelChange`\n   * event to update the model.\n   *\n   */\n  setValue(value: any, options: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    (this as {value: any}).value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(\n          (changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Patches the value of a control.\n   *\n   * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n   * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n   * `FormArrays`, where it does behave differently.\n   *\n   * @see `setValue` for options\n   */\n  patchValue(value: any, options: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    this.setValue(value, options);\n  }\n\n  /**\n   * Resets the form control, marking it `pristine` and `untouched`, and setting\n   * the value to null.\n   *\n   * @param formState Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   *\n   */\n  reset(formState: any = null, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n\n  /**\n   * @internal\n   */\n  _updateValue() {}\n\n  /**\n   * @internal\n   */\n  _anyControls(condition: Function): boolean {\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  _allControlsDisabled(): boolean {\n    return this.disabled;\n  }\n\n  /**\n   * Register a listener for change events.\n   *\n   * @param fn The method that is called when the value changes\n   */\n  registerOnChange(fn: Function): void {\n    this._onChange.push(fn);\n  }\n\n  /**\n   * @internal\n   */\n  _clearChangeFns(): void {\n    this._onChange = [];\n    this._onDisabledChange = [];\n    this._onCollectionChange = () => {};\n  }\n\n  /**\n   * Register a listener for disabled events.\n   *\n   * @param fn The method that is called when the disabled status changes.\n   */\n  registerOnDisabledChange(fn: (isDisabled: boolean) => void): void {\n    this._onDisabledChange.push(fn);\n  }\n\n  /**\n   * @internal\n   */\n  _forEachChild(cb: Function): void {}\n\n  /** @internal */\n  _syncPendingControls(): boolean {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {onlySelf: true, emitModelToViewChange: false});\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _applyFormState(formState: any) {\n    if (this._isBoxedValue(formState)) {\n      (this as {value: any}).value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({onlySelf: true, emitEvent: false}) :\n                           this.enable({onlySelf: true, emitEvent: false});\n    } else {\n      (this as {value: any}).value = this._pendingValue = formState;\n    }\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nexport class FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(\n      public controls: {[key: string]: AbstractControl},\n      validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n\n  /**\n   * Registers a control with the group's list of controls.\n   *\n   * This method does not update the value or validity of the control.\n   * Use {@link FormGroup#addControl addControl} instead.\n   *\n   * @param name The control name to register in the collection\n   * @param control Provides the control for the given name\n   */\n  registerControl(name: string, control: AbstractControl): AbstractControl {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n\n  /**\n   * Add a control to this group.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to add to the collection\n   * @param control Provides the control for the given name\n   */\n  addControl(name: string, control: AbstractControl): void {\n    this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Remove a control from this group.\n   *\n   * @param name The control name to remove from the collection\n   */\n  removeControl(name: string): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Replace an existing control.\n   *\n   * @param name The control name to replace in the collection\n   * @param control Provides the control for the given name\n   */\n  setControl(name: string, control: AbstractControl): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Check whether there is an enabled control with the given name in the group.\n   *\n   * Reports false for disabled controls. If you'd like to check for existence in the group\n   * only, use {@link AbstractControl#get get} instead.\n   *\n   * @param controlName The control name to check for existence in the collection\n   *\n   * @returns false for disabled controls, true otherwise.\n   */\n  contains(controlName: string): boolean {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._checkAllValuesPresent(value);\n    Object.keys(value).forEach(name => {\n      this._throwIfControlMissing(name);\n      this.controls[name].setValue(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  patchValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    Object.keys(value).forEach(name => {\n      if (this.controls[name]) {\n        this.controls[name].patchValue(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to null.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n   * console.log(this.form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value: any = {}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      control.reset(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   * The `value` property is the best way to get the value of the group, because\n   * it excludes disabled controls in the `FormGroup`.\n   */\n  getRawValue(): any {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          acc[name] = control instanceof FormControl ? control.value : (<any>control).getRawValue();\n          return acc;\n        });\n  }\n\n  /** @internal */\n  _syncPendingControls(): boolean {\n    let subtreeUpdated = this._reduceChildren(false, (updated: boolean, child: AbstractControl) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({onlySelf: true});\n    return subtreeUpdated;\n  }\n\n  /** @internal */\n  _throwIfControlMissing(name: string): void {\n    if (!Object.keys(this.controls).length) {\n      throw new Error(`\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.controls[name]) {\n      throw new Error(`Cannot find form control with name: ${name}.`);\n    }\n  }\n\n  /** @internal */\n  _forEachChild(cb: (v: any, k: string) => void): void {\n    Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n  }\n\n  /** @internal */\n  _setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n\n  /** @internal */\n  _updateValue(): void {\n    (this as {value: any}).value = this._reduceValue();\n  }\n\n  /** @internal */\n  _anyControls(condition: Function): boolean {\n    for (const controlName of Object.keys(this.controls)) {\n      const control = this.controls[controlName];\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal */\n  _reduceValue() {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          if (control.enabled || this.disabled) {\n            acc[name] = control.value;\n          }\n          return acc;\n        });\n  }\n\n  /** @internal */\n  _reduceChildren(initValue: any, fn: Function) {\n    let res = initValue;\n    this._forEachChild((control: AbstractControl, name: string) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n\n  /** @internal */\n  _allControlsDisabled(): boolean {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n\n  /** @internal */\n  _checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      if (value[name] === undefined) {\n        throw new Error(`Must supply a value for form control with name: '${name}'.`);\n      }\n    });\n  }\n}\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nexport class FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(\n      public controls: AbstractControl[],\n      validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control\n   */\n  at(index: number): AbstractControl {\n    return this.controls[index];\n  }\n\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   */\n  push(control: AbstractControl): void {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control\n   * @param control Form control to be inserted\n   */\n  insert(index: number, control: AbstractControl): void {\n    this.controls.splice(index, 0, control);\n\n    this._registerControl(control);\n    this.updateValueAndValidity();\n  }\n\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control\n   */\n  removeAt(index: number): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n    this.updateValueAndValidity();\n  }\n\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control\n   * @param control The `AbstractControl` control to replace the existing control\n   */\n  setControl(index: number, control: AbstractControl): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n\n    if (control) {\n      this.controls.splice(index, 0, control);\n      this._registerControl(control);\n    }\n\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n\n  /**\n   * Length of the control array.\n   */\n  get length(): number {\n    return this.controls.length;\n  }\n\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value: any[], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._checkAllValuesPresent(value);\n    value.forEach((newValue: any, index: number) => {\n      this._throwIfControlMissing(index);\n      this.at(index).setValue(newValue, {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  patchValue(value: any[], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    value.forEach((newValue: any, index: number) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {onlySelf: true, emitEvent: options.emitEvent});\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(this.arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * this.arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(this.arr.value);  // ['name', 'last name']\n   * console.log(this.arr.get(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value: any = [], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._forEachChild((control: AbstractControl, index: number) => {\n      control.reset(value[index], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   * For enabled controls only, the `value` property is the best way to get the value of the array.\n   */\n  getRawValue(): any[] {\n    return this.controls.map((control: AbstractControl) => {\n      return control instanceof FormControl ? control.value : (<any>control).getRawValue();\n    });\n  }\n\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(): void {\n    if (this.controls.length < 1) return;\n    this._forEachChild((control: AbstractControl) => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity();\n  }\n\n  /** @internal */\n  _syncPendingControls(): boolean {\n    let subtreeUpdated = this.controls.reduce((updated: boolean, child: AbstractControl) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({onlySelf: true});\n    return subtreeUpdated;\n  }\n\n  /** @internal */\n  _throwIfControlMissing(index: number): void {\n    if (!this.controls.length) {\n      throw new Error(`\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.at(index)) {\n      throw new Error(`Cannot find form control at index ${index}`);\n    }\n  }\n\n  /** @internal */\n  _forEachChild(cb: Function): void {\n    this.controls.forEach((control: AbstractControl, index: number) => {\n      cb(control, index);\n    });\n  }\n\n  /** @internal */\n  _updateValue(): void {\n    (this as {value: any}).value =\n        this.controls.filter((control) => control.enabled || this.disabled)\n            .map((control) => control.value);\n  }\n\n  /** @internal */\n  _anyControls(condition: Function): boolean {\n    return this.controls.some((control: AbstractControl) => control.enabled && condition(control));\n  }\n\n  /** @internal */\n  _setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => this._registerControl(control));\n  }\n\n  /** @internal */\n  _checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, i: number) => {\n      if (value[i] === undefined) {\n        throw new Error(`Must supply a value for form control at index: ${i}.`);\n      }\n    });\n  }\n\n  /** @internal */\n  _allControlsDisabled(): boolean {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n\n  private _registerControl(control: AbstractControl) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterViewInit, Directive, EventEmitter, forwardRef, Inject, Input, Optional, Self} from '@angular/core';\n\nimport {AbstractControl, FormControl, FormGroup, FormHooks} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {NgControl} from './ng_control';\nimport {NgModel} from './ng_model';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, removeDir, setUpControl, setUpFormContainer, syncPendingControls} from './shared';\n\nexport const formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\n\nconst resolvedPromise = (() => Promise.resolve(null))();\n\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n})\nexport class NgForm extends ControlContainer implements Form, AfterViewInit {\n  /**\n   * @description\n   * Returns whether the form submission has been triggered.\n   */\n  public readonly submitted: boolean = false;\n\n  private _directives: NgModel[] = [];\n\n  /**\n   * @description\n   * The `FormGroup` instance created for this form.\n   */\n  form: FormGroup;\n\n  /**\n   * @description\n   * Event emitter for the \"ngSubmit\" event\n   */\n  ngSubmit = new EventEmitter();\n\n  /**\n   * @description\n   * Tracks options for the `NgForm` instance.\n   *\n   * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n   * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n   * Possible values: `'change'` | `'blur'` | `'submit'`.\n   *\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('ngFormOptions') options!: {updateOn?: FormHooks};\n\n  constructor(\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: any[]) {\n    super();\n    this.form =\n        new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n\n  /** @nodoc */\n  ngAfterViewInit() {\n    this._setUpdateStrategy();\n  }\n\n  /**\n   * @description\n   * The directive instance.\n   */\n  get formDirective(): Form {\n    return this;\n  }\n\n  /**\n   * @description\n   * The internal `FormGroup` instance.\n   */\n  get control(): FormGroup {\n    return this.form;\n  }\n\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it is always an empty array.\n   */\n  get path(): string[] {\n    return [];\n  }\n\n  /**\n   * @description\n   * Returns a map of the controls in this group.\n   */\n  get controls(): {[key: string]: AbstractControl} {\n    return this.form.controls;\n  }\n\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  addControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      (dir as {control: FormControl}).control =\n          <FormControl>container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir);\n      dir.control.updateValueAndValidity({emitEvent: false});\n      this._directives.push(dir);\n    });\n  }\n\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  getControl(dir: NgModel): FormControl {\n    return <FormControl>this.form.get(dir.path);\n  }\n\n  /**\n   * @description\n   * Removes the `NgModel` instance from the internal list of directives\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  removeControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n      removeDir<NgModel>(this._directives, dir);\n    });\n  }\n\n  /**\n   * @description\n   * Adds a new `NgModelGroup` directive instance to the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  addFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({emitEvent: false});\n    });\n  }\n\n  /**\n   * @description\n   * Removes the `NgModelGroup` directive instance from the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  removeFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  getFormGroup(dir: NgModelGroup): FormGroup {\n    return <FormGroup>this.form.get(dir.path);\n  }\n\n  /**\n   * Sets the new value for the provided `NgControl` directive.\n   *\n   * @param dir The `NgControl` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir: NgControl, value: any): void {\n    resolvedPromise.then(() => {\n      const ctrl = <FormControl>this.form.get(dir.path!);\n      ctrl.setValue(value);\n    });\n  }\n\n  /**\n   * @description\n   * Sets the value for this `FormGroup`.\n   *\n   * @param value The new value\n   */\n  setValue(value: {[key: string]: any}): void {\n    this.control.setValue(value);\n  }\n\n  /**\n   * @description\n   * Method called when the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event: Event): boolean {\n    (this as {submitted: boolean}).submitted = true;\n    syncPendingControls(this.form, this._directives);\n    this.ngSubmit.emit($event);\n    return false;\n  }\n\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset(): void {\n    this.resetForm();\n  }\n\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value: any = undefined): void {\n    this.form.reset(value);\n    (this as {submitted: boolean}).submitted = false;\n  }\n\n  private _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.form._updateOn = this.options.updateOn;\n    }\n  }\n\n  /** @internal */\n  _findContainer(path: string[]): FormGroup {\n    path.pop();\n    return path.length ? <FormGroup>this.form.get(path) : this.form;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\n\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\n@Directive()\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /**\n   * @description\n   * The parent control for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _parent!: ControlContainer;\n\n  /**\n   * @description\n   * An array of synchronous validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _validators!: any[];\n\n  /**\n   * @description\n   * An array of async validators for the group\n   *\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _asyncValidators!: any[];\n\n  /** @nodoc */\n  ngOnInit(): void {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective!.addFormGroup(this);\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control(): FormGroup {\n    return this.formDirective!.getFormGroup(this);\n  }\n\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path(): string[] {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective(): Form|null {\n    return this._parent ? this._parent.formDirective : null;\n  }\n\n  /**\n   * @description\n   * The synchronous validators registered with this group.\n   */\n  get validator(): ValidatorFn|null {\n    return composeValidators(this._validators);\n  }\n\n  /**\n   * @description\n   * The async validators registered with this group.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n\n  /** @internal */\n  _checkParentType(): void {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormErrorExamples as Examples} from './error_examples';\n\nexport class TemplateDrivenErrors {\n  static modelParentException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${Examples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${Examples.ngModelWithFormGroup}`);\n  }\n\n  static formGroupNameException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n\n  static missingNameException() {\n    throw new Error(\n        `If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n  }\n\n  static modelGroupParentException() {\n    throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf} from '@angular/core';\n\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {NgForm} from './ng_form';\nimport {TemplateDrivenErrors} from './template_driven_errors';\n\nexport const modelGroupProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup'})\nexport class NgModelGroup extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n  /**\n   * @description\n   * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n   * to a key in the parent `NgForm`.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('ngModelGroup') name!: string;\n\n  constructor(\n      @Host() @SkipSelf() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  /** @internal */\n  _checkParentType(): void {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      TemplateDrivenErrors.modelGroupParentException();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, forwardRef, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges} from '@angular/core';\n\nimport {FormControl, FormHooks} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {NgForm} from './ng_form';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl} from './shared';\nimport {TemplateDrivenErrors} from './template_driven_errors';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\nexport const formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve(null))();\n\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[ngModel]:not([formControlName]):not([formControl])',\n  providers: [formControlBinding],\n  exportAs: 'ngModel'\n})\nexport class NgModel extends NgControl implements OnChanges, OnDestroy {\n  public readonly control: FormControl = new FormControl();\n\n  // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n  // This is not reflected in the type of the property because outside of templates, consumers\n  // should only deal with booleans. In templates, a string is allowed for convenience and to\n  // match the native \"disabled attribute\" semantics which can be observed on input elements.\n  // This static member tells the compiler that values of type \"string\" can also be assigned\n  // to the input in a template.\n  /** @nodoc */\n  static ngAcceptInputType_isDisabled: boolean|string;\n\n  /** @internal */\n  _registered = false;\n\n  /**\n   * Internal reference to the view model value.\n   * @nodoc\n   */\n  viewModel: any;\n\n  /**\n   * @description\n   * Tracks the name bound to the directive. If a parent form exists, it\n   * uses this name as a key to retrieve this control's value.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input() name!: string;\n\n  /**\n   * @description\n   * Tracks whether the control is disabled.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('disabled') isDisabled!: boolean;\n\n  /**\n   * @description\n   * Tracks the value bound to this directive.\n   */\n  @Input('ngModel') model: any;\n\n  /**\n   * @description\n   * Tracks the configuration options for this `ngModel` instance.\n   *\n   * **name**: An alternative to setting the name attribute on the form control element. See\n   * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n   * as a standalone control.\n   *\n   * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n   * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n   * has no effect.\n   *\n   * **updateOn**: Defines the event upon which the form control value and validity update.\n   * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n   *\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('ngModelOptions') options!: {name?: string, standalone?: boolean, updateOn?: FormHooks};\n\n  /**\n   * @description\n   * Event emitter for producing the `ngModelChange` event after\n   * the view model updates.\n   */\n  @Output('ngModelChange') update = new EventEmitter();\n\n  constructor(\n      @Optional() @Host() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: Array<Validator|ValidatorFn>,\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators:\n          Array<AsyncValidator|AsyncValidatorFn>,\n      @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[]) {\n    super();\n    this._parent = parent;\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges) {\n    this._checkForErrors();\n    if (!this._registered) this._setUpControl();\n    if ('isDisabled' in changes) {\n      this._updateDisabled(changes);\n    }\n\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    this.formDirective && this.formDirective.removeControl(this);\n  }\n\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path(): string[] {\n    return this._parent ? controlPath(this.name, this._parent) : [this.name];\n  }\n\n  /**\n   * @description\n   * The top-level directive for this control if present, otherwise null.\n   */\n  get formDirective(): any {\n    return this._parent ? this._parent.formDirective : null;\n  }\n\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators\n   * registered with this directive.\n   */\n  get validator(): ValidatorFn|null {\n    return composeValidators(this._rawValidators);\n  }\n\n  /**\n   * @description\n   * Async validator function composed of all the async validators registered with this\n   * directive.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._rawAsyncValidators);\n  }\n\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value emitted by `ngModelChange`.\n   */\n  viewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n\n  private _setUpControl(): void {\n    this._setUpdateStrategy();\n    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n    this._registered = true;\n  }\n\n  private _setUpdateStrategy(): void {\n    if (this.options && this.options.updateOn != null) {\n      this.control._updateOn = this.options.updateOn;\n    }\n  }\n\n  private _isStandalone(): boolean {\n    return !this._parent || !!(this.options && this.options.standalone);\n  }\n\n  private _setUpStandalone(): void {\n    setUpControl(this.control, this);\n    this.control.updateValueAndValidity({emitEvent: false});\n  }\n\n  private _checkForErrors(): void {\n    if (!this._isStandalone()) {\n      this._checkParentType();\n    }\n    this._checkName();\n  }\n\n  private _checkParentType(): void {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof NgModelGroup) &&\n          this._parent instanceof AbstractFormGroupDirective) {\n        TemplateDrivenErrors.formGroupNameException();\n      } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n        TemplateDrivenErrors.modelParentException();\n      }\n    }\n  }\n\n  private _checkName(): void {\n    if (this.options && this.options.name) this.name = this.options.name;\n\n    if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      TemplateDrivenErrors.missingNameException();\n    }\n  }\n\n  private _updateValue(value: any): void {\n    resolvedPromise.then(() => {\n      this.control.setValue(value, {emitViewToModelChange: false});\n    });\n  }\n\n  private _updateDisabled(changes: SimpleChanges) {\n    const disabledValue = changes['isDisabled'].currentValue;\n\n    const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\n    resolvedPromise.then(() => {\n      if (isDisabled && !this.control.disabled) {\n        this.control.disable();\n      } else if (!isDisabled && this.control.disabled) {\n        this.control.enable();\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\n@Directive({\n  selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n  host: {'novalidate': ''},\n})\nexport class ɵNgNoValidate {\n}\n\nexport {ɵNgNoValidate as NgNoValidate};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, forwardRef, Inject, InjectionToken, Input, OnChanges, Optional, Output, Self, SimpleChanges} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {_ngModelWarning, composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nexport const NG_MODEL_WITH_FORM_CONTROL_WARNING =\n    new InjectionToken('NgModelWithFormControlWarning');\n\nexport const formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm'})\n\nexport class FormControlDirective extends NgControl implements OnChanges {\n  /**\n   * Internal reference to the view model value.\n   * @nodoc\n   */\n  viewModel: any;\n\n  /**\n   * @description\n   * Tracks the `FormControl` instance bound to the directive.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('formControl') form!: FormControl;\n\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  @Input('disabled')\n  set isDisabled(isDisabled: boolean) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      ReactiveErrors.disabledAttrWarning();\n    }\n  }\n\n  // TODO(kara): remove next 4 properties once deprecation period is over\n\n  /** @deprecated as of v6 */\n  @Input('ngModel') model: any;\n\n  /** @deprecated as of v6 */\n  @Output('ngModelChange') update = new EventEmitter();\n\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlDirective. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static _ngModelWarningSentOnce = false;\n\n  /**\n   * @description\n   * Instance property used to track whether an ngModel warning has been sent out for this\n   * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n   *\n   * @internal\n   */\n  _ngModelWarningSent = false;\n\n  constructor(\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: Array<Validator|ValidatorFn>,\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators:\n          Array<AsyncValidator|AsyncValidatorFn>,\n      @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n      @Optional() @Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING) private _ngModelWarningConfig: string|\n      null) {\n    super();\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._isControlChanged(changes)) {\n      setUpControl(this.form, this);\n      if (this.control.disabled && this.valueAccessor!.setDisabledState) {\n        this.valueAccessor!.setDisabledState!(true);\n      }\n      this.form.updateValueAndValidity({emitEvent: false});\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n      this.form.setValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path(): string[] {\n    return [];\n  }\n\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators\n   * registered with this directive.\n   */\n  get validator(): ValidatorFn|null {\n    return composeValidators(this._rawValidators);\n  }\n\n  /**\n   * @description\n   * Async validator function composed of all the async validators registered with this\n   * directive.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._rawAsyncValidators);\n  }\n\n  /**\n   * @description\n   * The `FormControl` bound to this directive.\n   */\n  get control(): FormControl {\n    return this.form;\n  }\n\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n\n  private _isControlChanged(changes: {[key: string]: any}): boolean {\n    return changes.hasOwnProperty('form');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, forwardRef, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges} from '@angular/core';\n\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, removeDir, setUpControl, setUpFormContainer, syncPendingControls} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n})\nexport class FormGroupDirective extends ControlContainer implements Form, OnChanges {\n  /**\n   * @description\n   * Reports whether the form submission has been triggered.\n   */\n  public readonly submitted: boolean = false;\n\n  // TODO(issue/24571): remove '!'.\n  private _oldForm!: FormGroup;\n\n  /**\n   * @description\n   * Tracks the list of added `FormControlName` instances\n   */\n  directives: FormControlName[] = [];\n\n  /**\n   * @description\n   * Tracks the `FormGroup` bound to this directive.\n   */\n  @Input('formGroup') form: FormGroup = null!;\n\n  /**\n   * @description\n   * Emits an event when the form submission has been triggered.\n   */\n  @Output() ngSubmit = new EventEmitter();\n\n  constructor(\n      @Optional() @Self() @Inject(NG_VALIDATORS) private _validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) private _asyncValidators: any[]) {\n    super();\n  }\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n\n  /**\n   * @description\n   * Returns this directive's instance.\n   */\n  get formDirective(): Form {\n    return this;\n  }\n\n  /**\n   * @description\n   * Returns the `FormGroup` bound to this directive.\n   */\n  get control(): FormGroup {\n    return this.form;\n  }\n\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it always an empty array.\n   */\n  get path(): string[] {\n    return [];\n  }\n\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  addControl(dir: FormControlName): FormControl {\n    const ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  getControl(dir: FormControlName): FormControl {\n    return <FormControl>this.form.get(dir.path);\n  }\n\n  /**\n   * @description\n   * Removes the `FormControlName` instance from the internal list of directives\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  removeControl(dir: FormControlName): void {\n    removeDir<FormControlName>(this.directives, dir);\n  }\n\n  /**\n   * Adds a new `FormGroupName` directive instance to the form.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  addFormGroup(dir: FormGroupName): void {\n    const ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n\n  /**\n   * No-op method to remove the form group.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  removeFormGroup(dir: FormGroupName): void {}\n\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  getFormGroup(dir: FormGroupName): FormGroup {\n    return <FormGroup>this.form.get(dir.path);\n  }\n\n  /**\n   * Adds a new `FormArrayName` directive instance to the form.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  addFormArray(dir: FormArrayName): void {\n    const ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n\n  /**\n   * No-op method to remove the form array.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  removeFormArray(dir: FormArrayName): void {}\n\n  /**\n   * @description\n   * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  getFormArray(dir: FormArrayName): FormArray {\n    return <FormArray>this.form.get(dir.path);\n  }\n\n  /**\n   * Sets the new value for the provided `FormControlName` directive.\n   *\n   * @param dir The `FormControlName` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir: FormControlName, value: any): void {\n    const ctrl  = <FormControl>this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n\n  /**\n   * @description\n   * Method called with the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event: Event): boolean {\n    (this as {submitted: boolean}).submitted = true;\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    return false;\n  }\n\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset(): void {\n    this.resetForm();\n  }\n\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value: any = undefined): void {\n    this.form.reset(value);\n    (this as {submitted: boolean}).submitted = false;\n  }\n\n\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const newCtrl: any = this.form.get(dir.path);\n      if (dir.control !== newCtrl) {\n        cleanUpControl(dir.control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        (dir as {control: FormControl}).control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n\n  private _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n\n  private _updateValidators() {\n    const sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([this.form.validator!, sync!]);\n\n    const async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator!, async!]);\n  }\n\n  private _checkFormPresent() {\n    if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      ReactiveErrors.missingFormException();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf} from '@angular/core';\n\nimport {FormArray} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath} from '../shared';\nimport {AsyncValidatorFn, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\n\nexport const formGroupNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formGroupName]', providers: [formGroupNameProvider]})\nexport class FormGroupName extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n  /**\n   * @description\n   * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form groups to be bound\n   * to indices when iterating over groups in a `FormArray`.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('formGroupName') name!: string|number|null;\n\n  constructor(\n      @Optional() @Host() @SkipSelf() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  /** @internal */\n  _checkParentType(): void {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      ReactiveErrors.groupParentException();\n    }\n  }\n}\n\nexport const formArrayNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formArrayName]', providers: [formArrayNameProvider]})\nexport class FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[];\n\n  /**\n   * @description\n   * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form arrays to be bound\n   * to indices when iterating over arrays in a `FormArray`.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('formArrayName') name!: string|number|null;\n\n  constructor(\n      @Optional() @Host() @SkipSelf() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  /**\n   * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n   * @throws If the directive does not have a valid parent.\n   * @nodoc\n   */\n  ngOnInit(): void {\n    this._checkParentType();\n    this.formDirective!.addFormArray(this);\n  }\n\n  /**\n   * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n   * @nodoc\n   */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n\n  /**\n   * @description\n   * The `FormArray` bound to this directive.\n   */\n  get control(): FormArray {\n    return this.formDirective!.getFormArray(this);\n  }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective(): FormGroupDirective|null {\n    return this._parent ? <FormGroupDirective>this._parent.formDirective : null;\n  }\n\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path(): string[] {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator(): ValidatorFn|null {\n    return composeValidators(this._validators);\n  }\n\n  /**\n   * @description\n   * Async validator function composed of all the async validators registered with this directive.\n   */\n  get asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n\n  private _checkParentType(): void {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      ReactiveErrors.arrayParentException();\n    }\n  }\n}\n\nfunction _hasInvalidParent(parent: ControlContainer): boolean {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n      !(parent instanceof FormArrayName);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, forwardRef, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, SkipSelf} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {_ngModelWarning, composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nimport {NG_MODEL_WITH_FORM_CONTROL_WARNING} from './form_control_directive';\nimport {FormGroupDirective} from './form_group_directive';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const controlNameBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formControlName]', providers: [controlNameBinding]})\nexport class FormControlName extends NgControl implements OnChanges, OnDestroy {\n  private _added = false;\n  /**\n   * Internal reference to the view model value.\n   * @internal\n   */\n  viewModel: any;\n\n  /**\n   * @description\n   * Tracks the `FormControl` instance bound to the directive.\n   */\n  // TODO(issue/24571): remove '!'.\n  readonly control!: FormControl;\n\n  /**\n   * @description\n   * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form controls to be bound\n   * to indices when iterating over controls in a `FormArray`.\n   */\n  // TODO(issue/24571): remove '!'.\n  @Input('formControlName') name!: string|number|null;\n\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  @Input('disabled')\n  set isDisabled(isDisabled: boolean) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      ReactiveErrors.disabledAttrWarning();\n    }\n  }\n\n  // TODO(kara): remove next 4 properties once deprecation period is over\n\n  /** @deprecated as of v6 */\n  @Input('ngModel') model: any;\n\n  /** @deprecated as of v6 */\n  @Output('ngModelChange') update = new EventEmitter();\n\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlName. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static _ngModelWarningSentOnce = false;\n\n  /**\n   * @description\n   * Instance property used to track whether an ngModel warning has been sent out for this\n   * particular FormControlName instance. Used to support warning config of \"always\".\n   *\n   * @internal\n   */\n  _ngModelWarningSent = false;\n\n  constructor(\n      @Optional() @Host() @SkipSelf() parent: ControlContainer,\n      @Optional() @Self() @Inject(NG_VALIDATORS) validators: Array<Validator|ValidatorFn>,\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) asyncValidators:\n          Array<AsyncValidator|AsyncValidatorFn>,\n      @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n      @Optional() @Inject(NG_MODEL_WITH_FORM_CONTROL_WARNING) private _ngModelWarningConfig: string|\n      null) {\n    super();\n    this._parent = parent;\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n\n  /** @nodoc */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path(): string[] {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent!);\n  }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective(): any {\n    return this._parent ? this._parent.formDirective : null;\n  }\n\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators\n   * registered with this directive.\n   */\n  get validator(): ValidatorFn|null {\n    return composeValidators(this._rawValidators);\n  }\n\n  /**\n   * @description\n   * Async validator function composed of all the async validators registered with this\n   * directive.\n   */\n  get asyncValidator(): AsyncValidatorFn {\n    return composeAsyncValidators(this._rawAsyncValidators)!;\n  }\n\n  private _checkParentType(): void {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof FormGroupName) &&\n          this._parent instanceof AbstractFormGroupDirective) {\n        ReactiveErrors.ngModelGroupException();\n      } else if (\n          !(this._parent instanceof FormGroupName) &&\n          !(this._parent instanceof FormGroupDirective) &&\n          !(this._parent instanceof FormArrayName)) {\n        ReactiveErrors.controlParentException();\n      }\n    }\n  }\n\n  private _setUpControl() {\n    this._checkParentType();\n    (this as {control: FormControl}).control = this.formDirective.addControl(this);\n    if (this.control.disabled && this.valueAccessor!.setDisabledState) {\n      this.valueAccessor!.setDisabledState!(true);\n    }\n    this._added = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, forwardRef, Input, OnChanges, SimpleChanges, StaticProvider} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {AbstractControl} from '../model';\nimport {NG_VALIDATORS, Validators} from '../validators';\n\n\n/**\n * @description\n * Defines the map of errors returned from failed validation checks.\n *\n * @publicApi\n */\nexport type ValidationErrors = {\n  [key: string]: any\n};\n\n/**\n * @description\n * An interface implemented by classes that perform synchronous validation.\n *\n * @usageNotes\n *\n * ### Provide a custom validator\n *\n * The following example implements the `Validator` interface to create a\n * validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors|null {\n *     return {'custom': true};\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface Validator {\n  /**\n   * @description\n   * Method that performs synchronous validation against the provided control.\n   *\n   * @param control The control to validate against.\n   *\n   * @returns A map of validation errors if validation fails,\n   * otherwise null.\n   */\n  validate(control: AbstractControl): ValidationErrors|null;\n\n  /**\n   * @description\n   * Registers a callback function to call when the validator inputs change.\n   *\n   * @param fn The callback function\n   */\n  registerOnValidatorChange?(fn: () => void): void;\n}\n\n/**\n * @description\n * An interface implemented by classes that perform asynchronous validation.\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * import { of } from 'rxjs';\n *\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Observable<ValidationErrors|null> {\n *     return of({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface AsyncValidator extends Validator {\n  /**\n   * @description\n   * Method that performs async validation against the provided control.\n   *\n   * @param control The control to validate against.\n   *\n   * @returns A promise or observable that resolves a map of validation errors\n   * if validation fails, otherwise null.\n   */\n  validate(control: AbstractControl):\n      Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const REQUIRED_VALIDATOR: StaticProvider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const CHECKBOX_REQUIRED_VALIDATOR: StaticProvider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n\n\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n  providers: [REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n})\nexport class RequiredValidator implements Validator {\n  private _required = false;\n  private _onChange?: () => void;\n\n  /**\n   * @description\n   * Tracks changes to the required attribute bound to this directive.\n   */\n  @Input()\n  get required(): boolean|string {\n    return this._required;\n  }\n\n  set required(value: boolean|string) {\n    this._required = value != null && value !== false && `${value}` !== 'false';\n    if (this._onChange) this._onChange();\n  }\n\n  /**\n   * Method that validates whether the control is empty.\n   * Returns the validation result if enabled, otherwise null.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.required(control) : null;\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   * @nodoc\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n}\n\n\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\n@Directive({\n  selector:\n      'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n  providers: [CHECKBOX_REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n})\nexport class CheckboxRequiredValidator extends RequiredValidator {\n  /**\n   * Method that validates whether or not the checkbox has been checked.\n   * Returns the validation result if enabled, otherwise null.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.requiredTrue(control) : null;\n  }\n}\n\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\n@Directive({\n  selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n})\nexport class EmailValidator implements Validator {\n  private _enabled = false;\n  private _onChange?: () => void;\n\n  /**\n   * @description\n   * Tracks changes to the email attribute bound to this directive.\n   */\n  @Input()\n  set email(value: boolean|string) {\n    this._enabled = value === '' || value === true || value === 'true';\n    if (this._onChange) this._onChange();\n  }\n\n  /**\n   * Method that validates whether an email address is valid.\n   * Returns the validation result if enabled, otherwise null.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this._enabled ? Validators.email(control) : null;\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   * @nodoc\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n}\n\n/**\n * @description\n * A function that receives a control and synchronously returns a map of\n * validation errors if present, otherwise null.\n *\n * @publicApi\n */\nexport interface ValidatorFn {\n  (control: AbstractControl): ValidationErrors|null;\n}\n\n/**\n * @description\n * A function that receives a control and returns a Promise or observable\n * that emits validation errors if present, otherwise null.\n *\n * @publicApi\n */\nexport interface AsyncValidatorFn {\n  (control: AbstractControl): Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const MIN_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n  providers: [MIN_LENGTH_VALIDATOR],\n  host: {'[attr.minlength]': 'minlength ? minlength : null'}\n})\nexport class MinLengthValidator implements Validator, OnChanges {\n  private _validator: ValidatorFn = Validators.nullValidator;\n  private _onChange?: () => void;\n\n  /**\n   * @description\n   * Tracks changes to the the minimum length bound to this directive.\n   */\n  @Input()\n  minlength!: string|number;  // This input is always defined, since the name matches selector.\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('minlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n\n  /**\n   * Method that validates whether the value meets a minimum length requirement.\n   * Returns the validation result if enabled, otherwise null.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this.minlength == null ? null : this._validator(control);\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   * @nodoc\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n\n  private _createValidator(): void {\n    this._validator = Validators.minLength(\n        typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n  }\n}\n\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const MAX_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n  providers: [MAX_LENGTH_VALIDATOR],\n  host: {'[attr.maxlength]': 'maxlength ? maxlength : null'}\n})\nexport class MaxLengthValidator implements Validator, OnChanges {\n  private _validator: ValidatorFn = Validators.nullValidator;\n  private _onChange?: () => void;\n\n  /**\n   * @description\n   * Tracks changes to the the maximum length bound to this directive.\n   */\n  @Input()\n  maxlength!: string|number;  // This input is always defined, since the name matches selector.\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('maxlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n\n  /**\n   * Method that validates whether the value exceeds the maximum length requirement.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this.maxlength != null ? this._validator(control) : null;\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   * @nodoc\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n\n  private _createValidator(): void {\n    this._validator = Validators.maxLength(\n        typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n  }\n}\n\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nexport const PATTERN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n\n\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n  providers: [PATTERN_VALIDATOR],\n  host: {'[attr.pattern]': 'pattern ? pattern : null'}\n})\nexport class PatternValidator implements Validator, OnChanges {\n  private _validator: ValidatorFn = Validators.nullValidator;\n  private _onChange?: () => void;\n\n  /**\n   * @description\n   * Tracks changes to the pattern bound to this directive.\n   */\n  @Input()\n  pattern!: string|RegExp;  // This input is always defined, since the name matches selector.\n\n  /** @nodoc */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('pattern' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n\n  /**\n   * Method that validates whether the value matches the the pattern requirement.\n   * @nodoc\n   */\n  validate(control: AbstractControl): ValidationErrors|null {\n    return this._validator(control);\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   * @nodoc\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n\n  private _createValidator(): void {\n    this._validator = Validators.pattern(this.pattern);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Type} from '@angular/core';\n\nimport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nimport {DefaultValueAccessor} from './directives/default_value_accessor';\nimport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nimport {NgForm} from './directives/ng_form';\nimport {NgModel} from './directives/ng_model';\nimport {NgModelGroup} from './directives/ng_model_group';\nimport {NgNoValidate} from './directives/ng_no_validate_directive';\nimport {NumberValueAccessor} from './directives/number_value_accessor';\nimport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nimport {RangeValueAccessor} from './directives/range_value_accessor';\nimport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nimport {FormControlName} from './directives/reactive_directives/form_control_name';\nimport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nimport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nimport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nimport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nimport {CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlValueAccessor} from './directives/control_value_accessor';\nexport {DefaultValueAccessor} from './directives/default_value_accessor';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {RangeValueAccessor} from './directives/range_value_accessor';\nexport {FormControlDirective, NG_MODEL_WITH_FORM_CONTROL_WARNING} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\n\nexport const SHARED_FORM_DIRECTIVES: Type<any>[] = [\n  NgNoValidate,\n  NgSelectOption,\n  NgSelectMultipleOption,\n  DefaultValueAccessor,\n  NumberValueAccessor,\n  RangeValueAccessor,\n  CheckboxControlValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n  NgControlStatus,\n  NgControlStatusGroup,\n  RequiredValidator,\n  MinLengthValidator,\n  MaxLengthValidator,\n  PatternValidator,\n  CheckboxRequiredValidator,\n  EmailValidator,\n];\n\nexport const TEMPLATE_DRIVEN_DIRECTIVES: Type<any>[] = [NgModel, NgModelGroup, NgForm];\n\nexport const REACTIVE_DRIVEN_DIRECTIVES: Type<any>[] =\n    [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\n@NgModule({\n  declarations: SHARED_FORM_DIRECTIVES,\n  exports: SHARED_FORM_DIRECTIVES,\n})\nexport class ɵInternalFormsSharedModule {\n}\n\nexport {ɵInternalFormsSharedModule as InternalFormsSharedModule};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {AsyncValidatorFn, ValidatorFn} from './directives/validators';\nimport {AbstractControl, AbstractControlOptions, FormArray, FormControl, FormGroup, FormHooks} from './model';\n\nfunction isAbstractControlOptions(options: AbstractControlOptions|\n                                  {[key: string]: any}): options is AbstractControlOptions {\n  return (<AbstractControlOptions>options).asyncValidators !== undefined ||\n      (<AbstractControlOptions>options).validators !== undefined ||\n      (<AbstractControlOptions>options).updateOn !== undefined;\n}\n\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\n@Injectable()\nexport class FormBuilder {\n  /**\n   * @description\n   * Construct a new `FormGroup` instance.\n   *\n   * @param controlsConfig A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param options Configuration options object for the `FormGroup`. The object can\n   * have two shapes:\n   *\n   * 1) `AbstractControlOptions` object (preferred), which consists of:\n   * * `validators`: A synchronous validator function, or an array of validator functions\n   * * `asyncValidators`: A single async validator or array of async validator functions\n   * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n   * submit')\n   *\n   * 2) Legacy configuration object, which consists of:\n   * * `validator`: A synchronous validator function, or an array of validator functions\n   * * `asyncValidator`: A single async validator or array of async validator functions\n   *\n   */\n  group(\n      controlsConfig: {[key: string]: any},\n      options: AbstractControlOptions|{[key: string]: any}|null = null): FormGroup {\n    const controls = this._reduceControls(controlsConfig);\n\n    let validators: ValidatorFn|ValidatorFn[]|null = null;\n    let asyncValidators: AsyncValidatorFn|AsyncValidatorFn[]|null = null;\n    let updateOn: FormHooks|undefined = undefined;\n\n    if (options != null) {\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        validators = options.validators != null ? options.validators : null;\n        asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n        updateOn = options.updateOn != null ? options.updateOn : undefined;\n      } else {\n        // `options` are legacy form group options\n        validators = options['validator'] != null ? options['validator'] : null;\n        asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n      }\n    }\n\n    return new FormGroup(controls, {asyncValidators, updateOn, validators});\n  }\n\n  /**\n   * @description\n   * Construct a new `FormControl` with the given state, validators and options.\n   *\n   * @param formState Initializes the control with an initial state value, or\n   * with an object that contains both a value and a disabled status.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   *\n   * @usageNotes\n   *\n   * ### Initialize a control as disabled\n   *\n   * The following example returns a control with an initial value in a disabled state.\n   *\n   * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n   * </code-example>\n   */\n  control(\n      formState: any, validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null): FormControl {\n    return new FormControl(formState, validatorOrOpts, asyncValidator);\n  }\n\n  /**\n   * Constructs a new `FormArray` from the given array of configurations,\n   * validators and options.\n   *\n   * @param controlsConfig An array of child controls or control configs. Each\n   * child control is given an index when it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   */\n  array(\n      controlsConfig: any[],\n      validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null): FormArray {\n    const controls = controlsConfig.map(c => this._createControl(c));\n    return new FormArray(controls, validatorOrOpts, asyncValidator);\n  }\n\n  /** @internal */\n  _reduceControls(controlsConfig: {[k: string]: any}): {[key: string]: AbstractControl} {\n    const controls: {[key: string]: AbstractControl} = {};\n    Object.keys(controlsConfig).forEach(controlName => {\n      controls[controlName] = this._createControl(controlsConfig[controlName]);\n    });\n    return controls;\n  }\n\n  /** @internal */\n  _createControl(controlConfig: any): AbstractControl {\n    if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n        controlConfig instanceof FormArray) {\n      return controlConfig;\n\n    } else if (Array.isArray(controlConfig)) {\n      const value = controlConfig[0];\n      const validator: ValidatorFn = controlConfig.length > 1 ? controlConfig[1] : null;\n      const asyncValidator: AsyncValidatorFn = controlConfig.length > 2 ? controlConfig[2] : null;\n      return this.control(value, validator, asyncValidator);\n\n    } else {\n      return this.control(controlConfig);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('10.2.3');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {InternalFormsSharedModule, NG_MODEL_WITH_FORM_CONTROL_WARNING, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES} from './directives';\nimport {RadioControlRegistry} from './directives/radio_control_value_accessor';\nimport {FormBuilder} from './form_builder';\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\n@NgModule({\n  declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n  providers: [RadioControlRegistry],\n  exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n})\nexport class FormsModule {\n}\n\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\n@NgModule({\n  declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n  providers: [FormBuilder, RadioControlRegistry],\n  exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n})\nexport class ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   */\n  static withConfig(opts: {\n    /** @deprecated as of v6 */ warnOnNgModelWithFormControl: 'never'|'once'|'always'\n  }): ModuleWithProviders<ReactiveFormsModule> {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [\n        {provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl}\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n\nexport {ɵInternalFormsSharedModule} from './directives';\nexport {AbstractControlDirective} from './directives/abstract_control_directive';\nexport {AbstractFormGroupDirective} from './directives/abstract_form_group_directive';\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlContainer} from './directives/control_container';\nexport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './directives/control_value_accessor';\nexport {COMPOSITION_BUFFER_MODE, DefaultValueAccessor} from './directives/default_value_accessor';\nexport {Form} from './directives/form_interface';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {ɵNgNoValidate} from './directives/ng_no_validate_directive';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {RangeValueAccessor} from './directives/range_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName} from './directives/reactive_directives/form_group_name';\nexport {FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nexport {ɵNgSelectMultipleOption} from './directives/select_multiple_control_value_accessor';\nexport {AsyncValidator, AsyncValidatorFn, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, ValidationErrors, Validator, ValidatorFn} from './directives/validators';\nexport {FormBuilder} from './form_builder';\nexport {AbstractControl, AbstractControlOptions, FormArray, FormControl, FormGroup} from './model';\nexport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from './validators';\nexport {VERSION} from './version';\n\nexport * from './form_providers';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/forms';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {InternalFormsSharedModule as ɵangular_packages_forms_forms_d,REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c,SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a,TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b} from './src/directives';\nexport {CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e} from './src/directives/checkbox_value_accessor';\nexport {DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f} from './src/directives/default_value_accessor';\nexport {AbstractControlStatus as ɵangular_packages_forms_forms_g,ngControlStatusHost as ɵangular_packages_forms_forms_h} from './src/directives/ng_control_status';\nexport {formDirectiveProvider as ɵangular_packages_forms_forms_i} from './src/directives/ng_form';\nexport {formControlBinding as ɵangular_packages_forms_forms_j} from './src/directives/ng_model';\nexport {modelGroupProvider as ɵangular_packages_forms_forms_k} from './src/directives/ng_model_group';\nexport {NgNoValidate as ɵangular_packages_forms_forms_y} from './src/directives/ng_no_validate_directive';\nexport {NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l} from './src/directives/number_value_accessor';\nexport {RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m,RadioControlRegistry as ɵangular_packages_forms_forms_n} from './src/directives/radio_control_value_accessor';\nexport {RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o} from './src/directives/range_value_accessor';\nexport {NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p,formControlBinding as ɵangular_packages_forms_forms_q} from './src/directives/reactive_directives/form_control_directive';\nexport {controlNameBinding as ɵangular_packages_forms_forms_r} from './src/directives/reactive_directives/form_control_name';\nexport {formDirectiveProvider as ɵangular_packages_forms_forms_s} from './src/directives/reactive_directives/form_group_directive';\nexport {formArrayNameProvider as ɵangular_packages_forms_forms_u,formGroupNameProvider as ɵangular_packages_forms_forms_t} from './src/directives/reactive_directives/form_group_name';\nexport {SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v} from './src/directives/select_control_value_accessor';\nexport {NgSelectMultipleOption as ɵangular_packages_forms_forms_x,SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w} from './src/directives/select_multiple_control_value_accessor';\nexport {CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba,EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb,MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd,MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc,PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be,REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z} from './src/directives/validators';","module.exports = require(\"regenerator-runtime\");\n","import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n  selector: 'ngx-slick-carousel',\n  exportAs: 'slick-carousel',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SlickCarouselComponent),\n    multi: true\n  }],\n  template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<{ event: any, slick: any, currentSlide: number, first: boolean, last: boolean }> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<{ event: any, slick: any, currentSlide: number, nextSlide: number }> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<{ event: any, slick: any, breakpoint: any }> = new EventEmitter();\n    @Output() destroy: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n    @Output() init: EventEmitter<{ event: any, slick: any }> = new EventEmitter();\n\n  public $instance: any;\n\n  // access from parent component can be a problem with change detection timing. Please use afterChange output\n  private currentIndex = 0;\n\n  public slides: any[] = [];\n  public initialized = false;\n  private _removedSlides: SlickItemDirective[] = [];\n  private _addedSlides: SlickItemDirective[] = [];\n\n  /**\n   * Constructor\n   */\n  constructor(private el: ElementRef,\n              private zone: NgZone,\n              @Inject(PLATFORM_ID) private platformId: string) {\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.unslick();\n  }\n\n  ngAfterViewInit(): void {\n    this.ngAfterViewChecked();\n  }\n\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        }\n        // if nextSlidesLength is zere, do nothing\n      } else if (nextSlidesLength === 0) { // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n        this._addedSlides = [];\n\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n        this._removedSlides = [];\n      }\n    }\n  }\n\n  /**\n   * init slick\n   */\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({ event, slick });\n        });\n      });\n\n      this.$instance.slick(this.config);\n\n      this.zone.run(() => {\n        this.initialized = true;\n\n        this.currentIndex = this.config?.initialSlide || 0;\n      });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({\n                        event,\n                        slick,\n                        currentSlide,\n                        first: currentSlide === 0,\n                        last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n                    });\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n          this.currentIndex = nextSlide;\n        });\n      });\n\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({ event, slick, breakpoint });\n        });\n      });\n\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({ event, slick });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n\n  addSlide(slickItem: SlickItemDirective) {\n    this._addedSlides.push(slickItem);\n  }\n\n  removeSlide(slickItem: SlickItemDirective) {\n    this._removedSlides.push(slickItem);\n  }\n\n  /**\n   * Slick Method\n   */\n  public slickGoTo(index: number) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n\n  public slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n\n  public slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n\n  public slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n\n  public slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n\n  public unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n    this.initialized = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.initialized) {\n      const config = changes['config'];\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n\n}\n\n@Directive({\n  selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n  constructor(public el: ElementRef,\n              @Inject(PLATFORM_ID) private platformId: string,\n              @Host() private carousel: SlickCarouselComponent) {\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.addSlide(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.removeSlide(this);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'banner-version1',\n  templateUrl: './Banner.component.html',\n  styleUrls: ['./Banner.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BannerComponent implements OnInit {\n\n   /** Title for baner **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Description for baner **/\n   @Input('desc') Desc: any = 'Description';\n\n   /** Background for baner **/\n   @Input('bgImageUrl') BgImageUrl: any = 'assets/images/main-search-background-01.jpg';\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"position-relative\">\n   <!-- Hero for FREE version -->\n   <section class=\"section section-lg section-hero section-shaped\">\n      <!-- Background circles -->\n      <div class=\"shape shape-style-1 shape-primary\">\n         <span class=\"span-150\"></span>\n         <span class=\"span-50\"></span>\n         <span class=\"span-50\"></span>\n         <span class=\"span-75\"></span>\n         <span class=\"span-100\"></span>\n         <span class=\"span-75\"></span>\n         <span class=\"span-50\"></span>\n         <span class=\"span-100\"></span>\n         <span class=\"span-50\"></span>\n         <span class=\"span-100\"></span>\n         <div class=\"overlay-bg\"></div>\n      </div>\n      <div class=\"container shape-container d-flex align-items-center py-lg\">\n         <div class=\"main-search-inner\">\n            <h2 class=\"text-white display-2\">{{Title}}</h2>\n            <h4 class=\"text-white\">{{Desc}}</h4>\n            <div class=\"main-search-input\">\n               <div class=\"main-search-input-item\">\n                  <input type=\"text\" placeholder=\"What are you looking for?\" value=\"\" />\n               </div>\n               <div class=\"main-search-input-item location\">\n                  <div id=\"autocomplete-container\">\n                     <input id=\"autocomplete-input\" type=\"text\" placeholder=\"Location\">\n                  </div>\n                  <a href=\"#\"><i class=\"fa fa-map-marker\"></i></a>\n               </div>\n               <div class=\"main-search-input-item\">\n                  <select data-placeholder=\"All Categories\" class=\"chosen-select custom-select\">\n                     <option>All Categories</option>\n                     <option>Appartement</option>\n                     <option>Studio</option>\n                     <option>Bureau</option>\n                     <option>Villa</option>\n                     <option>Parcelle</option>\n                  </select>\n               </div>\n               <a href=\"#\" class=\"btn main-search-btn btn-radius btn-lg btn-white\" [routerLink]=\"['#']\">\n               <span class=\"btn-inner--text\">Search</span>\n               </a>\n            </div>\n         </div>\n      </div>\n      <!-- SVG separator -->\n      <div class=\"separator separator-bottom separator-skew zindex-100\">\n         <svg x=\"0\" y=\"0\" viewBox=\"0 0 2560 100\" preserveAspectRatio=\"none\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <polygon class=\"fill-white\" points=\"2560 0 2560 100 0 100\"></polygon>\n         </svg>\n      </div>\n   </section>\n</div>\n\n","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'feature-grid-section',\n  templateUrl: './FeatureGridSection.component.html',\n  styleUrls: ['./FeatureGridSection.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FeatureGridSectionComponent implements OnInit {\n\n   /** Title for section **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Desc for section **/\n   @Input('desc') Desc: any = 'Dummy Description';\n\n   /** data for section **/\n   @Input('data') Data: any;\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"block-space bg-gradient-warning\">\n\t<div class=\"container\">\n\t\t<div class=\"row row-grid align-items-center\">\n\t\t\t<div class=\"col-lg-12 order-lg-1\">\n\t\t\t\t<div class=\"d-flex px-3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n\t\t\t\t\t\t\t<i class=\"fa fa-smile-o text-primary\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"pl-4\">\n\t\t\t\t\t\t<h4 class=\"display-3 text-white\">{{Title}}</h4>\n\t\t\t\t\t\t<p class=\"text-white\">{{Desc}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-lg-6\" *ngFor=\"let feature of Data\">\n\t\t\t\t\t\t<div class=\"card shadow shadow-lg--hover mt-5\">\n\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t<div class=\"d-flex px-3\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"{{feature.icon}}\"></i>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"pl-4\">\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"title text-warning\">{{feature.name}}</h5>\n\t\t\t\t\t\t\t\t\t\t<p>{{feature.desc}}</p>\n\t\t\t\t\t\t\t\t\t\t<a class=\"text-warning\">Learn more</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<!-- SVG separator -->\n\t<div class=\"separator separator-bottom separator-skew zindex-100\">\n\t\t<svg x=\"0\" y=\"0\" viewBox=\"0 0 2560 100\" preserveAspectRatio=\"none\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<polygon class=\"fill-white\" points=\"2560 0 2560 100 0 100\"></polygon>\n\t\t</svg>\n\t</div>\n</div>","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'feature-section',\n  templateUrl: './FeatureSection.component.html',\n  styleUrls: ['./FeatureSection.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FeatureSectionComponent implements OnInit {\n\n   /** Title for section **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Desc for section **/\n   @Input('desc') Desc: any = 'Dummy Description';\n\n   /** Image for section **/\n   @Input('image') Image: any = '';\n\n   /** data for section **/\n   @Input('data') Data: any;\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"block-space\">\n\t<div class=\"container\">\n\t\t<div class=\"row row-grid align-items-center\">\n\t\t\t<div class=\"col-md-6 order-md-2\">\n\t\t\t\t<img src=\"{{Image}}\" class=\"img-fluid floating\">\n\t\t\t</div>\n\t\t\t<div class=\"col-md-6 order-md-1\">\n\t\t\t\t<div class=\"pr-md-5\">\n\t\t\t\t\t<div class=\"icon icon-lg icon-shape icon-shape-success shadow rounded-circle mb-5\">\n\t\t\t\t\t\t<i class=\"fa fa-cog\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3>{{Title}}</h3>\n\t\t\t\t\t<p>{{Desc}}</p>\n\t\t\t\t\t<ul class=\"list-unstyled mt-5\">\n\t\t\t\t\t\t<li class=\"py-2\" *ngFor=\"let feature of Data\">\n\t\t\t\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div class=\"badge badge-circle badge-success mr-3\">\n\t\t\t\t\t\t\t\t\t\t<i class=\"{{feature.icon}}\"></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h6 class=\"mb-0\">{{feature.name}}</h6>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'map-banner',\n  templateUrl: './MapBanner.component.html',\n  styleUrls: ['./MapBanner.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MapBannerComponent implements OnInit {\n\n   /** Title for baner **/\n   @Input('layout') Layout: any = 'header';\n\n   lat : any = 40.80;\n   lng : any = -73.70;\n\n   mapScrollWheel : boolean = false;\n\n   markers : any = [\n                     {\n                        lat:  40.94401669296697,\n                        lng:  -74.16938781738281,\n                        icon: 'assets/images/rest.png',\n                        title    : 'Tom Restaurant',\n                        address  : '964 School Street, New York',\n                        image    : 'assets/images/most-img-1.jpg'\n                     },\n                     {\n                        lat:  40.77055783505125,\n                        lng:  -74.26002502441406,\n                        icon: 'assets/images/shop.png',\n                        title    : 'Sticky Band',\n                        address  : 'Bishop Avenue, New York',\n                        image    : 'assets/images/most-img-2.jpg'\n\n                     },\n                     {\n                        lat:  40.7427837,\n                        lng:  -73.11445617675781,\n                        icon: 'assets/images/rest.png',\n                        title    : 'Hotel Govendor',\n                        address  : '778 Country Street, New York',\n                        image    : 'assets/images/most-img-3.jpg'\n                     },\n                     {\n                        lat:  40.70437865245596,\n                        lng:  -73.98674011230469,\n                        icon: 'assets/images/hotel.png',\n                        title    : 'Burger House',\n                        address  : '2726 Shinn Street, New York',\n                        image    : 'assets/images/most-img-4.jpg'\n                     },\n                     {\n                        lat:  40.641311,\n                        lng:  -73.778139,\n                        icon: 'assets/images/hotel.png',\n                        title    : 'Burger House',\n                        address  : '1512 Duncan Avenue, New York',\n                        image    : 'assets/images/most-img-6.jpg'\n                     },\n                     {\n                        lat:  41.080938,\n                        lng:  -73.535957,\n                        icon: 'assets/images/rest.png',\n                        title    : 'Think Coffee',\n                        address  : '215 Terry Lane, New York',\n                        image    : 'assets/images/most-img-3.jpg'\n                     },\n                     {\n                        lat:  41.079386,\n                        lng:  -73.519478,\n                        icon: 'assets/images/hotel.png',\n                        title    : 'Think Coffee',\n                        address  : '215 Terry Lane, New York',\n                        image    : 'assets/images/most-img-2.jpg'\n\n                     }\n                  ];\n\n   constructor(){\n\n   }\n\n   ngOnInit(){}\n\n   enableDisableScroll()\n   {\n      this.mapScrollWheel = !this.mapScrollWheel;\n   }\n}\n","<div id=\"map-container\" class=\"fullwidth-home-map\" *ngIf=\"Layout == 'header'\">\n\t<agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"9\" [scrollwheel]=\"mapScrollWheel\">\n\t\t <agm-marker *ngFor=\"let marker of markers; let i = index\"  [latitude]=\"marker.lat\" [longitude]=\"marker.lng\" [iconUrl]=\"marker.icon\">\n\t\t\t <agm-info-window>\n\t\t\t\t <div class=\"infoBox\">\n\t\t\t\t <div class=\"map-box\">\n\t\t\t\t\t\t<a class=\"listing-img-container\">\n\t\t\t\t\t\t\t\t<!-- <div class=\"infoBox-close\"><i class=\"fa fa-times\"></i></div> -->\n\t\t\t\t\t\t\t\t<img src=\"{{marker.image}}\" alt=\"\">\n\t\t\t\t\t\t\t\t<div class=\"listing-item-content\">\n\t\t\t\t\t\t\t\t\t<h3>{{marker.title}}</h3>\n\t\t\t\t\t\t\t\t\t<span><small>{{marker.address}}</small></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t </div>\n\t\t\t\t</div>\n\t\t\t</agm-info-window>\n\t\t </agm-marker>\n\t</agm-map>\n\t<div class=\"map-banner\">\n\t<div class=\"main-search-inner\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-12 grid-full-width page-search mb-3\">\n\t\t\t\t\t<div class=\"main-search-input mt-0\">\n\t\t\t\t\t\t<div class=\"col-lg-3 col-sm-12\">\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"What are you looking for?\" class=\"form-control\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-3 col-sm-12\">\n\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Location\" class=\"form-control\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-3 col-sm-12\">\n\t\t\t\t\t\t\t<select class=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\">\n\t\t\t\t\t\t\t\t<option selected>Choose...</option>\n\t\t\t\t\t\t\t\t<option value=\"1\">Hotel</option>\n\t\t\t\t\t\t\t\t<option value=\"2\">Bar</option>\n\t\t\t\t\t\t\t\t<option value=\"3\">Food Courts</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-3 col-sm-12 text-right\">\n\t\t\t\t\t\t\t<a class=\"btn main-search-btn btn-radius btn-lg btn-primary text-white\"><span class=\"btn-inner--text\">Search</span></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n  </div>\n\t<!-- <a *ngIf=\"!mapScrollWheel\" id=\"scrollEnabling\" title=\"Enable or disable scrolling on map\" (click)=\"enableDisableScroll()\">Enable Scrolling</a>\n\t<a *ngIf=\"mapScrollWheel\" id=\"scrollEnabling\" title=\"Enable or disable scrolling on map\" (click)=\"enableDisableScroll()\">Disable Scrolling</a> -->\n</div>\n\n<div id=\"map-container\"  class=\"sidebar-marker\" *ngIf=\"Layout == 'sidebar'\">\n\t<agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"9\" [scrollwheel]=\"mapScrollWheel\">\n\t\t <agm-marker *ngFor=\"let marker of markers; let i = index\"  [latitude]=\"marker.lat\" [longitude]=\"marker.lng\" [iconUrl]=\"marker.icon\">\n\t\t\t<agm-info-window>\n\t\t\t\t<div class=\"infoBox\">\n\t\t\t\t<div class=\"map-box\">\n\t\t\t\t\t  <a class=\"listing-img-container\">\n\t\t\t\t\t\t\t  <!-- <div class=\"infoBox-close\"><i class=\"fa fa-times\"></i></div> -->\n\t\t\t\t\t\t\t  <img src=\"{{marker.image}}\" alt=\"\">\n\t\t\t\t\t\t\t  <div class=\"listing-item-content\">\n\t\t\t\t\t\t\t\t  <h3>{{marker.title}}</h3>\n\t\t\t\t\t\t\t\t  <span><small>{{marker.address}}</small></span>\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </a>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t  </agm-info-window>\n\t\t </agm-marker>\n\t</agm-map>\n</div>","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'most-visited-places',\n  templateUrl: './MostVisitedPlaces.component.html',\n  styleUrls: ['./MostVisitedPlaces.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MostVisitedPlacesComponent implements OnInit {\n\n   /** Title for baner **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Description for baner **/\n   @Input('desc') Desc: any = 'Description';\n\n   /** Description for baner **/\n   @Input('bgColor') BgColor: any = '#f8f8f8';\n\n   /** Background for baner **/\n   @Input('data') Data: any;\n\n   slideConfig = {\n                  infinite: true,\n                  slidesToShow: 3,\n                  slidesToScroll: 3,\n                  dots: true,\n                  arrows: true,\n                  responsive: [\n                      {\n                        breakpoint: 992,\n                        settings: {\n                          slidesToShow: 2,\n                          slidesToScroll: 2\n                        }\n                      },\n                      {\n                        breakpoint: 769,\n                        settings: {\n                          slidesToShow: 1,\n                          slidesToScroll: 1\n                        }\n                      }\n                 ]\n               };\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {}\n}\n","<div class=\"block-space bg-secondary\">\n\t <div class=\"container\">\n\t\t <div class=\"block-head text-center mb-5\">\n\t\t\t <h2 class=\"head-line display-3\">\n\t\t\t\t {{Title}}\n\t\t\t </h2>\n\t\t\t <p class=\"lead mt-2 head-desc text-primary\">{{Desc}}</p>\n\t\t </div>\n\t\t <div class=\"row\">\n\t\t\t <div class=\"col-md-12\">\n\t\t\t\t\t<ngx-slick-carousel class=\"carousel simple-slick-carousel dots-nav\" #slickModal=\"slick-carousel\" [config]=\"slideConfig\">\n\t\t\t\t        <div ngxSlickItem *ngFor=\"let place of Data\" class=\"slide carousel-item\">\n\t\t\t\t            <div class=\"category-box-container text-center\">\n\t\t\t\t\t\t\t\t\t<div class=\"listing-item-container\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"listing-item text-center\">\n\t\t\t\t\t\t\t\t\t \t\t<div class=\"mostviewed-bg\" [style.background]=\"'url(' + place.image + ')'\">\n\t\t\t\t\t\t\t\t\t\t \t\t<div class=\"listing-item-content\">\n\t\t\t\t\t\t\t\t\t\t\t \t\t<div class=\"list-logo\">\n\t\t\t\t\t\t\t\t\t\t\t  \t\t\t<a [routerLink]=\"['/listing/detail/version1']\" >  <img src=\"{{place.logo}}\" width=\"80\" height=\"80\" alt=\"\"></a>\n\t\t\t\t\t\t\t\t\t\t\t \t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-pill badge-primary text-uppercase category-banner\">{{place.category}}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"['/listing/detail/version1']\" >  <h3>{{place.title}} </h3></a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"mb-0\"> <small> {{place.address}}</small></p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-pill badge-primary text-uppercase open-close-banner\">{{place.badge}}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"round-pill like-banner d-block bg-primary\"><i class=\"fa fa-heart-o\"></i></span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t  </div>\n\t\t\t\t        </div>\n\t\t\t\t   </ngx-slick-carousel>\n\t\t\t </div>\n\t\t </div>\n\t </div>\n </div>\n \n ","import { Component, OnInit, AfterViewInit, ViewEncapsulation, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './Pagination.component.html',\n  styleUrls: ['./Pagination.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit {\n\n\n   constructor(private router: Router){}\n\n   ngOnInit(){\n\n   }\n\n   ngAfterViewInit()\n   {\n     \n   }\n}\n","<div class=\"row\">\n <div class=\"col-md-12\">\n\t <!-- Pagination -->\n\t <div class=\"mt-3\">\n\t\t <nav aria-label=\"Page navigation\">\n\t\t\t <ul class=\"pagination\">\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\"><i class=\"fa fa-angle-left\"></i></a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\">1</a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item active\">\n\t\t\t\t\t <a class=\"page-link\">2</a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\">3</a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\">4</a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\">5</a>\n\t\t\t\t </li>\n\t\t\t\t <li class=\"page-item\">\n\t\t\t\t\t <a class=\"page-link\"><i class=\"fa fa-angle-right\"></i></a>\n\t\t\t\t </li>\n\t\t\t </ul>\n\t\t </nav>\n\t </div>\n </div>\n</div>","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'parallax-section',\n  templateUrl: './Parallax.component.html',\n  styleUrls: ['./Parallax.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ParallaxComponent implements OnInit {\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n   }\n\n}\n","<div class=\"parallax\"\n   data-background=\"assets/images/slider-parallax.jpg\">\n   <!-- Infobox -->\n   <div class=\"text-content white-font block-space\">\n      <div class=\"container\">\n\n         <div class=\"row\">\n            <div class=\"col-lg-6 col-sm-8\">\n               <h2>Streamline Your Business</h2>\n               <p>We’re full-service, local agents who know how to find people and home each together. We use online tools with an unmatched search capability to make you smarter and faster.</p>\n               <a [routerLink]=\"['/listing/list/with-sidebar']\" class=\"btn btn-primary\">Get Started</a>\n            </div>\n         </div>\n      </div>\n   </div>\n   <!-- Infobox / End -->\n</div>","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'popular-categories',\n  templateUrl: './PopularCategories.component.html',\n  styleUrls: ['./PopularCategories.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PopularCategoriesComponent implements OnInit {\n\n   /** Title for baner **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Description for baner **/\n   @Input('desc') Desc: any = 'Description';\n\n   /** Background for baner **/\n   @Input('data') Data: any;\n\n   slideConfig = {\n        centerMode: true,\n        centerPadding: '15%',\n        slidesToShow: 3,\n        dots: true,\n        arrows: false,\n        responsive: [\n         {\n           breakpoint: 1441,\n           settings: {\n             centerPadding: '10%',\n             slidesToShow: 3\n           }\n         },\n         {\n           breakpoint: 1025,\n           settings: {\n             centerPadding: '10px',\n             slidesToShow: 2,\n           }\n         },\n         {\n           breakpoint: 767,\n           settings: {\n             centerPadding: '10px',\n             slidesToShow: 1\n           }\n         }\n        ]\n      };\n\n   constructor(){}\n\n   ngOnInit(){\n   \n   }\n\n   ngAfterViewInit()\n   { }\n}\n","<div class=\"block-space\">\n    <div class=\"container\">\n        <div class=\"block-head text-center mb-5\">\n            <h2 class=\"head-line display-3\">\n                {{Title}}\n            </h2>\n            <p class=\"lead mt-2 head-desc text-primary\">{{Desc}}</p>\n        </div>\n    </div>\n    <!-- Categories Carousel -->\n    <div class=\"fullwidth-carousel-container\">\n        <div class=\"fullwidth-slick-carousel category-carousel\">\n            <!-- Item -->\n            <ngx-slick-carousel class=\"carousel fullwidth-slick-carousel category-carousel\"  #slickModal=\"slick-carousel\" [config]=\"slideConfig\">\n                <div ngxSlickItem *ngFor=\"let item of Data\" class=\"slide fw-carousel-item slide\">\n                    <div class=\"category-box-container text-center\">\n                        <div  class=\"category-box\">\n                            <div class=\"category-box-content\">\n                                <div class=\"icon-title\">\n                                    <i class=\"{{item.icon}}\"></i>\n                                </div>\n                              <a [routerLink]=\"['/listing/grid/with-sidebar']\">  <h3>{{item.title}}</h3></a>\n                                <span> <small>{{item.subTitle}}</small> </span>\n                            </div>\n                            <div class=\"category-box-background\" [ngStyle]=\"{'background-image': 'url(' + item.image + ')'}\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ngx-slick-carousel>\n        </div>\n    </div>\n    <!-- Categories Carousel / End -->\n</div>","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'pricing',\n  templateUrl: './Pricing.component.html',\n  styleUrls: ['./Pricing.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PricingComponent implements OnInit {\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","\n\n<div class=\"block-space\">\n   <!-- Container / Start -->\n   <div class=\"container\">\n      <div class=\"block-head text-center \">\n         <h2 class=\"head-line display-3 mb-5\" > Get an Exposure For Your Listing </h2>\n      </div>\n      <!-- Row / Start -->\n      <div class=\"row pt-4\">\n         <div class=\"col-md-12\">\n            <div class=\"pricing-container margin-top-30\">\n               <!-- Plan #1 -->\n               <div class=\"plan\">\n                  <div class=\"plan-price\">\n                     <h3>Basic</h3>\n                     <span class=\"value\">Free</span>\n                     <span class=\"period\">Free of charge one standard listing active for 30 days</span>\n                  </div>\n                  <div class=\"plan-features\">\n                     <ul>\n                        <li>One Listing</li>\n                        <li>30 Days Availability</li>\n                        <li>Standard Listing</li>\n                        <li>Limited Support</li>\n                     </ul>\n                     <a href=\"#\" class=\"btn btn-1 btn-outline-primary btn-radius\">Get Started</a>\n                  </div>\n               </div>\n               <!-- Plan #3 -->\n               <div class=\"plan featured\">\n                  <div class=\"listing-badge\">\n                     <span class=\"featured\">Featured</span>\n                  </div>\n                  <div class=\"plan-price\">\n                     <h3>Extended</h3>\n                     <span class=\"value\">$9.99</span>\n                     <span class=\"period\">One time fee for one listing, highlighted in the search results</span>\n                  </div>\n                  <div class=\"plan-features\">\n                     <ul>\n                        <li>One Time Fee</li>\n                        <li>One Listing</li>\n                        <li>90 Days Availability</li>\n                        <li>Featured In Search Results</li>\n                        <li>24/7 Support</li>\n                     </ul>\n                     <a class=\"btn btn-primary btn-radius\" href=\"#\">Get Started</a>\n                  </div>\n               </div>\n               <!-- Plan #3 -->\n               <div class=\"plan\">\n                  <div class=\"plan-price\">\n                     <h3>Professional</h3>\n                     <span class=\"value\">$19.99</span>\n                     <span class=\"period\">Monthly subscription for unlimited listings and availability</span>\n                  </div>\n                  <div class=\"plan-features\">\n                     <ul>\n                        <li>Unlimited Listings</li>\n                        <li>Unlimited Availability</li>\n                        <li>Featured In Search Results</li>\n                        <li>24/7 Support</li>\n                     </ul>\n                     <a href=\"#\" class=\"btn btn-1 btn-outline-primary btn-radius\">Get Started</a>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <!-- Row / End -->\n   </div>\n   <!-- Container / End -->\n</div>\n         \n         ","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'DirectlistRating',\n  templateUrl: './Rating.component.html',\n  styleUrls: ['./Rating.component.scss']\n})\nexport class RatingComponent implements OnInit {\n\n   @Input() rate : any;\n   @Input() review : any = '(12 reviews)';\n\n   constructor() { }\n\n   ngOnInit() {\n   }\n\n}\n","<ng-container *ngIf=\"rate\">\n   <!-- <bar-rating [(rate)]=\"rate\" max=\"5\" readOnly=true></bar-rating> <span class=\"num-rate\"> {{review}}</span> -->\n</ng-container>\n","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'recent-blog',\n  templateUrl: './RecentBlog.component.html',\n  styleUrls: ['./RecentBlog.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class RecentBlogComponent implements OnInit {\n\n   /** Title for baner **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Background for baner **/\n   @Input('data') Data: any;\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"block-space bg-secondary\">\n\t\t  <div class=\"block-head text-center mb-5\">\n\t\t\t\t\t <h2 class=\"head-line display-3\">\n\t\t\t\t\t\t  {{Title}}\n\t\t\t\t\t </h2>\n\t\t\t\t\t <p class=\"lead mt-2 head-desc text-primary\">Hassel Free Service</p>\n\t\t\t\t</div>\n\t\t  <div class=\"container\">\n\t\t\t <div class=\"row justify-content-center\">\n\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t  <div class=\"row row-grid\">\n\t\t\t\t\t <div class=\"col-lg-4\" *ngFor=\"let blog of Data\">\n\t\t\t\t\t\t<div class=\"card card-lift--hover shadow border-0\">\n\t\t\t\t\t\t  <img class=\"img-fluid\" src=\"{{blog.image}}\" alt=\"\">\n\t\t\t\t\t\t  <div class=\"card-body py-4\">\n\t\t\t\t\t\t\t <h5>{{blog.title}}</h5>\n\t\t\t\t\t\t\t <p class=\"text-muted\">{{blog.date}}</p>\n\t\t\t\t\t\t\t <!-- <div>\n\t\t\t\t\t\t\t\t  <span class=\"badge badge-pill badge-primary mr-1\">{{blog.tag}}</span>\n\t\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t <p class=\"description mb-4\">{{blog.desc}}</p>\n\t\t\t\t\t\t\t <a routerLink='/pages/blog/detail' class=\"btn btn-primary\">Read More</a>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t </div>\n\t\t  </div>\n\t </div>\n\n\n","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'services-section',\n  templateUrl: './Services.component.html',\n  styleUrls: ['./Services.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ServicesComponent implements OnInit {\n\n   /** Title for service **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Description for service **/\n   @Input('desc') Desc: any = 'Description';\n\n   /** Background for service **/\n   @Input('data') Data: any;\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"block-space bg-primary\">\n\t<div class=\"block-head text-center mb-5\">\n\t\t<h2 class=\"head-line text-white display-3\">\n\t\t\t{{Title}}\n\t\t</h2>\n\t\t<div class=\"col-12 col-md-7 mx-auto\">\n\t\t\t<p class=\"lead mt-2 head-desc text-white\">{{Desc}}</p>\n\t\t</div>\n\t</div>\n\t<div class=\"container\">\n\t\t<div class=\"row row-grid mt-5\">\n\t\t\t<div class=\"col-lg-4 text-center\" *ngFor=\"let service of Data\">\n\t\t\t\t<div class=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n\t\t\t\t\t<i class=\"{{service.icon}}\"></i>\n\t\t\t\t</div>\n\t\t\t\t<h5 class=\"text-white mt-3\">{{service.title}}</h5>\n\t\t\t\t<p class=\"text-white mt-3\">{{service.desc}}</p>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\t\n\t","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'team',\n  templateUrl: './Team.component.html',\n  styleUrls: ['./Team.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TeamComponent implements OnInit {\n\n   /** Title for section **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Desc for section **/\n   @Input('desc') Desc: any = 'Dummy Description';\n\n   /** Background for section **/\n   @Input('data') Data: any;\n\n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n\n   }\n}\n","<div class=\"block-space\">\n  <div class=\"container\">\n\t <div class=\"row justify-content-center text-center mb-5\">\n\t\t<div class=\"col-lg-8\">\n\t\t  <h2 class=\"display-3\">{{Title}}</h2>\n\t\t  <p class=\"lead text-muted\">{{Desc}}</p>\n\t\t</div>\n\t </div>\n\t <div class=\"row\">\n\t\t<div class=\"col-md-6 col-lg-3 mb-5 mb-lg-0\" *ngFor=\"let member of Data\">\n\t\t  <div class=\"px-4\">\n\t\t\t <img src=\"{{member.image}}\" class=\"rounded-circle img-center img-fluid shadow shadow-lg--hover\" style=\"width: 200px;\">\n\t\t\t <div class=\"pt-4 text-center\">\n\t\t\t\t<h5 class=\"title\">\n\t\t\t\t  <span class=\"d-block mb-1\">{{member.name}}</span>\n\t\t\t\t  <small class=\"h6 text-muted\">{{member.position}}</small>\n\t\t\t\t</h5>\n\t\t\t\t<div class=\"mt-3\">\n\t\t\t\t  <a class=\"btn btn-success btn-icon-only rounded-circle\">\n\t\t\t\t\t <i class=\"fa fa-twitter text-white\"></i>\n\t\t\t\t  </a>\n\t\t\t\t  <a class=\"btn btn-success btn-icon-only rounded-circle\">\n\t\t\t\t\t <i class=\"fa fa-facebook text-white\"></i>\n\t\t\t\t  </a>\n\t\t\t\t  <a class=\"btn btn-success btn-icon-only rounded-circle\">\n\t\t\t\t\t <i class=\"fa fa-dribbble text-white\"></i>\n\t\t\t\t  </a>\n\t\t\t\t</div>\n\t\t\t </div>\n\t\t  </div>\n\t\t</div>\n\t </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'testimonial',\n  templateUrl: './Testimonial.component.html',\n  styleUrls: ['./Testimonial.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TestimonialComponent implements OnInit {\n\n\n   /** Title for baner **/\n   @Input('title') Title: any = 'Dummy Title';\n\n   /** Description for baner **/\n   @Input('desc') Desc: any = 'Description';\n\n   /** Background for baner **/\n   @Input('data') Data: any;\n\n   slideConfig = \n            {\n              centerMode: true,\n              centerPadding: '34%',\n              slidesToShow: 1,\n              dots: true,\n              arrows: false,\n              responsive: [\n               {\n                 breakpoint: 1025,\n                 settings: {\n                   centerPadding: '10px',\n                   slidesToShow: 2,\n                 }\n               },\n               {\n                 breakpoint: 767,\n                 settings: {\n                   centerPadding: '10px',\n                   slidesToShow: 1\n                 }\n               }\n              ]\n            };\n   \n   constructor(){}\n\n   ngOnInit(){}\n\n   ngAfterViewInit()\n   {\n   }\n}\n","<div class=\"block-space bg-secondary\" >\n\t<!-- Info Section -->\n\t<div class=\"block-head text-center mb-5\">\n\t\t<h2 class=\"head-line display-3\"> {{Title}} </h2>\n\t\t<div class=\"col-12 col-md-7 mx-auto\">\n\t\t\t<p class=\"lead mt-2 head-desc\">{{Desc}}</p>\n\t\t</div>\n\t</div>\n\t<!-- Info Section / End -->\n\t<!-- Categories Carousel -->\n\t<div class=\"fullwidth-carousel-container margin-top-20\">\n\t\t<ngx-slick-carousel class=\"carousel testimonial-carousel testimonials\" \n         #slickModal=\"slick-carousel\" [config]=\"slideConfig\" >\n        <div ngxSlickItem *ngFor=\"let testimonial of Data\" class=\"slide fw-carousel-review\">\n        \t\t<div class=\"testimonial-box\">\n\t\t\t\t\t<div class=\"testimonial\">{{testimonial.message}}</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"testimonial-author\">\n\t\t\t\t\t<img src=\"{{testimonial.image}}\" alt=\"\">\n\t\t\t\t\t<h4>{{testimonial.name}} <span>{{testimonial.position}}</span></h4>\n\t\t\t\t</div>\n        </div>\n   \t</ngx-slick-carousel>\n\t</div>\n\t<!-- Categories Carousel / End -->\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { AgmCoreModule } from '@agm/core';\nimport { RouterModule } from '@angular/router';\n// import { BarRatingModule } from \"ngx-bar-rating\";\nimport { SlickCarouselModule } from 'ngx-slick-carousel';\n\nimport { MapBannerComponent } from '../globalFrontendComponents/MapBanner/MapBanner.component';\nimport { TitleBarComponent } from '../globalFrontendComponents/TitleBar/TitleBar.component';\nimport { PaginationComponent } from '../globalFrontendComponents/Pagination/Pagination.component';\nimport { RatingComponent } from '../globalFrontendComponents/Rating/Rating.component';\nimport { TeamComponent } from './Team/Team.component';\nimport { BannerComponent } from './Banner/Banner.component';\nimport { PopularCategoriesComponent } from './PopuplarCategories/PopularCategories.component';\nimport { MostVisitedPlacesComponent } from './MostVisitedPlaces/MostVisitedPlaces.component';\nimport { RecentBlogComponent } from './RecentBlog/RecentBlog.component';\nimport { FeatureSectionComponent } from './FeatureSection/FeatureSection.component';\nimport { TestimonialComponent } from './Testimonial/Testimonial.component';\nimport { FeatureGridSectionComponent } from '../globalFrontendComponents/FeatureGridSection/FeatureGridSection.component';\nimport { PricingComponent } from './Pricing/Pricing.component';\nimport { ParallaxComponent } from './ParallaxSection/Parallax.component';\nimport { ServicesComponent } from './Services/Services.component';\n\n@NgModule({\n   imports : [\n   CommonModule,\n   RouterModule,\n   // BarRatingModule,\n   SlickCarouselModule,\n   AgmCoreModule.forRoot({apiKey: 'AIzaSyBtdO5k6CRntAMJCF-H5uZjTCoSGX95cdk'})],\n  declarations: [\n    MapBannerComponent,\n    TitleBarComponent,\n    PaginationComponent,\n    RatingComponent,\n    TeamComponent,\n    BannerComponent ,\n     PopularCategoriesComponent,\n     MostVisitedPlacesComponent,\n     RecentBlogComponent,\n     FeatureSectionComponent,\n     TestimonialComponent,\n     FeatureGridSectionComponent,\n     PricingComponent,\n     ParallaxComponent,\n     ServicesComponent\n  ],\n  exports: [ \n     MapBannerComponent,\n     TitleBarComponent,\n     PaginationComponent,\n     RatingComponent,\n     TeamComponent,\n     BannerComponent ,\n     PopularCategoriesComponent,\n     MostVisitedPlacesComponent,\n     RecentBlogComponent,\n     FeatureSectionComponent,\n     TestimonialComponent,\n     FeatureGridSectionComponent,\n     PricingComponent,\n     ParallaxComponent,\n     ServicesComponent\n   ]\n})\n\nexport class GlobalModule {}\n"],"sourceRoot":"webpack:///"}